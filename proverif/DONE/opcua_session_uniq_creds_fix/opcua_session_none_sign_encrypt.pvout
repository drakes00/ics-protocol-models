File "opcua_session_none_sign_encrypt.pv", line 104, character 48 - line 104, character 50:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,Sess,pkCli,Nc) in
    {18}out(c, m1);
    {19}in(c, m2: bitstring);
    {20}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
    {21}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
    {22}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
    {23}out(c, m3);
    {24}in(c, m4: bitstring);
    {25}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    {26}if ((Sess = A) || (Sess = B)) then
    {27}event endCli(Sess,Cli,Ns)
) | (
    {28}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {29}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {30}let pkCli_84: bitstring = pub(skCli_83) in
    {31}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {32}let pkSess_86: bitstring = pub(skSess_85) in
    {33}let tmp_87: bitstring = (if ((Cli_80 <> A) && (Cli_80 <> B)) then K_82 else CreateSessionRequest) in
    {34}out(c, tmp_87);
    {35}in(c, (em1: bitstring,sigM1: bitstring));
    {36}new Nc_88: bitstring;
    {37}let m1_89: bitstring = sdec(em1,K_82) in
    {38}if (verifySign(h(m1_89),sigM1,pkCli_84) <> true) then
        0
    else
        {39}let (=CreateSessionRequest,=Sess_81,=pkCli_84,Nc_90: bitstring) = m1_89 in
        {40}new Ns_91: bitstring;
        {41}event beginSrv(Sess_81,Cli_80,Ns_91);
        {42}let m2_92: bitstring = (CreateSessionResponse,Cli_80,pkSess_86,Nc_90,Ns_91) in
        {43}out(c, (senc(m2_92,K_82),sign(h(m2_92),skSess_85)));
        {44}in(c, (em3: bitstring,sigM3: bitstring));
        {45}let m3_93: bitstring = sdec(em3,K_82) in
        {46}if (verifySign(h(m3_93),sigM3,pkCli_84) <> true) then
            0
        else
            {47}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_93 in
            {48}if (verifyCreds(skSess_85,login,passwd) <> true) then
                0
            else
                {49}new Ns2_94: bitstring;
                {50}let m4_95: bitstring = (ActivateSessionResponse,Ns2_94) in
                {51}out(c, (senc(m4_95,K_82),sign(h(m4_95),skSess_85)));
                {52}if ((Cli_80 = A) || (Cli_80 = B)) then
                {53}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 124 rules. 46 rules in the queue.
400 rules inserted. The rule base contains 231 rules. 63 rules in the queue.
600 rules inserted. The rule base contains 268 rules. 48 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: attacker(N_11291) -> end(endCli(A[],B[],N_11291))
Abbreviations:
Nc_11320 = Nc[Sess = A[],Cli = B[],!1 = @sid_11315]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. We assume as hypothesis that
attacker(N_11319).

5. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,A[],pub(skB[]),Nc_11320) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,A[],pub(skB[]),Nc_11320)).

6. By 5, the attacker may know (CreateSessionRequest,A[],pub(skB[]),Nc_11320).
Using the function 4-proj-4-tuple the attacker may obtain Nc_11320.
attacker(Nc_11320).

7. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 2, the attacker may know B[].
By 7, the attacker may know pub(skA[]).
By 6, the attacker may know Nc_11320.
By 4, the attacker may know N_11319.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,B[],pub(skA[]),Nc_11320,N_11319).
attacker((CreateSessionResponse,B[],pub(skA[]),Nc_11320,N_11319)).

10. The attacker has some term Ns2_11314.
attacker(Ns2_11314).

11. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

12. By 11, the attacker may know ActivateSessionResponse.
By 10, the attacker may know Ns2_11314.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_11314).
attacker((ActivateSessionResponse,Ns2_11314)).

13. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,B[],pub(skA[]),Nc_11320,N_11319) that the attacker may have by 9 may be received at input {19}.
The message (ActivateSessionResponse,Ns2_11314) that the attacker may have by 12 may be received at input {24}.
So event endCli(A[],B[],N_11319) may be executed at {27}.
end(endCli(A[],B[],N_11319)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_11421 at {6} in copy a_11322

in(c, (B,A)) at {7} in copy a_11322

new K creating K_11436 at {8} in copy a_11322

out(ch_11421, (B,A,K_11436)) at {9} in copy a_11322 received at {28} in copy a_11322

out(c, CreateSessionRequest) at {34} in copy a_11322

out(c, CreateSessionRequest) at {15} in copy a_11322

new Nc creating Nc_11323 at {16} in copy a_11322

out(c, (CreateSessionRequest,A,pub(skB),Nc_11323)) at {18} in copy a_11322

in(c, (CreateSessionResponse,B,pub(skA),Nc_11323,a)) at {19} in copy a_11322

event(beginCli(B,A,(Login(pub(skB)),Passwd(skB,pub(skA))))) at {21} in copy a_11322

out(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB,pub(skA)))) at {23} in copy a_11322

in(c, (ActivateSessionResponse,a_11321)) at {24} in copy a_11322

event(endCli(A,B,a)) at {27} in copy a_11322

The event endCli(A,B,a) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_11657,Y_11658,N_11659)) ==> event(beginCli(X_11657,Y_11658,N_11659))
Completing...
200 rules inserted. The rule base contains 130 rules. 46 rules in the queue.
400 rules inserted. The rule base contains 243 rules. 90 rules in the queue.
600 rules inserted. The rule base contains 314 rules. 62 rules in the queue.
800 rules inserted. The rule base contains 322 rules. 36 rules in the queue.
Starting query event(endSrv(X_11657,Y_11658,N_11659)) ==> event(beginCli(X_11657,Y_11658,N_11659))
RESULT event(endSrv(X_11657,Y_11658,N_11659)) ==> event(beginCli(X_11657,Y_11658,N_11659)) is true.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 128 rules. 44 rules in the queue.
400 rules inserted. The rule base contains 244 rules. 62 rules in the queue.
600 rules inserted. The rule base contains 267 rules. 41 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
goal reachable: attacker(Passwd(skA[],pub(skB[])))
Abbreviations:
Nc_29920 = Nc[Sess = B[],Cli = A[],!1 = @sid_29914]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Ns_29915.
attacker(Ns_29915).

5. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,B[],pub(skA[]),Nc_29920) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,B[],pub(skA[]),Nc_29920)).

6. By 5, the attacker may know (CreateSessionRequest,B[],pub(skA[]),Nc_29920).
Using the function 4-proj-4-tuple the attacker may obtain Nc_29920.
attacker(Nc_29920).

7. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 7, the attacker may know pub(skB[]).
By 6, the attacker may know Nc_29920.
By 4, the attacker may know Ns_29915.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(skB[]),Nc_29920,Ns_29915).
attacker((CreateSessionResponse,A[],pub(skB[]),Nc_29920,Ns_29915)).

10. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,A[],pub(skB[]),Nc_29920,Ns_29915) that the attacker may have by 9 may be received at input {19}.
So the message (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))).

11. By 10, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],pub(skB[])).
attacker(Passwd(skA[],pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_30022 at {6} in copy a_29921

in(c, (A,B)) at {7} in copy a_29921

new K creating K_30037 at {8} in copy a_29921

out(ch_30022, (A,B,K_30037)) at {9} in copy a_29921 received at {28} in copy a_29921

out(c, CreateSessionRequest) at {34} in copy a_29921

out(c, CreateSessionRequest) at {15} in copy a_29921

new Nc creating Nc_29923 at {16} in copy a_29921

out(c, (CreateSessionRequest,B,pub(skA),Nc_29923)) at {18} in copy a_29921

in(c, (CreateSessionResponse,A,pub(skB),Nc_29923,a_29922)) at {19} in copy a_29921

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {21} in copy a_29921

out(c, (ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))) at {23} in copy a_29921

The attacker has the message Passwd(skA,pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skB[]))) is false.
