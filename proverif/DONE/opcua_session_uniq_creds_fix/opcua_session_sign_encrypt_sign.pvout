Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,Sess,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verifySign(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verifySign(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Sess = A) || (Sess = B)) then
            {31}event endCli(Sess,Cli,Ns)
) | (
    {32}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {33}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {34}let pkCli_84: bitstring = pub(skCli_83) in
    {35}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {36}let pkSess_86: bitstring = pub(skSess_85) in
    {37}let tmp_87: bitstring = (if ((Cli_80 <> A) && (Cli_80 <> B)) then K_82 else CreateSessionRequest) in
    {38}out(c, tmp_87);
    {39}in(c, (m1_88: bitstring,sigM1: bitstring));
    {40}if (verifySign(h(m1_88),sigM1,pkCli_84) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=Sess_81,=pkCli_84,Nc_89: bitstring) = m1_88 in
        {42}new Ns_90: bitstring;
        {43}event beginSrv(Sess_81,Cli_80,Ns_90);
        {44}let m2_91: bitstring = (CreateSessionResponse,Cli_80,pkSess_86,Nc_89,Ns_90) in
        {45}out(c, (m2_91,sign(h(m2_91),skSess_85)));
        {46}in(c, (m3_92: bitstring,sigM3: bitstring));
        {47}if (verifySign(h(m3_92),sigM3,pkCli_84) <> true) then
            0
        else
            {48}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_92 in
            {49}if (verifyCreds(skSess_85,login,passwd) <> true) then
                0
            else
                {50}new Ns2_93: bitstring;
                {51}let m4_94: bitstring = (ActivateSessionResponse,Ns2_93) in
                {52}out(c, (m4_94,sign(h(m4_94),skSess_85)));
                {53}if ((Cli_80 = A) || (Cli_80 = B)) then
                {54}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 136 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 210 rules. 46 rules in the queue.
600 rules inserted. The rule base contains 238 rules. 36 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_11147,Y_11148,N_11149)) ==> event(beginCli(X_11147,Y_11148,N_11149))
Completing...
200 rules inserted. The rule base contains 136 rules. 76 rules in the queue.
400 rules inserted. The rule base contains 200 rules. 54 rules in the queue.
600 rules inserted. The rule base contains 238 rules. 48 rules in the queue.
Starting query event(endSrv(X_11147,Y_11148,N_11149)) ==> event(beginCli(X_11147,Y_11148,N_11149))
RESULT event(endSrv(X_11147,Y_11148,N_11149)) ==> event(beginCli(X_11147,Y_11148,N_11149)) is true.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 140 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 210 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 234 rules. 24 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
RESULT not attacker(Passwd(skA[],pub(skB[]))) is true.
