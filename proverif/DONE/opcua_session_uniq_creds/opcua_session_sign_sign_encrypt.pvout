File "opcua_session_sign_sign_encrypt.pv", line 106, character 41 - line 106, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verifySign(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {23}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verifySign(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Nc)
) | (
    {30}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {31}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {32}let pkCli_84: bitstring = pub(skCli_83) in
    {33}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {34}let pkSess_86: bitstring = pub(skSess_85) in
    {35}let tmp_87: bitstring = (if ((Cli_80 <> A) && (Cli_80 <> B)) then K_82 else CreateSessionRequest) in
    {36}out(c, tmp_87);
    {37}in(c, (em1: bitstring,sigM1: bitstring));
    {38}new Nc_88: bitstring;
    {39}let m1_89: bitstring = sdec(em1,K_82) in
    {40}if (verifySign(h(m1_89),sigM1,pkCli_84) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=pkCli_84,Nc_90: bitstring) = m1_89 in
        {42}new Ns_91: bitstring;
        {43}event beginSrv(Sess_81,Cli_80,Nc_90);
        {44}let m2_92: bitstring = (CreateSessionResponse,pkSess_86,Nc_90,Ns_91) in
        {45}out(c, (senc(m2_92,K_82),sign(h(m2_92),skSess_85)));
        {46}in(c, (em3: bitstring,sigM3: bitstring));
        {47}let m3_93: bitstring = sdec(em3,K_82) in
        {48}if (verifySign(h(m3_93),sigM3,pkCli_84) <> true) then
            0
        else
            {49}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_93 in
            {50}if (verifyCreds(skSess_85,login,passwd) <> true) then
                0
            else
                {51}new Ns2_94: bitstring;
                {52}let m4_95: bitstring = (ActivateSessionResponse,Ns2_94) in
                {53}out(c, (senc(m4_95,K_82),sign(h(m4_95),skSess_85)));
                {54}if ((Cli_80 = A) || (Cli_80 = B)) then
                {55}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 142 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 246 rules. 110 rules in the queue.
600 rules inserted. The rule base contains 276 rules. 109 rules in the queue.
800 rules inserted. The rule base contains 377 rules. 48 rules in the queue.
1000 rules inserted. The rule base contains 394 rules. 66 rules in the queue.
1200 rules inserted. The rule base contains 493 rules. 48 rules in the queue.
1400 rules inserted. The rule base contains 556 rules. 74 rules in the queue.
1600 rules inserted. The rule base contains 595 rules. 35 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: Cli_22760 <> B[] && Cli_22760 <> A[] && begin(beginSrv(B[],Cli_22760,Nc[Sess = B[],Cli = A[],!1 = @sid_22761])) && attacker(Cli_22760) -> end(endCli(B[],A[],Nc[Sess = B[],Cli = A[],!1 = @sid_22761]))
Abbreviations:
Nc_22999 = Nc[Sess = B[],Cli = A[],!1 = @sid_22994]
K_23000 = K[Sess = B[],Cli = Cli_22975,!1 = @sid_22896]
Ns2_23001 = Ns2_94[sigM3 = sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975)),em3 = senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000),sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)),em1 = senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000),K_82 = K_23000,Sess_81 = B[],Cli_80 = Cli_22975,!1 = @sid_22896]
ch_23002 = ch[!1 = @sid_22896]
K_23003 = K[Sess = B[],Cli = Cli_22975,!1 = @sid_22978]
Ns_23004 = Ns_91[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)),em1 = senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003),K_82 = K_23003,Sess_81 = B[],Cli_80 = Cli_22975,!1 = @sid_22978]
ch_23005 = ch[!1 = @sid_22978]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. We assume as hypothesis that
attacker(Cli_22975).

5. By 4, the attacker may know Cli_22975.
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (Cli_22975,B[]).
attacker((Cli_22975,B[])).

6. The message (Cli_22975,B[]) that the attacker may have by 5 may be received at input {7}.
So the message (Cli_22975,B[],K_23003) may be sent on channel ch_23005 at output {9}.
mess(ch_23005,(Cli_22975,B[],K_23003)).

7. By 4, the attacker may know Cli_22975.
Using the function sk the attacker may obtain sk(Cli_22975).
attacker(sk(Cli_22975)).

8. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_22999),sign(h((CreateSessionRequest,pub(skA[]),Nc_22999)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_22999),sign(h((CreateSessionRequest,pub(skA[]),Nc_22999)),skA[]))).

9. By 8, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_22999),sign(h((CreateSessionRequest,pub(skA[]),Nc_22999)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_22999).
attacker((CreateSessionRequest,pub(skA[]),Nc_22999)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_22999).
Using the function 3-proj-3-tuple the attacker may obtain Nc_22999.
attacker(Nc_22999).

11. By 7, the attacker may know sk(Cli_22975).
Using the function pub the attacker may obtain pub(sk(Cli_22975)).
attacker(pub(sk(Cli_22975))).

12. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

13. By 12, the attacker may know CreateSessionRequest.
By 11, the attacker may know pub(sk(Cli_22975)).
By 10, the attacker may know Nc_22999.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999).
attacker((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)).

14. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999).
Using the function h the attacker may obtain h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)).
attacker(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999))).

15. By 14, the attacker may know h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)).
By 7, the attacker may know sk(Cli_22975).
Using the function sign the attacker may obtain sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)).
attacker(sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975))).

16. The message (Cli_22975,B[],K_23003) that may be sent on channel ch_23005 by 6 may be received at input {30}.
We have Cli_22975 <> B[] & Cli_22975 <> A[].
So the message K_23003 may be sent to the attacker at output {36}.
attacker(K_23003).

17. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999).
By 16, the attacker may know K_23003.
Using the function senc the attacker may obtain senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003).
attacker(senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003)).

18. By 17, the attacker may know senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975))).
attacker((senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)))).

19. The message (Cli_22975,B[],K_23003) that may be sent on channel ch_23005 by 6 may be received at input {30}.
The message (senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23003),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975))) that the attacker may have by 18 may be received at input {37}.
The event beginSrv(B[],Cli_22975,Nc_22999) may be executed at {43}.
We have Cli_22975 <> B[] & Cli_22975 <> A[].
So the message (senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])) may be sent to the attacker at output {45}.
attacker((senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[]))).

20. By 19, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])).

21. By 19, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003).
attacker(senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003)).

22. By 21, the attacker may know senc((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),K_23003).
By 16, the attacker may know K_23003.
Using the function sdec the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004).
attacker((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)).

23. By 22, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004).
Using the function 4-proj-4-tuple the attacker may obtain Ns_23004.
attacker(Ns_23004).

24. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

25. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

26. By 25, the attacker may know CreateSessionResponse.
By 24, the attacker may know pub(skB[]).
By 10, the attacker may know Nc_22999.
By 23, the attacker may know Ns_23004.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004).
attacker((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)).

27. By 26, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004).
By 20, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[]))).

28. The message (Cli_22975,B[]) that the attacker may have by 5 may be received at input {7}.
So the message (Cli_22975,B[],K_23000) may be sent on channel ch_23002 at output {9}.
mess(ch_23002,(Cli_22975,B[],K_23000)).

29. The message (Cli_22975,B[],K_23000) that may be sent on channel ch_23002 by 28 may be received at input {30}.
We have Cli_22975 <> B[] & Cli_22975 <> A[].
So the message K_23000 may be sent to the attacker at output {36}.
attacker(K_23000).

30. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999).
By 29, the attacker may know K_23000.
Using the function senc the attacker may obtain senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000).
attacker(senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000)).

31. By 30, the attacker may know senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975))).
attacker((senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975)))).

32. The attacker has some term y_22893.
attacker(y_22893).

33. By 32, the attacker may know y_22893.
By 24, the attacker may know pub(skB[]).
Using the function Passwd the attacker may obtain Passwd(y_22893,pub(skB[])).
attacker(Passwd(y_22893,pub(skB[]))).

34. By 32, the attacker may know y_22893.
Using the function pub the attacker may obtain pub(y_22893).
attacker(pub(y_22893)).

35. By 34, the attacker may know pub(y_22893).
Using the function Login the attacker may obtain Login(pub(y_22893)).
attacker(Login(pub(y_22893))).

36. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

37. By 36, the attacker may know ActivateSessionRequest.
By 11, the attacker may know pub(sk(Cli_22975)).
By 35, the attacker may know Login(pub(y_22893)).
By 33, the attacker may know Passwd(y_22893,pub(skB[])).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))).
attacker((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))).

38. By 37, the attacker may know (ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))).
Using the function h the attacker may obtain h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))).
attacker(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))))).

39. By 38, the attacker may know h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))).
By 7, the attacker may know sk(Cli_22975).
Using the function sign the attacker may obtain sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975)).
attacker(sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975))).

40. By 37, the attacker may know (ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))).
By 29, the attacker may know K_23000.
Using the function senc the attacker may obtain senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000).
attacker(senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000)).

41. By 40, the attacker may know senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000).
By 39, the attacker may know sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975)).
Using the function 2-tuple the attacker may obtain (senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000),sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975))).
attacker((senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000),sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975)))).

42. The message (Cli_22975,B[],K_23000) that may be sent on channel ch_23002 by 28 may be received at input {30}.
The message (senc((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999),K_23000),sign(h((CreateSessionRequest,pub(sk(Cli_22975)),Nc_22999)),sk(Cli_22975))) that the attacker may have by 31 may be received at input {37}.
The event beginSrv(B[],Cli_22975,Nc_22999) may be executed at {43}.
The message (senc((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[]))),K_23000),sign(h((ActivateSessionRequest,pub(sk(Cli_22975)),Login(pub(y_22893)),Passwd(y_22893,pub(skB[])))),sk(Cli_22975))) that the attacker may have by 41 may be received at input {46}.
We have Cli_22975 <> B[] & Cli_22975 <> A[].
So the message (senc((ActivateSessionResponse,Ns2_23001),K_23000),sign(h((ActivateSessionResponse,Ns2_23001)),skB[])) may be sent to the attacker at output {53}.
attacker((senc((ActivateSessionResponse,Ns2_23001),K_23000),sign(h((ActivateSessionResponse,Ns2_23001)),skB[]))).

43. By 42, the attacker may know (senc((ActivateSessionResponse,Ns2_23001),K_23000),sign(h((ActivateSessionResponse,Ns2_23001)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionResponse,Ns2_23001)),skB[]).
attacker(sign(h((ActivateSessionResponse,Ns2_23001)),skB[])).

44. By 42, the attacker may know (senc((ActivateSessionResponse,Ns2_23001),K_23000),sign(h((ActivateSessionResponse,Ns2_23001)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionResponse,Ns2_23001),K_23000).
attacker(senc((ActivateSessionResponse,Ns2_23001),K_23000)).

45. By 44, the attacker may know senc((ActivateSessionResponse,Ns2_23001),K_23000).
By 29, the attacker may know K_23000.
Using the function sdec the attacker may obtain (ActivateSessionResponse,Ns2_23001).
attacker((ActivateSessionResponse,Ns2_23001)).

46. By 45, the attacker may know (ActivateSessionResponse,Ns2_23001).
Using the function 2-proj-2-tuple the attacker may obtain Ns2_23001.
attacker(Ns2_23001).

47. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

48. By 47, the attacker may know ActivateSessionResponse.
By 46, the attacker may know Ns2_23001.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_23001).
attacker((ActivateSessionResponse,Ns2_23001)).

49. By 48, the attacker may know (ActivateSessionResponse,Ns2_23001).
By 43, the attacker may know sign(h((ActivateSessionResponse,Ns2_23001)),skB[]).
Using the function 2-tuple the attacker may obtain ((ActivateSessionResponse,Ns2_23001),sign(h((ActivateSessionResponse,Ns2_23001)),skB[])).
attacker(((ActivateSessionResponse,Ns2_23001),sign(h((ActivateSessionResponse,Ns2_23001)),skB[]))).

50. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004),sign(h((CreateSessionResponse,pub(skB[]),Nc_22999,Ns_23004)),skB[])) that the attacker may have by 27 may be received at input {19}.
The message ((ActivateSessionResponse,Ns2_23001),sign(h((ActivateSessionResponse,Ns2_23001)),skB[])) that the attacker may have by 49 may be received at input {25}.
So event endCli(B[],A[],Nc_22999) may be executed at {29}.
end(endCli(B[],A[],Nc_22999)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_23188 at {6} in copy a

new ch creating ch_23016 at {6} in copy a_23009

new ch creating ch_23013 at {6} in copy a_23008

in(c, (a_23006,B)) at {7} in copy a_23008

new K creating K_23011 at {8} in copy a_23008

out(ch_23013, (a_23006,B,K_23011)) at {9} in copy a_23008 received at {30} in copy a_23008

out(c, K_23011) at {36} in copy a_23008

in(c, (a_23006,B)) at {7} in copy a_23009

new K creating K_23014 at {8} in copy a_23009

out(ch_23016, (a_23006,B,K_23014)) at {9} in copy a_23009 received at {30} in copy a_23009

out(c, K_23014) at {36} in copy a_23009

in(c, (A,B)) at {7} in copy a

new K creating K_23513 at {8} in copy a

out(ch_23188, (A,B,K_23513)) at {9} in copy a received at {30} in copy a

out(c, CreateSessionRequest) at {36} in copy a

out(c, CreateSessionRequest) at {15} in copy a

new Nc creating Nc_23010 at {16} in copy a

out(c, ((CreateSessionRequest,pub(skA),Nc_23010),sign(h((CreateSessionRequest,pub(skA),Nc_23010)),skA))) at {18} in copy a

in(c, (senc((CreateSessionRequest,pub(sk(a_23006)),Nc_23010),K_23011),sign(h((CreateSessionRequest,pub(sk(a_23006)),Nc_23010)),sk(a_23006)))) at {37} in copy a_23008

new Nc_88 creating Nc_23733 at {38} in copy a_23008

new Ns_91 creating Ns_23757 at {42} in copy a_23008

event(beginSrv(B,a_23006,Nc_23010)) at {43} in copy a_23008

out(c, (senc((CreateSessionResponse,pub(skB),Nc_23010,Ns_23757),K_23011),sign(h((CreateSessionResponse,pub(skB),Nc_23010,Ns_23757)),skB))) at {45} in copy a_23008

in(c, (senc((ActivateSessionRequest,pub(sk(a_23006)),Login(pub(a_23007)),Passwd(a_23007,pub(skB))),K_23011),sign(h((ActivateSessionRequest,pub(sk(a_23006)),Login(pub(a_23007)),Passwd(a_23007,pub(skB)))),sk(a_23006)))) at {46} in copy a_23008

new Ns2_94 creating Ns2_23012 at {51} in copy a_23008

out(c, (senc((ActivateSessionResponse,Ns2_23012),K_23011),sign(h((ActivateSessionResponse,Ns2_23012)),skB))) at {53} in copy a_23008

in(c, (senc((CreateSessionRequest,pub(sk(a_23006)),Nc_23010),K_23014),sign(h((CreateSessionRequest,pub(sk(a_23006)),Nc_23010)),sk(a_23006)))) at {37} in copy a_23009

new Nc_88 creating Nc_23807 at {38} in copy a_23009

new Ns_91 creating Ns_23015 at {42} in copy a_23009

event(beginSrv(B,a_23006,Nc_23010)) at {43} in copy a_23009

out(c, (senc((CreateSessionResponse,pub(skB),Nc_23010,Ns_23015),K_23014),sign(h((CreateSessionResponse,pub(skB),Nc_23010,Ns_23015)),skB))) at {45} in copy a_23009

in(c, ((CreateSessionResponse,pub(skB),Nc_23010,Ns_23015),sign(h((CreateSessionResponse,pub(skB),Nc_23010,Ns_23015)),skB))) at {19} in copy a

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {22} in copy a

out(c, ((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB))),sign(h((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))),skA))) at {24} in copy a

in(c, ((ActivateSessionResponse,Ns2_23012),sign(h((ActivateSessionResponse,Ns2_23012)),skB))) at {25} in copy a

event(endCli(B,A,Nc_23010)) at {29} in copy a

The event endCli(B,A,Nc_23010) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_23876,Y_23877,N_23878)) ==> event(beginCli(X_23876,Y_23877,N_23878))
Completing...
200 rules inserted. The rule base contains 142 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 264 rules. 122 rules in the queue.
600 rules inserted. The rule base contains 296 rules. 134 rules in the queue.
800 rules inserted. The rule base contains 364 rules. 82 rules in the queue.
1000 rules inserted. The rule base contains 445 rules. 55 rules in the queue.
1200 rules inserted. The rule base contains 462 rules. 18 rules in the queue.
1400 rules inserted. The rule base contains 574 rules. 64 rules in the queue.
1600 rules inserted. The rule base contains 633 rules. 90 rules in the queue.
1800 rules inserted. The rule base contains 672 rules. 36 rules in the queue.
Starting query event(endSrv(X_23876,Y_23877,N_23878)) ==> event(beginCli(X_23876,Y_23877,N_23878))
RESULT event(endSrv(X_23876,Y_23877,N_23878)) ==> event(beginCli(X_23876,Y_23877,N_23878)) is true.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 135 rules. 63 rules in the queue.
400 rules inserted. The rule base contains 249 rules. 101 rules in the queue.
600 rules inserted. The rule base contains 276 rules. 106 rules in the queue.
800 rules inserted. The rule base contains 386 rules. 44 rules in the queue.
1000 rules inserted. The rule base contains 392 rules. 44 rules in the queue.
1200 rules inserted. The rule base contains 492 rules. 49 rules in the queue.
1400 rules inserted. The rule base contains 540 rules. 64 rules in the queue.
1600 rules inserted. The rule base contains 568 rules. 16 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
goal reachable: attacker(Passwd(skA[],pub(skB[])))
Abbreviations:
Nc_53939 = Nc[Sess = B[],Cli = A[],!1 = @sid_53931]
K_53940 = K[Sess = B[],Cli = Cli_53917,!1 = @sid_53920]
Ns_53941 = Ns_91[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917)),em1 = senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940),K_82 = K_53940,Sess_81 = B[],Cli_80 = Cli_53917,!1 = @sid_53920]
ch_53942 = ch[!1 = @sid_53920]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Cli_53917.
attacker(Cli_53917).

5. By 4, the attacker may know Cli_53917.
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (Cli_53917,B[]).
attacker((Cli_53917,B[])).

6. The message (Cli_53917,B[]) that the attacker may have by 5 may be received at input {7}.
So the message (Cli_53917,B[],K_53940) may be sent on channel ch_53942 at output {9}.
mess(ch_53942,(Cli_53917,B[],K_53940)).

7. By 4, the attacker may know Cli_53917.
Using the function sk the attacker may obtain sk(Cli_53917).
attacker(sk(Cli_53917)).

8. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_53939),sign(h((CreateSessionRequest,pub(skA[]),Nc_53939)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_53939),sign(h((CreateSessionRequest,pub(skA[]),Nc_53939)),skA[]))).

9. By 8, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_53939),sign(h((CreateSessionRequest,pub(skA[]),Nc_53939)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_53939).
attacker((CreateSessionRequest,pub(skA[]),Nc_53939)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_53939).
Using the function 3-proj-3-tuple the attacker may obtain Nc_53939.
attacker(Nc_53939).

11. By 7, the attacker may know sk(Cli_53917).
Using the function pub the attacker may obtain pub(sk(Cli_53917)).
attacker(pub(sk(Cli_53917))).

12. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

13. By 12, the attacker may know CreateSessionRequest.
By 11, the attacker may know pub(sk(Cli_53917)).
By 10, the attacker may know Nc_53939.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939).
attacker((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)).

14. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939).
Using the function h the attacker may obtain h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)).
attacker(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939))).

15. By 14, the attacker may know h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)).
By 7, the attacker may know sk(Cli_53917).
Using the function sign the attacker may obtain sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917)).
attacker(sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917))).

16. The message (Cli_53917,B[],K_53940) that may be sent on channel ch_53942 by 6 may be received at input {30}.
We have Cli_53917 <> B[] & Cli_53917 <> A[].
So the message K_53940 may be sent to the attacker at output {36}.
attacker(K_53940).

17. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939).
By 16, the attacker may know K_53940.
Using the function senc the attacker may obtain senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940).
attacker(senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940)).

18. By 17, the attacker may know senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940),sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917))).
attacker((senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940),sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917)))).

19. The message (Cli_53917,B[],K_53940) that may be sent on channel ch_53942 by 6 may be received at input {30}.
The message (senc((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939),K_53940),sign(h((CreateSessionRequest,pub(sk(Cli_53917)),Nc_53939)),sk(Cli_53917))) that the attacker may have by 18 may be received at input {37}.
We have Cli_53917 <> B[] & Cli_53917 <> A[].
So the message (senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])) may be sent to the attacker at output {45}.
attacker((senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[]))).

20. By 19, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])).

21. By 19, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940).
attacker(senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940)).

22. By 21, the attacker may know senc((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),K_53940).
By 16, the attacker may know K_53940.
Using the function sdec the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941).
attacker((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)).

23. By 22, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941).
Using the function 4-proj-4-tuple the attacker may obtain Ns_53941.
attacker(Ns_53941).

24. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

25. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

26. By 25, the attacker may know CreateSessionResponse.
By 24, the attacker may know pub(skB[]).
By 10, the attacker may know Nc_53939.
By 23, the attacker may know Ns_53941.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941).
attacker((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)).

27. By 26, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941).
By 20, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[]))).

28. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941),sign(h((CreateSessionResponse,pub(skB[]),Nc_53939,Ns_53941)),skB[])) that the attacker may have by 27 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[]))).

29. By 28, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))).

30. By 29, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],pub(skB[])).
attacker(Passwd(skA[],pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_54088 at {6} in copy a_53943

new ch creating ch_53949 at {6} in copy a_53945

in(c, (a_53944,B)) at {7} in copy a_53945

new K creating K_53947 at {8} in copy a_53945

out(ch_53949, (a_53944,B,K_53947)) at {9} in copy a_53945 received at {30} in copy a_53945

out(c, K_53947) at {36} in copy a_53945

in(c, (A,B)) at {7} in copy a_53943

new K creating K_54259 at {8} in copy a_53943

out(ch_54088, (A,B,K_54259)) at {9} in copy a_53943 received at {30} in copy a_53943

out(c, CreateSessionRequest) at {36} in copy a_53943

out(c, CreateSessionRequest) at {15} in copy a_53943

new Nc creating Nc_53946 at {16} in copy a_53943

out(c, ((CreateSessionRequest,pub(skA),Nc_53946),sign(h((CreateSessionRequest,pub(skA),Nc_53946)),skA))) at {18} in copy a_53943

in(c, (senc((CreateSessionRequest,pub(sk(a_53944)),Nc_53946),K_53947),sign(h((CreateSessionRequest,pub(sk(a_53944)),Nc_53946)),sk(a_53944)))) at {37} in copy a_53945

new Nc_88 creating Nc_54479 at {38} in copy a_53945

new Ns_91 creating Ns_53948 at {42} in copy a_53945

event(beginSrv(B,a_53944,Nc_53946)) at {43} in copy a_53945

out(c, (senc((CreateSessionResponse,pub(skB),Nc_53946,Ns_53948),K_53947),sign(h((CreateSessionResponse,pub(skB),Nc_53946,Ns_53948)),skB))) at {45} in copy a_53945

in(c, ((CreateSessionResponse,pub(skB),Nc_53946,Ns_53948),sign(h((CreateSessionResponse,pub(skB),Nc_53946,Ns_53948)),skB))) at {19} in copy a_53943

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {22} in copy a_53943

out(c, ((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB))),sign(h((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))),skA))) at {24} in copy a_53943

The attacker has the message Passwd(skA,pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skB[]))) is false.
