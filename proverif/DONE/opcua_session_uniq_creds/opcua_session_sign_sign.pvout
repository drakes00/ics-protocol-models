Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(skCli,skSess),Passwd(skCli,skSess)));
        {23}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli,skSess),Passwd(skCli,skSess)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Cli = A) || (Cli = B)) then
            {29}event endSrv(Cli,Sess,(Login(skCli,skSess),Passwd(skCli,skSess)))
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}in(c, (m1_66: bitstring,sigM1: bitstring));
    {36}if (verify(h(m1_66),sigM1,pkCli_63) <> true) then
        0
    else
        {37}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
        {38}new Ns_68: bitstring;
        {39}let m2_69: bitstring = (CreateSessionResponse,pkSess_65,Ns_68) in
        {40}out(c, (m2_69,sign(h(m2_69),skSess_64)));
        {41}in(c, (m3_70: bitstring,sigM3: bitstring));
        {42}if (verify(h(m3_70),sigM3,pkCli_63) <> true) then
            0
        else
            {43}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62,skSess_64),=Passwd(skCli_62,skSess_64)) = m3_70 in
            {44}new Ns2_71: bitstring;
            {45}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {46}out(c, (m4_72,sign(h(m4_72),skSess_64)));
            {47}if ((Cli_59 = A) || (Cli_59 = B)) then
            {48}event endSrv(Cli_59,Sess_60,(Login(skCli_62,skSess_64),Passwd(skCli_62,skSess_64)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 145 rules. 134 rules in the queue.
600 rules inserted. The rule base contains 202 rules. 66 rules in the queue.
800 rules inserted. The rule base contains 234 rules. 58 rules in the queue.
1000 rules inserted. The rule base contains 256 rules. 48 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_9958,Y_9959,N_9960)) ==> event(beginCli(X_9958,Y_9959,N_9960))
Completing...
200 rules inserted. The rule base contains 118 rules. 85 rules in the queue.
400 rules inserted. The rule base contains 148 rules. 166 rules in the queue.
600 rules inserted. The rule base contains 164 rules. 100 rules in the queue.
800 rules inserted. The rule base contains 238 rules. 12 rules in the queue.
1000 rules inserted. The rule base contains 284 rules. 80 rules in the queue.
1200 rules inserted. The rule base contains 300 rules. 52 rules in the queue.
Starting query event(endSrv(X_9958,Y_9959,N_9960)) ==> event(beginCli(X_9958,Y_9959,N_9960))
goal reachable: begin(beginCli(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[])))) -> end(endSrv(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[]))))
goal reachable: begin(beginCli(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[])))) -> end(endSrv(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[]))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[])))) -> end(endSrv(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[])))) -> end(endSrv(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[]))))
goal reachable: Y_22712 <> B[] && Y_22712 <> A[] && begin(beginCli(B[],Y_22712,(Login(skB[],sk(Y_22712)),Passwd(skB[],sk(Y_22712))))) && attacker(Y_22712) -> end(endSrv(B[],Y_22712,(Login(skB[],sk(Y_22712)),Passwd(skB[],sk(Y_22712)))))
goal reachable: Y_22713 <> B[] && Y_22713 <> A[] && begin(beginCli(A[],Y_22713,(Login(skA[],sk(Y_22713)),Passwd(skA[],sk(Y_22713))))) && attacker(Y_22713) -> end(endSrv(A[],Y_22713,(Login(skA[],sk(Y_22713)),Passwd(skA[],sk(Y_22713)))))
RESULT event(endSrv(X_9958,Y_9959,N_9960)) ==> event(beginCli(X_9958,Y_9959,N_9960)) is true.
-- Query not attacker(Passwd(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 145 rules. 134 rules in the queue.
600 rules inserted. The rule base contains 202 rules. 66 rules in the queue.
800 rules inserted. The rule base contains 234 rules. 58 rules in the queue.
1000 rules inserted. The rule base contains 256 rules. 48 rules in the queue.
Starting query not attacker(Passwd(skA[],skB[]))
goal reachable: attacker(Passwd(skA[],skB[]))
Abbreviations:
Nc_32591 = Nc[Sess = A[],Cli = A[],!1 = @sid_32563]
K_32592 = K[Sess = B[],Cli = A[],!1 = @sid_32572]
Ns_32593 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc_32591),K_61 = K_32592,Sess_60 = B[],Cli_59 = A[],!1 = @sid_32572]
ch_32594 = ch[!1 = @sid_32572]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (A[],B[],K_32592) may be sent on channel ch_32594 at output {13}.
mess(ch_32594,(A[],B[],K_32592)).

5. By 2, the attacker may know A[].
By 2, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

6. The message (A[],A[]) that the attacker may have by 5 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])).

8. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_32591).
attacker((CreateSessionRequest,pub(skA[]),Nc_32591)).

9. By 8, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_32591).
Using the function 3-proj-3-tuple the attacker may obtain Nc_32591.
attacker(Nc_32591).

10. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

11. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

12. By 11, the attacker may know CreateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 9, the attacker may know Nc_32591.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_32591).
attacker((CreateSessionRequest,pub(skA[]),Nc_32591)).

13. By 12, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_32591).
By 7, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[]))).

14. The message (A[],B[],K_32592) that may be sent on channel ch_32594 by 4 may be received at input {30}.
The message ((CreateSessionRequest,pub(skA[]),Nc_32591),sign(h((CreateSessionRequest,pub(skA[]),Nc_32591)),skA[])) that the attacker may have by 13 may be received at input {35}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])) may be sent to the attacker at output {40}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[]))).

15. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])).

16. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_32593).
attacker((CreateSessionResponse,pub(skB[]),Ns_32593)).

17. By 16, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_32593).
Using the function 3-proj-3-tuple the attacker may obtain Ns_32593.
attacker(Ns_32593).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Ns_32593.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_32593).
attacker((CreateSessionResponse,pub(skB[]),Ns_32593)).

21. By 20, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_32593).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[]))).

22. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Ns_32593),sign(h((CreateSessionResponse,pub(skB[]),Ns_32593)),skB[])) that the attacker may have by 21 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[]))).

23. By 22, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))).

24. By 23, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],skB[]).
attacker(Passwd(skA[],skB[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_32747 at {6} in copy a_32596

new ch creating ch_32600 at {6} in copy a_32595

new ch creating ch_32748 at {6} in copy a

in(c, (A,A)) at {7} in copy a

new K creating K_32829 at {12} in copy a

out(ch_32748, (A,A,K_32829)) at {13} in copy a received at {30} in copy a

out(c, CreateSessionRequest) at {15} in copy a

new Nc creating Nc_32597 at {16} in copy a

out(c, ((CreateSessionRequest,pub(skA),Nc_32597),sign(h((CreateSessionRequest,pub(skA),Nc_32597)),skA))) at {18} in copy a

in(c, (A,B)) at {7} in copy a_32595

new K creating K_32598 at {12} in copy a_32595

out(ch_32600, (A,B,K_32598)) at {13} in copy a_32595 received at {30} in copy a_32595

out(c, CreateSessionRequest) at {15} in copy a_32595

new Nc creating Nc_33099 at {16} in copy a_32595

out(c, ((CreateSessionRequest,pub(skA),Nc_33099),sign(h((CreateSessionRequest,pub(skA),Nc_33099)),skA))) at {18} in copy a_32595

in(c, ((CreateSessionRequest,pub(skA),Nc_32597),sign(h((CreateSessionRequest,pub(skA),Nc_32597)),skA))) at {35} in copy a_32595

new Ns_68 creating Ns_32599 at {38} in copy a_32595

out(c, ((CreateSessionResponse,pub(skB),Ns_32599),sign(h((CreateSessionResponse,pub(skB),Ns_32599)),skB))) at {40} in copy a_32595

in(c, (A,B)) at {7} in copy a_32596

new K creating K_33210 at {12} in copy a_32596

out(ch_32747, (A,B,K_33210)) at {13} in copy a_32596 received at {30} in copy a_32596

out(c, CreateSessionRequest) at {15} in copy a_32596

new Nc creating Nc_33300 at {16} in copy a_32596

out(c, ((CreateSessionRequest,pub(skA),Nc_33300),sign(h((CreateSessionRequest,pub(skA),Nc_33300)),skA))) at {18} in copy a_32596

in(c, ((CreateSessionResponse,pub(skB),Ns_32599),sign(h((CreateSessionResponse,pub(skB),Ns_32599)),skB))) at {19} in copy a_32596

event(beginCli(A,B,(Login(skA,skB),Passwd(skA,skB)))) at {22} in copy a_32596

out(c, ((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB)),sign(h((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB))),skA))) at {24} in copy a_32596

The attacker has the message Passwd(skA,skB).
A trace has been found.
RESULT not attacker(Passwd(skA[],skB[])) is false.
-- Query not attacker(Login(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 145 rules. 134 rules in the queue.
600 rules inserted. The rule base contains 202 rules. 66 rules in the queue.
800 rules inserted. The rule base contains 234 rules. 58 rules in the queue.
1000 rules inserted. The rule base contains 256 rules. 48 rules in the queue.
Starting query not attacker(Login(skA[],skB[]))
goal reachable: attacker(Login(skA[],skB[]))
Abbreviations:
Nc_43203 = Nc[Sess = A[],Cli = A[],!1 = @sid_43175]
K_43204 = K[Sess = B[],Cli = A[],!1 = @sid_43184]
Ns_43205 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc_43203),K_61 = K_43204,Sess_60 = B[],Cli_59 = A[],!1 = @sid_43184]
ch_43206 = ch[!1 = @sid_43184]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (A[],B[],K_43204) may be sent on channel ch_43206 at output {13}.
mess(ch_43206,(A[],B[],K_43204)).

5. By 2, the attacker may know A[].
By 2, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

6. The message (A[],A[]) that the attacker may have by 5 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])).

8. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_43203).
attacker((CreateSessionRequest,pub(skA[]),Nc_43203)).

9. By 8, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_43203).
Using the function 3-proj-3-tuple the attacker may obtain Nc_43203.
attacker(Nc_43203).

10. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

11. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

12. By 11, the attacker may know CreateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 9, the attacker may know Nc_43203.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_43203).
attacker((CreateSessionRequest,pub(skA[]),Nc_43203)).

13. By 12, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_43203).
By 7, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[]))).

14. The message (A[],B[],K_43204) that may be sent on channel ch_43206 by 4 may be received at input {30}.
The message ((CreateSessionRequest,pub(skA[]),Nc_43203),sign(h((CreateSessionRequest,pub(skA[]),Nc_43203)),skA[])) that the attacker may have by 13 may be received at input {35}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])) may be sent to the attacker at output {40}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[]))).

15. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])).

16. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_43205).
attacker((CreateSessionResponse,pub(skB[]),Ns_43205)).

17. By 16, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_43205).
Using the function 3-proj-3-tuple the attacker may obtain Ns_43205.
attacker(Ns_43205).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Ns_43205.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_43205).
attacker((CreateSessionResponse,pub(skB[]),Ns_43205)).

21. By 20, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_43205).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[]))).

22. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Ns_43205),sign(h((CreateSessionResponse,pub(skB[]),Ns_43205)),skB[])) that the attacker may have by 21 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[]))).

23. By 22, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))).

24. By 23, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[],skB[]).
attacker(Login(skA[],skB[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_43361 at {6} in copy a_43209

new ch creating ch_43213 at {6} in copy a_43208

new ch creating ch_43362 at {6} in copy a_43207

in(c, (A,A)) at {7} in copy a_43207

new K creating K_43443 at {12} in copy a_43207

out(ch_43362, (A,A,K_43443)) at {13} in copy a_43207 received at {30} in copy a_43207

out(c, CreateSessionRequest) at {15} in copy a_43207

new Nc creating Nc_43210 at {16} in copy a_43207

out(c, ((CreateSessionRequest,pub(skA),Nc_43210),sign(h((CreateSessionRequest,pub(skA),Nc_43210)),skA))) at {18} in copy a_43207

in(c, (A,B)) at {7} in copy a_43208

new K creating K_43211 at {12} in copy a_43208

out(ch_43213, (A,B,K_43211)) at {13} in copy a_43208 received at {30} in copy a_43208

out(c, CreateSessionRequest) at {15} in copy a_43208

new Nc creating Nc_43713 at {16} in copy a_43208

out(c, ((CreateSessionRequest,pub(skA),Nc_43713),sign(h((CreateSessionRequest,pub(skA),Nc_43713)),skA))) at {18} in copy a_43208

in(c, ((CreateSessionRequest,pub(skA),Nc_43210),sign(h((CreateSessionRequest,pub(skA),Nc_43210)),skA))) at {35} in copy a_43208

new Ns_68 creating Ns_43212 at {38} in copy a_43208

out(c, ((CreateSessionResponse,pub(skB),Ns_43212),sign(h((CreateSessionResponse,pub(skB),Ns_43212)),skB))) at {40} in copy a_43208

in(c, (A,B)) at {7} in copy a_43209

new K creating K_43824 at {12} in copy a_43209

out(ch_43361, (A,B,K_43824)) at {13} in copy a_43209 received at {30} in copy a_43209

out(c, CreateSessionRequest) at {15} in copy a_43209

new Nc creating Nc_43914 at {16} in copy a_43209

out(c, ((CreateSessionRequest,pub(skA),Nc_43914),sign(h((CreateSessionRequest,pub(skA),Nc_43914)),skA))) at {18} in copy a_43209

in(c, ((CreateSessionResponse,pub(skB),Ns_43212),sign(h((CreateSessionResponse,pub(skB),Ns_43212)),skB))) at {19} in copy a_43209

event(beginCli(A,B,(Login(skA,skB),Passwd(skA,skB)))) at {22} in copy a_43209

out(c, ((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB)),sign(h((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB))),skA))) at {24} in copy a_43209

The attacker has the message Login(skA,skB).
A trace has been found.
RESULT not attacker(Login(skA[],skB[])) is false.
