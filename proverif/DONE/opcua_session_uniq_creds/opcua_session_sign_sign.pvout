Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(skCli,skSess),Passwd(skCli,skSess)));
        {23}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli,skSess),Passwd(skCli,skSess)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            0
) | (
    {28}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {29}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {30}let pkCli_63: bitstring = pub(skCli_62) in
    {31}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {32}let pkSess_65: bitstring = pub(skSess_64) in
    {33}in(c, (m1_66: bitstring,sigM1: bitstring));
    {34}if (verify(h(m1_66),sigM1,pkCli_63) <> true) then
        0
    else
        {35}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
        {36}new Ns_68: bitstring;
        {37}let m2_69: bitstring = (CreateSessionResponse,pkSess_65,Ns_68) in
        {38}out(c, (m2_69,sign(h(m2_69),skSess_64)));
        {39}in(c, (m3_70: bitstring,sigM3: bitstring));
        {40}if (verify(h(m3_70),sigM3,pkCli_63) <> true) then
            0
        else
            {41}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62,skSess_64),=Passwd(skCli_62,skSess_64)) = m3_70 in
            {42}event endSrv(Cli_59,Sess_60,(Login(skCli_62,skSess_64),Passwd(skCli_62,skSess_64)));
            {43}new Ns2_71: bitstring;
            {44}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {45}out(c, (m4_72,sign(h(m4_72),skSess_64)))
)

-- Query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 148 rules. 158 rules in the queue.
600 rules inserted. The rule base contains 168 rules. 88 rules in the queue.
800 rules inserted. The rule base contains 253 rules. 50 rules in the queue.
1000 rules inserted. The rule base contains 280 rules. 80 rules in the queue.
1200 rules inserted. The rule base contains 295 rules. 52 rules in the queue.
Starting query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
goal reachable: begin(beginCli(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[])))) -> end(endSrv(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[]))))
goal reachable: begin(beginCli(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[])))) -> end(endSrv(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[]))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[])))) -> end(endSrv(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[])))) -> end(endSrv(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[]))))
RESULT event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N)) is true.
-- Query not attacker(Passwd(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 145 rules. 134 rules in the queue.
600 rules inserted. The rule base contains 202 rules. 66 rules in the queue.
800 rules inserted. The rule base contains 234 rules. 58 rules in the queue.
1000 rules inserted. The rule base contains 256 rules. 48 rules in the queue.
Starting query not attacker(Passwd(skA[],skB[]))
goal reachable: attacker(Passwd(skA[],skB[]))
Abbreviations:
Nc_21546 = Nc[Sess = A[],Cli = A[],!1 = @sid_21518]
K_21547 = K[Sess = B[],Cli = A[],!1 = @sid_21527]
Ns_21548 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc_21546),K_61 = K_21547,Sess_60 = B[],Cli_59 = A[],!1 = @sid_21527]
ch_21549 = ch[!1 = @sid_21527]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (A[],B[],K_21547) may be sent on channel ch_21549 at output {13}.
mess(ch_21549,(A[],B[],K_21547)).

5. By 2, the attacker may know A[].
By 2, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

6. The message (A[],A[]) that the attacker may have by 5 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])).

8. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_21546).
attacker((CreateSessionRequest,pub(skA[]),Nc_21546)).

9. By 8, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_21546).
Using the function 3-proj-3-tuple the attacker may obtain Nc_21546.
attacker(Nc_21546).

10. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

11. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

12. By 11, the attacker may know CreateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 9, the attacker may know Nc_21546.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_21546).
attacker((CreateSessionRequest,pub(skA[]),Nc_21546)).

13. By 12, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_21546).
By 7, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[]))).

14. The message (A[],B[],K_21547) that may be sent on channel ch_21549 by 4 may be received at input {28}.
The message ((CreateSessionRequest,pub(skA[]),Nc_21546),sign(h((CreateSessionRequest,pub(skA[]),Nc_21546)),skA[])) that the attacker may have by 13 may be received at input {33}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])) may be sent to the attacker at output {38}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[]))).

15. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])).

16. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_21548).
attacker((CreateSessionResponse,pub(skB[]),Ns_21548)).

17. By 16, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_21548).
Using the function 3-proj-3-tuple the attacker may obtain Ns_21548.
attacker(Ns_21548).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Ns_21548.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_21548).
attacker((CreateSessionResponse,pub(skB[]),Ns_21548)).

21. By 20, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_21548).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[]))).

22. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Ns_21548),sign(h((CreateSessionResponse,pub(skB[]),Ns_21548)),skB[])) that the attacker may have by 21 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[]))).

23. By 22, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))).

24. By 23, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],skB[]).
attacker(Passwd(skA[],skB[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_21702 at {6} in copy a_21551

new ch creating ch_21555 at {6} in copy a_21550

new ch creating ch_21703 at {6} in copy a

in(c, (A,A)) at {7} in copy a

new K creating K_21784 at {12} in copy a

out(ch_21703, (A,A,K_21784)) at {13} in copy a received at {28} in copy a

out(c, CreateSessionRequest) at {15} in copy a

new Nc creating Nc_21552 at {16} in copy a

out(c, ((CreateSessionRequest,pub(skA),Nc_21552),sign(h((CreateSessionRequest,pub(skA),Nc_21552)),skA))) at {18} in copy a

in(c, (A,B)) at {7} in copy a_21550

new K creating K_21553 at {12} in copy a_21550

out(ch_21555, (A,B,K_21553)) at {13} in copy a_21550 received at {28} in copy a_21550

out(c, CreateSessionRequest) at {15} in copy a_21550

new Nc creating Nc_22054 at {16} in copy a_21550

out(c, ((CreateSessionRequest,pub(skA),Nc_22054),sign(h((CreateSessionRequest,pub(skA),Nc_22054)),skA))) at {18} in copy a_21550

in(c, ((CreateSessionRequest,pub(skA),Nc_21552),sign(h((CreateSessionRequest,pub(skA),Nc_21552)),skA))) at {33} in copy a_21550

new Ns_68 creating Ns_21554 at {36} in copy a_21550

out(c, ((CreateSessionResponse,pub(skB),Ns_21554),sign(h((CreateSessionResponse,pub(skB),Ns_21554)),skB))) at {38} in copy a_21550

in(c, (A,B)) at {7} in copy a_21551

new K creating K_22165 at {12} in copy a_21551

out(ch_21702, (A,B,K_22165)) at {13} in copy a_21551 received at {28} in copy a_21551

out(c, CreateSessionRequest) at {15} in copy a_21551

new Nc creating Nc_22255 at {16} in copy a_21551

out(c, ((CreateSessionRequest,pub(skA),Nc_22255),sign(h((CreateSessionRequest,pub(skA),Nc_22255)),skA))) at {18} in copy a_21551

in(c, ((CreateSessionResponse,pub(skB),Ns_21554),sign(h((CreateSessionResponse,pub(skB),Ns_21554)),skB))) at {19} in copy a_21551

event(beginCli(A,B,(Login(skA,skB),Passwd(skA,skB)))) at {22} in copy a_21551

out(c, ((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB)),sign(h((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB))),skA))) at {24} in copy a_21551

The attacker has the message Passwd(skA,skB).
A trace has been found.
RESULT not attacker(Passwd(skA[],skB[])) is false.
-- Query not attacker(Login(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 114 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 145 rules. 134 rules in the queue.
600 rules inserted. The rule base contains 202 rules. 66 rules in the queue.
800 rules inserted. The rule base contains 234 rules. 58 rules in the queue.
1000 rules inserted. The rule base contains 256 rules. 48 rules in the queue.
Starting query not attacker(Login(skA[],skB[]))
goal reachable: attacker(Login(skA[],skB[]))
Abbreviations:
Nc_31765 = Nc[Sess = A[],Cli = A[],!1 = @sid_31737]
K_31766 = K[Sess = B[],Cli = A[],!1 = @sid_31746]
Ns_31767 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc_31765),K_61 = K_31766,Sess_60 = B[],Cli_59 = A[],!1 = @sid_31746]
ch_31768 = ch[!1 = @sid_31746]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (A[],B[],K_31766) may be sent on channel ch_31768 at output {13}.
mess(ch_31768,(A[],B[],K_31766)).

5. By 2, the attacker may know A[].
By 2, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

6. The message (A[],A[]) that the attacker may have by 5 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])).

8. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_31765).
attacker((CreateSessionRequest,pub(skA[]),Nc_31765)).

9. By 8, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_31765).
Using the function 3-proj-3-tuple the attacker may obtain Nc_31765.
attacker(Nc_31765).

10. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

11. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

12. By 11, the attacker may know CreateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 9, the attacker may know Nc_31765.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_31765).
attacker((CreateSessionRequest,pub(skA[]),Nc_31765)).

13. By 12, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_31765).
By 7, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[]))).

14. The message (A[],B[],K_31766) that may be sent on channel ch_31768 by 4 may be received at input {28}.
The message ((CreateSessionRequest,pub(skA[]),Nc_31765),sign(h((CreateSessionRequest,pub(skA[]),Nc_31765)),skA[])) that the attacker may have by 13 may be received at input {33}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])) may be sent to the attacker at output {38}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[]))).

15. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])).

16. By 14, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_31767).
attacker((CreateSessionResponse,pub(skB[]),Ns_31767)).

17. By 16, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_31767).
Using the function 3-proj-3-tuple the attacker may obtain Ns_31767.
attacker(Ns_31767).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Ns_31767.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_31767).
attacker((CreateSessionResponse,pub(skB[]),Ns_31767)).

21. By 20, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_31767).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[]))).

22. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Ns_31767),sign(h((CreateSessionResponse,pub(skB[]),Ns_31767)),skB[])) that the attacker may have by 21 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[]))).

23. By 22, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[]))).

24. By 23, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[],skB[]),Passwd(skA[],skB[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[],skB[]).
attacker(Login(skA[],skB[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_31923 at {6} in copy a_31771

new ch creating ch_31775 at {6} in copy a_31770

new ch creating ch_31924 at {6} in copy a_31769

in(c, (A,A)) at {7} in copy a_31769

new K creating K_32005 at {12} in copy a_31769

out(ch_31924, (A,A,K_32005)) at {13} in copy a_31769 received at {28} in copy a_31769

out(c, CreateSessionRequest) at {15} in copy a_31769

new Nc creating Nc_31772 at {16} in copy a_31769

out(c, ((CreateSessionRequest,pub(skA),Nc_31772),sign(h((CreateSessionRequest,pub(skA),Nc_31772)),skA))) at {18} in copy a_31769

in(c, (A,B)) at {7} in copy a_31770

new K creating K_31773 at {12} in copy a_31770

out(ch_31775, (A,B,K_31773)) at {13} in copy a_31770 received at {28} in copy a_31770

out(c, CreateSessionRequest) at {15} in copy a_31770

new Nc creating Nc_32275 at {16} in copy a_31770

out(c, ((CreateSessionRequest,pub(skA),Nc_32275),sign(h((CreateSessionRequest,pub(skA),Nc_32275)),skA))) at {18} in copy a_31770

in(c, ((CreateSessionRequest,pub(skA),Nc_31772),sign(h((CreateSessionRequest,pub(skA),Nc_31772)),skA))) at {33} in copy a_31770

new Ns_68 creating Ns_31774 at {36} in copy a_31770

out(c, ((CreateSessionResponse,pub(skB),Ns_31774),sign(h((CreateSessionResponse,pub(skB),Ns_31774)),skB))) at {38} in copy a_31770

in(c, (A,B)) at {7} in copy a_31771

new K creating K_32386 at {12} in copy a_31771

out(ch_31923, (A,B,K_32386)) at {13} in copy a_31771 received at {28} in copy a_31771

out(c, CreateSessionRequest) at {15} in copy a_31771

new Nc creating Nc_32476 at {16} in copy a_31771

out(c, ((CreateSessionRequest,pub(skA),Nc_32476),sign(h((CreateSessionRequest,pub(skA),Nc_32476)),skA))) at {18} in copy a_31771

in(c, ((CreateSessionResponse,pub(skB),Ns_31774),sign(h((CreateSessionResponse,pub(skB),Ns_31774)),skB))) at {19} in copy a_31771

event(beginCli(A,B,(Login(skA,skB),Passwd(skA,skB)))) at {22} in copy a_31771

out(c, ((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB)),sign(h((ActivateSessionRequest,pub(skA),Login(skA,skB),Passwd(skA,skB))),skA))) at {24} in copy a_31771

The attacker has the message Login(skA,skB).
A trace has been found.
RESULT not attacker(Login(skA[],skB[])) is false.
