Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verifySign(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {23}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verifySign(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Ns)
) | (
    {30}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {31}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {32}let pkCli_84: bitstring = pub(skCli_83) in
    {33}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {34}let pkSess_86: bitstring = pub(skSess_85) in
    {35}let tmp_87: bitstring = (if ((Cli_80 <> A) && (Cli_80 <> B)) then K_82 else CreateSessionRequest) in
    {36}out(c, tmp_87);
    {37}in(c, (m1_88: bitstring,sigM1: bitstring));
    {38}if (verifySign(h(m1_88),sigM1,pkCli_84) <> true) then
        0
    else
        {39}let (=CreateSessionRequest,=pkCli_84,Nc_89: bitstring) = m1_88 in
        {40}new Ns_90: bitstring;
        {41}event beginSrv(Sess_81,Cli_80,Ns_90);
        {42}let m2_91: bitstring = (CreateSessionResponse,pkSess_86,Nc_89,Ns_90) in
        {43}out(c, (m2_91,sign(h(m2_91),skSess_85)));
        {44}in(c, (m3_92: bitstring,sigM3: bitstring));
        {45}if (verifySign(h(m3_92),sigM3,pkCli_84) <> true) then
            0
        else
            {46}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_92 in
            {47}if (verifyCreds(skSess_85,login,passwd) <> true) then
                0
            else
                {48}new Ns2_93: bitstring;
                {49}let m4_94: bitstring = (ActivateSessionResponse,Ns2_93) in
                {50}out(c, (m4_94,sign(h(m4_94),skSess_85)));
                {51}if ((Cli_80 = A) || (Cli_80 = B)) then
                {52}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 124 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 136 rules. 150 rules in the queue.
600 rules inserted. The rule base contains 166 rules. 138 rules in the queue.
800 rules inserted. The rule base contains 264 rules. 115 rules in the queue.
1000 rules inserted. The rule base contains 298 rules. 94 rules in the queue.
1200 rules inserted. The rule base contains 298 rules. 122 rules in the queue.
1400 rules inserted. The rule base contains 384 rules. 38 rules in the queue.
1600 rules inserted. The rule base contains 460 rules. 118 rules in the queue.
1800 rules inserted. The rule base contains 496 rules. 148 rules in the queue.
2000 rules inserted. The rule base contains 510 rules. 156 rules in the queue.
2200 rules inserted. The rule base contains 518 rules. 144 rules in the queue.
2400 rules inserted. The rule base contains 546 rules. 116 rules in the queue.
2600 rules inserted. The rule base contains 617 rules. 52 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: Cli_39505 <> B[] && Cli_39505 <> A[] && begin(beginSrv(B[],Cli_39505,Ns_90[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_39505)),Nc[Sess = B[],Cli = A[],!1 = @sid_39506])),sk(Cli_39505)),m1_88 = (CreateSessionRequest,pub(sk(Cli_39505)),Nc[Sess = B[],Cli = A[],!1 = @sid_39506]),K_82 = K[Sess = B[],Cli = Cli_39505,!1 = @sid_39507],Sess_81 = B[],Cli_80 = Cli_39505,!1 = @sid_39507])) && attacker(Cli_39505) -> end(endCli(B[],A[],Ns_90[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_39505)),Nc[Sess = B[],Cli = A[],!1 = @sid_39506])),sk(Cli_39505)),m1_88 = (CreateSessionRequest,pub(sk(Cli_39505)),Nc[Sess = B[],Cli = A[],!1 = @sid_39506]),K_82 = K[Sess = B[],Cli = Cli_39505,!1 = @sid_39507],Sess_81 = B[],Cli_80 = Cli_39505,!1 = @sid_39507]))
Abbreviations:
Nc_39684 = Nc[Sess = B[],Cli = A[],!1 = @sid_39679]
K_39685 = K[Sess = B[],Cli = Cli_39660,!1 = @sid_39663]
Ns_39686 = Ns_90[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660)),m1_88 = (CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),K_82 = K_39685,Sess_81 = B[],Cli_80 = Cli_39660,!1 = @sid_39663]
Ns2_39687 = Ns2_93[sigM3 = sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660)),m3_92 = (ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))),sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660)),m1_88 = (CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),K_82 = K_39685,Sess_81 = B[],Cli_80 = Cli_39660,!1 = @sid_39663]
ch_39688 = ch[!1 = @sid_39663]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. We assume as hypothesis that
attacker(Cli_39660).

5. By 4, the attacker may know Cli_39660.
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (Cli_39660,B[]).
attacker((Cli_39660,B[])).

6. The message (Cli_39660,B[]) that the attacker may have by 5 may be received at input {7}.
So the message (Cli_39660,B[],K_39685) may be sent on channel ch_39688 at output {9}.
mess(ch_39688,(Cli_39660,B[],K_39685)).

7. By 4, the attacker may know Cli_39660.
Using the function sk the attacker may obtain sk(Cli_39660).
attacker(sk(Cli_39660)).

8. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_39684),sign(h((CreateSessionRequest,pub(skA[]),Nc_39684)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_39684),sign(h((CreateSessionRequest,pub(skA[]),Nc_39684)),skA[]))).

9. By 8, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_39684),sign(h((CreateSessionRequest,pub(skA[]),Nc_39684)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_39684).
attacker((CreateSessionRequest,pub(skA[]),Nc_39684)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_39684).
Using the function 3-proj-3-tuple the attacker may obtain Nc_39684.
attacker(Nc_39684).

11. By 7, the attacker may know sk(Cli_39660).
Using the function pub the attacker may obtain pub(sk(Cli_39660)).
attacker(pub(sk(Cli_39660))).

12. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

13. By 12, the attacker may know CreateSessionRequest.
By 11, the attacker may know pub(sk(Cli_39660)).
By 10, the attacker may know Nc_39684.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684).
attacker((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)).

14. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684).
Using the function h the attacker may obtain h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)).
attacker(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684))).

15. By 14, the attacker may know h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)).
By 7, the attacker may know sk(Cli_39660).
Using the function sign the attacker may obtain sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660)).
attacker(sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660))).

16. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660)).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660))).
attacker(((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660)))).

17. The message (Cli_39660,B[],K_39685) that may be sent on channel ch_39688 by 6 may be received at input {30}.
The message ((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660))) that the attacker may have by 16 may be received at input {37}.
The event beginSrv(B[],Cli_39660,Ns_39686) may be executed at {41}.
We have Cli_39660 <> B[] & Cli_39660 <> A[].
So the message ((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])) may be sent to the attacker at output {43}.
attacker(((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[]))).

18. By 17, the attacker may know ((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])).

19. By 17, the attacker may know ((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686).
attacker((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)).

20. By 19, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686).
Using the function 4-proj-4-tuple the attacker may obtain Ns_39686.
attacker(Ns_39686).

21. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

22. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

23. By 22, the attacker may know CreateSessionResponse.
By 21, the attacker may know pub(skB[]).
By 10, the attacker may know Nc_39684.
By 20, the attacker may know Ns_39686.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686).
attacker((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)).

24. By 23, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686).
By 18, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[]))).

25. The attacker has some term y_39608.
attacker(y_39608).

26. By 25, the attacker may know y_39608.
By 21, the attacker may know pub(skB[]).
Using the function Passwd the attacker may obtain Passwd(y_39608,pub(skB[])).
attacker(Passwd(y_39608,pub(skB[]))).

27. By 25, the attacker may know y_39608.
Using the function pub the attacker may obtain pub(y_39608).
attacker(pub(y_39608)).

28. By 27, the attacker may know pub(y_39608).
Using the function Login the attacker may obtain Login(pub(y_39608)).
attacker(Login(pub(y_39608))).

29. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

30. By 29, the attacker may know ActivateSessionRequest.
By 11, the attacker may know pub(sk(Cli_39660)).
By 28, the attacker may know Login(pub(y_39608)).
By 26, the attacker may know Passwd(y_39608,pub(skB[])).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))).
attacker((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))).

31. By 30, the attacker may know (ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))).
Using the function h the attacker may obtain h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))).
attacker(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))))).

32. By 31, the attacker may know h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))).
By 7, the attacker may know sk(Cli_39660).
Using the function sign the attacker may obtain sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660)).
attacker(sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660))).

33. By 30, the attacker may know (ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))).
By 32, the attacker may know sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660)).
Using the function 2-tuple the attacker may obtain ((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))),sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660))).
attacker(((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))),sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660)))).

34. The message (Cli_39660,B[],K_39685) that may be sent on channel ch_39688 by 6 may be received at input {30}.
The message ((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684),sign(h((CreateSessionRequest,pub(sk(Cli_39660)),Nc_39684)),sk(Cli_39660))) that the attacker may have by 16 may be received at input {37}.
The event beginSrv(B[],Cli_39660,Ns_39686) may be executed at {41}.
The message ((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[]))),sign(h((ActivateSessionRequest,pub(sk(Cli_39660)),Login(pub(y_39608)),Passwd(y_39608,pub(skB[])))),sk(Cli_39660))) that the attacker may have by 33 may be received at input {44}.
We have Cli_39660 <> B[] & Cli_39660 <> A[].
So the message ((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[])) may be sent to the attacker at output {50}.
attacker(((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[]))).

35. By 34, the attacker may know ((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionResponse,Ns2_39687)),skB[]).
attacker(sign(h((ActivateSessionResponse,Ns2_39687)),skB[])).

36. By 34, the attacker may know ((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_39687).
attacker((ActivateSessionResponse,Ns2_39687)).

37. By 36, the attacker may know (ActivateSessionResponse,Ns2_39687).
Using the function 2-proj-2-tuple the attacker may obtain Ns2_39687.
attacker(Ns2_39687).

38. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

39. By 38, the attacker may know ActivateSessionResponse.
By 37, the attacker may know Ns2_39687.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_39687).
attacker((ActivateSessionResponse,Ns2_39687)).

40. By 39, the attacker may know (ActivateSessionResponse,Ns2_39687).
By 35, the attacker may know sign(h((ActivateSessionResponse,Ns2_39687)),skB[]).
Using the function 2-tuple the attacker may obtain ((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[])).
attacker(((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[]))).

41. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686),sign(h((CreateSessionResponse,pub(skB[]),Nc_39684,Ns_39686)),skB[])) that the attacker may have by 24 may be received at input {19}.
The message ((ActivateSessionResponse,Ns2_39687),sign(h((ActivateSessionResponse,Ns2_39687)),skB[])) that the attacker may have by 40 may be received at input {25}.
So event endCli(B[],A[],Ns_39686) may be executed at {29}.
end(endCli(B[],A[],Ns_39686)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_39826 at {6} in copy a_39689

new ch creating ch_39696 at {6} in copy a_39690

in(c, (a,B)) at {7} in copy a_39690

new K creating K_39693 at {8} in copy a_39690

out(ch_39696, (a,B,K_39693)) at {9} in copy a_39690 received at {30} in copy a_39690

out(c, K_39693) at {36} in copy a_39690

in(c, (A,B)) at {7} in copy a_39689

new K creating K_39985 at {8} in copy a_39689

out(ch_39826, (A,B,K_39985)) at {9} in copy a_39689 received at {30} in copy a_39689

out(c, CreateSessionRequest) at {36} in copy a_39689

out(c, CreateSessionRequest) at {15} in copy a_39689

new Nc creating Nc_39692 at {16} in copy a_39689

out(c, ((CreateSessionRequest,pub(skA),Nc_39692),sign(h((CreateSessionRequest,pub(skA),Nc_39692)),skA))) at {18} in copy a_39689

in(c, ((CreateSessionRequest,pub(sk(a)),Nc_39692),sign(h((CreateSessionRequest,pub(sk(a)),Nc_39692)),sk(a)))) at {37} in copy a_39690

new Ns_90 creating Ns_39694 at {40} in copy a_39690

event(beginSrv(B,a,Ns_39694)) at {41} in copy a_39690

out(c, ((CreateSessionResponse,pub(skB),Nc_39692,Ns_39694),sign(h((CreateSessionResponse,pub(skB),Nc_39692,Ns_39694)),skB))) at {43} in copy a_39690

in(c, ((ActivateSessionRequest,pub(sk(a)),Login(pub(a_39691)),Passwd(a_39691,pub(skB))),sign(h((ActivateSessionRequest,pub(sk(a)),Login(pub(a_39691)),Passwd(a_39691,pub(skB)))),sk(a)))) at {44} in copy a_39690

new Ns2_93 creating Ns2_39695 at {48} in copy a_39690

out(c, ((ActivateSessionResponse,Ns2_39695),sign(h((ActivateSessionResponse,Ns2_39695)),skB))) at {50} in copy a_39690

in(c, ((CreateSessionResponse,pub(skB),Nc_39692,Ns_39694),sign(h((CreateSessionResponse,pub(skB),Nc_39692,Ns_39694)),skB))) at {19} in copy a_39689

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {22} in copy a_39689

out(c, ((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB))),sign(h((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))),skA))) at {24} in copy a_39689

in(c, ((ActivateSessionResponse,Ns2_39695),sign(h((ActivateSessionResponse,Ns2_39695)),skB))) at {25} in copy a_39689

event(endCli(B,A,Ns_39694)) at {29} in copy a_39689

The event endCli(B,A,Ns_39694) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_40272,Y_40273,N_40274)) ==> event(beginCli(X_40272,Y_40273,N_40274))
Completing...
200 rules inserted. The rule base contains 124 rules. 106 rules in the queue.
400 rules inserted. The rule base contains 136 rules. 162 rules in the queue.
600 rules inserted. The rule base contains 167 rules. 151 rules in the queue.
800 rules inserted. The rule base contains 264 rules. 120 rules in the queue.
1000 rules inserted. The rule base contains 306 rules. 90 rules in the queue.
1200 rules inserted. The rule base contains 284 rules. 122 rules in the queue.
1400 rules inserted. The rule base contains 384 rules. 30 rules in the queue.
1600 rules inserted. The rule base contains 434 rules. 84 rules in the queue.
1800 rules inserted. The rule base contains 462 rules. 78 rules in the queue.
2000 rules inserted. The rule base contains 486 rules. 46 rules in the queue.
Starting query event(endSrv(X_40272,Y_40273,N_40274)) ==> event(beginCli(X_40272,Y_40273,N_40274))
goal reachable: begin(beginCli(A[],B[],(Login(pub(skA[])),Passwd(skA[],pub(skB[]))))) -> end(endSrv(A[],B[],(Login(pub(skA[])),Passwd(skA[],pub(skB[])))))
goal reachable: begin(beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[]))))) -> end(endSrv(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[])))))
goal reachable: begin(beginCli(B[],B[],(Login(pub(skB[])),Passwd(skB[],pub(skB[]))))) -> end(endSrv(B[],B[],(Login(pub(skB[])),Passwd(skB[],pub(skB[])))))
goal reachable: begin(beginCli(A[],A[],(Login(pub(skA[])),Passwd(skA[],pub(skA[]))))) -> end(endSrv(A[],A[],(Login(pub(skA[])),Passwd(skA[],pub(skA[])))))
RESULT event(endSrv(X_40272,Y_40273,N_40274)) ==> event(beginCli(X_40272,Y_40273,N_40274)) is true.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 128 rules. 112 rules in the queue.
400 rules inserted. The rule base contains 138 rules. 147 rules in the queue.
600 rules inserted. The rule base contains 172 rules. 130 rules in the queue.
800 rules inserted. The rule base contains 274 rules. 96 rules in the queue.
1000 rules inserted. The rule base contains 274 rules. 96 rules in the queue.
1200 rules inserted. The rule base contains 306 rules. 66 rules in the queue.
1400 rules inserted. The rule base contains 406 rules. 64 rules in the queue.
1600 rules inserted. The rule base contains 424 rules. 72 rules in the queue.
1800 rules inserted. The rule base contains 396 rules. 52 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
goal reachable: attacker(Passwd(skA[],pub(skB[])))
Abbreviations:
Nc_71389 = Nc[Sess = B[],Cli = A[],!1 = @sid_71381]
K_71390 = K[Sess = B[],Cli = Cli_71367,!1 = @sid_71369]
Ns_71391 = Ns_90[sigM1 = sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367)),m1_88 = (CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389),K_82 = K_71390,Sess_81 = B[],Cli_80 = Cli_71367,!1 = @sid_71369]
ch_71392 = ch[!1 = @sid_71369]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Cli_71367.
attacker(Cli_71367).

5. By 4, the attacker may know Cli_71367.
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (Cli_71367,B[]).
attacker((Cli_71367,B[])).

6. The message (Cli_71367,B[]) that the attacker may have by 5 may be received at input {7}.
So the message (Cli_71367,B[],K_71390) may be sent on channel ch_71392 at output {9}.
mess(ch_71392,(Cli_71367,B[],K_71390)).

7. By 4, the attacker may know Cli_71367.
Using the function sk the attacker may obtain sk(Cli_71367).
attacker(sk(Cli_71367)).

8. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_71389),sign(h((CreateSessionRequest,pub(skA[]),Nc_71389)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_71389),sign(h((CreateSessionRequest,pub(skA[]),Nc_71389)),skA[]))).

9. By 8, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_71389),sign(h((CreateSessionRequest,pub(skA[]),Nc_71389)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_71389).
attacker((CreateSessionRequest,pub(skA[]),Nc_71389)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_71389).
Using the function 3-proj-3-tuple the attacker may obtain Nc_71389.
attacker(Nc_71389).

11. By 7, the attacker may know sk(Cli_71367).
Using the function pub the attacker may obtain pub(sk(Cli_71367)).
attacker(pub(sk(Cli_71367))).

12. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

13. By 12, the attacker may know CreateSessionRequest.
By 11, the attacker may know pub(sk(Cli_71367)).
By 10, the attacker may know Nc_71389.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389).
attacker((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)).

14. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389).
Using the function h the attacker may obtain h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)).
attacker(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389))).

15. By 14, the attacker may know h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)).
By 7, the attacker may know sk(Cli_71367).
Using the function sign the attacker may obtain sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367)).
attacker(sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367))).

16. By 13, the attacker may know (CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367)).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389),sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367))).
attacker(((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389),sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367)))).

17. The message (Cli_71367,B[],K_71390) that may be sent on channel ch_71392 by 6 may be received at input {30}.
The message ((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389),sign(h((CreateSessionRequest,pub(sk(Cli_71367)),Nc_71389)),sk(Cli_71367))) that the attacker may have by 16 may be received at input {37}.
We have Cli_71367 <> B[] & Cli_71367 <> A[].
So the message ((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])) may be sent to the attacker at output {43}.
attacker(((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[]))).

18. By 17, the attacker may know ((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])).

19. By 17, the attacker may know ((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391).
attacker((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)).

20. By 19, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391).
Using the function 4-proj-4-tuple the attacker may obtain Ns_71391.
attacker(Ns_71391).

21. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

22. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

23. By 22, the attacker may know CreateSessionResponse.
By 21, the attacker may know pub(skB[]).
By 10, the attacker may know Nc_71389.
By 20, the attacker may know Ns_71391.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391).
attacker((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)).

24. By 23, the attacker may know (CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391).
By 18, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[]))).

25. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391),sign(h((CreateSessionResponse,pub(skB[]),Nc_71389,Ns_71391)),skB[])) that the attacker may have by 24 may be received at input {19}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[]))).

26. By 25, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))),sign(h((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))).

27. By 26, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],pub(skB[])).
attacker(Passwd(skA[],pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_71530 at {6} in copy a_71393

new ch creating ch_71399 at {6} in copy a_71395

in(c, (a_71394,B)) at {7} in copy a_71395

new K creating K_71397 at {8} in copy a_71395

out(ch_71399, (a_71394,B,K_71397)) at {9} in copy a_71395 received at {30} in copy a_71395

out(c, K_71397) at {36} in copy a_71395

in(c, (A,B)) at {7} in copy a_71393

new K creating K_71689 at {8} in copy a_71393

out(ch_71530, (A,B,K_71689)) at {9} in copy a_71393 received at {30} in copy a_71393

out(c, CreateSessionRequest) at {36} in copy a_71393

out(c, CreateSessionRequest) at {15} in copy a_71393

new Nc creating Nc_71396 at {16} in copy a_71393

out(c, ((CreateSessionRequest,pub(skA),Nc_71396),sign(h((CreateSessionRequest,pub(skA),Nc_71396)),skA))) at {18} in copy a_71393

in(c, ((CreateSessionRequest,pub(sk(a_71394)),Nc_71396),sign(h((CreateSessionRequest,pub(sk(a_71394)),Nc_71396)),sk(a_71394)))) at {37} in copy a_71395

new Ns_90 creating Ns_71398 at {40} in copy a_71395

event(beginSrv(B,a_71394,Ns_71398)) at {41} in copy a_71395

out(c, ((CreateSessionResponse,pub(skB),Nc_71396,Ns_71398),sign(h((CreateSessionResponse,pub(skB),Nc_71396,Ns_71398)),skB))) at {43} in copy a_71395

in(c, ((CreateSessionResponse,pub(skB),Nc_71396,Ns_71398),sign(h((CreateSessionResponse,pub(skB),Nc_71396,Ns_71398)),skB))) at {19} in copy a_71393

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {22} in copy a_71393

out(c, ((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB))),sign(h((ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))),skA))) at {24} in copy a_71393

The attacker has the message Passwd(skA,pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skB[]))) is false.
