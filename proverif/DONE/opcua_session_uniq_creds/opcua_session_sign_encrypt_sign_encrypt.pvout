File "opcua_session_sign_encrypt_sign_encrypt.pv", line 108, character 41 - line 108, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(skCli,skSess),Passwd(skCli,skSess)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli,skSess),Passwd(skCli,skSess)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Cli = A) || (Cli = B)) then
            {31}event endSrv(Cli,Sess,(Login(skCli,skSess),Passwd(skCli,skSess)))
) | (
    {32}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {33}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {34}let pkCli_63: bitstring = pub(skCli_62) in
    {35}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {36}let pkSess_65: bitstring = pub(skSess_64) in
    {37}in(c, (em1: bitstring,sigM1: bitstring));
    {38}new Nc_66: bitstring;
    {39}let m1_67: bitstring = sdec(em1,K_61) in
    {40}if (verify(h(m1_67),sigM1,pkCli_63) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
        {42}new Ns_69: bitstring;
        {43}let m2_70: bitstring = (CreateSessionResponse,pkSess_65,Nc_68,Ns_69) in
        {44}out(c, (senc(m2_70,K_61),sign(h(m2_70),skSess_64)));
        {45}in(c, (em3: bitstring,sigM3: bitstring));
        {46}let m3_71: bitstring = sdec(em3,K_61) in
        {47}if (verify(h(m3_71),sigM3,pkCli_63) <> true) then
            0
        else
            {48}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62,skSess_64),=Passwd(skCli_62,skSess_64)) = m3_71 in
            {49}new Ns2_72: bitstring;
            {50}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {51}out(c, (senc(m4_73,K_61),sign(h(m4_73),skSess_64)));
            {52}if ((Cli_59 = A) || (Cli_59 = B)) then
            {53}event endSrv(Cli_59,Sess_60,(Login(skCli_62,skSess_64),Passwd(skCli_62,skSess_64)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 126 rules in the queue.
600 rules inserted. The rule base contains 380 rules. 96 rules in the queue.
800 rules inserted. The rule base contains 445 rules. 62 rules in the queue.
1000 rules inserted. The rule base contains 574 rules. 32 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_10359,Y_10360,N_10361)) ==> event(beginCli(X_10359,Y_10360,N_10361))
Completing...
200 rules inserted. The rule base contains 161 rules. 101 rules in the queue.
400 rules inserted. The rule base contains 309 rules. 142 rules in the queue.
600 rules inserted. The rule base contains 406 rules. 159 rules in the queue.
800 rules inserted. The rule base contains 472 rules. 54 rules in the queue.
1000 rules inserted. The rule base contains 587 rules. 87 rules in the queue.
1200 rules inserted. The rule base contains 741 rules. 36 rules in the queue.
Starting query event(endSrv(X_10359,Y_10360,N_10361)) ==> event(beginCli(X_10359,Y_10360,N_10361))
goal reachable: begin(beginCli(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[])))) -> end(endSrv(B[],A[],(Login(skB[],skA[]),Passwd(skB[],skA[]))))
goal reachable: begin(beginCli(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[])))) -> end(endSrv(A[],B[],(Login(skA[],skB[]),Passwd(skA[],skB[]))))
goal reachable: Y_23523 <> B[] && Y_23523 <> A[] && begin(beginCli(B[],Y_23523,(Login(skB[],sk(Y_23523)),Passwd(skB[],sk(Y_23523))))) && attacker(Y_23523) -> end(endSrv(B[],Y_23523,(Login(skB[],sk(Y_23523)),Passwd(skB[],sk(Y_23523)))))
goal reachable: Y_23524 <> B[] && Y_23524 <> A[] && begin(beginCli(A[],Y_23524,(Login(skA[],sk(Y_23524)),Passwd(skA[],sk(Y_23524))))) && attacker(Y_23524) -> end(endSrv(A[],Y_23524,(Login(skA[],sk(Y_23524)),Passwd(skA[],sk(Y_23524)))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[])))) -> end(endSrv(B[],B[],(Login(skB[],skB[]),Passwd(skB[],skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[])))) -> end(endSrv(A[],A[],(Login(skA[],skA[]),Passwd(skA[],skA[]))))
RESULT event(endSrv(X_10359,Y_10360,N_10361)) ==> event(beginCli(X_10359,Y_10360,N_10361)) is true.
-- Query not attacker(Passwd(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 126 rules in the queue.
600 rules inserted. The rule base contains 380 rules. 96 rules in the queue.
800 rules inserted. The rule base contains 445 rules. 62 rules in the queue.
1000 rules inserted. The rule base contains 574 rules. 32 rules in the queue.
Starting query not attacker(Passwd(skA[],skB[]))
RESULT not attacker(Passwd(skA[],skB[])) is true.
-- Query not attacker(Login(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 126 rules in the queue.
600 rules inserted. The rule base contains 380 rules. 96 rules in the queue.
800 rules inserted. The rule base contains 445 rules. 62 rules in the queue.
1000 rules inserted. The rule base contains 574 rules. 32 rules in the queue.
Starting query not attacker(Login(skA[],skB[]))
RESULT not attacker(Login(skA[],skB[])) is true.
