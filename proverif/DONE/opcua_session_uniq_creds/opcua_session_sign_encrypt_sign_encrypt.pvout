File "opcua_session_sign_encrypt_sign_encrypt.pv", line 108, character 41 - line 108, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verifySign(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verifySign(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Sess = A) || (Sess = B)) then
            {31}event endCli(Sess,Cli,Nc)
) | (
    {32}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {33}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {34}let pkCli_84: bitstring = pub(skCli_83) in
    {35}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {36}let pkSess_86: bitstring = pub(skSess_85) in
    {37}let tmp_87: bitstring = (if ((Cli_80 <> A) && (Cli_80 <> B)) then K_82 else CreateSessionRequest) in
    {38}out(c, tmp_87);
    {39}in(c, (em1: bitstring,sigM1: bitstring));
    {40}new Nc_88: bitstring;
    {41}let m1_89: bitstring = sdec(em1,K_82) in
    {42}if (verifySign(h(m1_89),sigM1,pkCli_84) <> true) then
        0
    else
        {43}let (=CreateSessionRequest,=pkCli_84,Nc_90: bitstring) = m1_89 in
        {44}new Ns_91: bitstring;
        {45}event beginSrv(Sess_81,Cli_80,Nc_90);
        {46}let m2_92: bitstring = (CreateSessionResponse,pkSess_86,Nc_90,Ns_91) in
        {47}out(c, (senc(m2_92,K_82),sign(h(m2_92),skSess_85)));
        {48}in(c, (em3: bitstring,sigM3: bitstring));
        {49}let m3_93: bitstring = sdec(em3,K_82) in
        {50}if (verifySign(h(m3_93),sigM3,pkCli_84) <> true) then
            0
        else
            {51}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_93 in
            {52}if (verifyCreds(skSess_85,login,passwd) <> true) then
                0
            else
                {53}new Ns2_94: bitstring;
                {54}let m4_95: bitstring = (ActivateSessionResponse,Ns2_94) in
                {55}out(c, (senc(m4_95,K_82),sign(h(m4_95),skSess_85)));
                {56}if ((Cli_80 = A) || (Cli_80 = B)) then
                {57}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 152 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 124 rules in the queue.
600 rules inserted. The rule base contains 396 rules. 128 rules in the queue.
800 rules inserted. The rule base contains 484 rules. 76 rules in the queue.
1000 rules inserted. The rule base contains 564 rules. 70 rules in the queue.
1200 rules inserted. The rule base contains 653 rules. 97 rules in the queue.
1400 rules inserted. The rule base contains 796 rules. 79 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: begin(beginSrv(A[],B[],Nc[Sess = A[],Cli = B[],!1 = @sid_19624])) -> end(endCli(A[],B[],Nc[Sess = A[],Cli = B[],!1 = @sid_19624]))
goal reachable: begin(beginSrv(B[],A[],Nc[Sess = B[],Cli = A[],!1 = @sid_19625])) -> end(endCli(B[],A[],Nc[Sess = B[],Cli = A[],!1 = @sid_19625]))
goal reachable: begin(beginSrv(B[],B[],Nc[Sess = B[],Cli = B[],!1 = @sid_19626])) -> end(endCli(B[],B[],Nc[Sess = B[],Cli = B[],!1 = @sid_19626]))
goal reachable: begin(beginSrv(A[],A[],Nc[Sess = A[],Cli = A[],!1 = @sid_19627])) -> end(endCli(A[],A[],Nc[Sess = A[],Cli = A[],!1 = @sid_19627]))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_19631,Y_19632,N_19633)) ==> event(beginCli(X_19631,Y_19632,N_19633))
Completing...
200 rules inserted. The rule base contains 152 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 139 rules in the queue.
600 rules inserted. The rule base contains 414 rules. 162 rules in the queue.
800 rules inserted. The rule base contains 488 rules. 130 rules in the queue.
1000 rules inserted. The rule base contains 572 rules. 68 rules in the queue.
1200 rules inserted. The rule base contains 626 rules. 124 rules in the queue.
1400 rules inserted. The rule base contains 732 rules. 60 rules in the queue.
1600 rules inserted. The rule base contains 882 rules. 18 rules in the queue.
Starting query event(endSrv(X_19631,Y_19632,N_19633)) ==> event(beginCli(X_19631,Y_19632,N_19633))
goal reachable: begin(beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[]))))) -> end(endSrv(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[])))))
goal reachable: begin(beginCli(A[],B[],(Login(pub(skA[])),Passwd(skA[],pub(skB[]))))) -> end(endSrv(A[],B[],(Login(pub(skA[])),Passwd(skA[],pub(skB[])))))
goal reachable: begin(beginCli(B[],B[],(Login(pub(skB[])),Passwd(skB[],pub(skB[]))))) -> end(endSrv(B[],B[],(Login(pub(skB[])),Passwd(skB[],pub(skB[])))))
goal reachable: begin(beginCli(A[],A[],(Login(pub(skA[])),Passwd(skA[],pub(skA[]))))) -> end(endSrv(A[],A[],(Login(pub(skA[])),Passwd(skA[],pub(skA[])))))
RESULT event(endSrv(X_19631,Y_19632,N_19633)) ==> event(beginCli(X_19631,Y_19632,N_19633)) is true.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 146 rules. 88 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 125 rules in the queue.
600 rules inserted. The rule base contains 386 rules. 123 rules in the queue.
800 rules inserted. The rule base contains 461 rules. 63 rules in the queue.
1000 rules inserted. The rule base contains 526 rules. 90 rules in the queue.
1200 rules inserted. The rule base contains 646 rules. 56 rules in the queue.
1400 rules inserted. The rule base contains 792 rules. 7 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
RESULT not attacker(Passwd(skA[],pub(skB[]))) is true.
