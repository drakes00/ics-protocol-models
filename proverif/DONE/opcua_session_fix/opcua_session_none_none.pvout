Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, m1);
    {19}in(c, m2: bitstring);
    {20}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
    {21}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
    {22}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(skCli),Passwd(skCli)) in
    {23}out(c, m3);
    {24}in(c, m4: bitstring);
    {25}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    0
) | (
    {26}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {27}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {28}let pkCli_63: bitstring = pub(skCli_62) in
    {29}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {30}let pkSess_65: bitstring = pub(skSess_64) in
    {31}in(c, m1_66: bitstring);
    {32}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
    {33}new Ns_68: bitstring;
    {34}let m2_69: bitstring = (CreateSessionResponse,pkSess_65,Ns_68) in
    {35}out(c, m2_69);
    {36}in(c, m3_70: bitstring);
    {37}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_70 in
    {38}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)));
    {39}new Ns2_71: bitstring;
    {40}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
    {41}out(c, m4_72)
)

-- Query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
Completing...
200 rules inserted. The rule base contains 99 rules. 36 rules in the queue.
Starting query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
goal reachable: Sess_5393 <> B[] && Sess_5393 <> A[] && begin(beginCli(B[],Sess_5393,(Login(skB[]),Passwd(skB[])))) && attacker(Sess_5393) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
Abbreviations:
ch_5455 = ch[!1 = @sid_5450]
K_5456 = K[Sess = B[],Cli = B[],!1 = @sid_5450]

1. The attacker initially knows B[].
attacker(B[]).

2. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

3. The message (B[],B[]) that the attacker may have by 2 may be received at input {7}.
So the message (B[],B[],K_5456) may be sent on channel ch_5455 at output {13}.
mess(ch_5455,(B[],B[],K_5456)).

4. The attacker has some term Nc_5449.
attacker(Nc_5449).

5. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

6. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

7. By 6, the attacker may know CreateSessionRequest.
By 5, the attacker may know pub(skB[]).
By 4, the attacker may know Nc_5449.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_5449).
attacker((CreateSessionRequest,pub(skB[]),Nc_5449)).

8. We assume as hypothesis that
attacker(Sess_5415).

9. By 1, the attacker may know B[].
By 8, the attacker may know Sess_5415.
Using the function 2-tuple the attacker may obtain (B[],Sess_5415).
attacker((B[],Sess_5415)).

10. The attacker has some term Ns_5416.
attacker(Ns_5416).

11. By 8, the attacker may know Sess_5415.
Using the function sk the attacker may obtain sk(Sess_5415).
attacker(sk(Sess_5415)).

12. By 11, the attacker may know sk(Sess_5415).
Using the function pub the attacker may obtain pub(sk(Sess_5415)).
attacker(pub(sk(Sess_5415))).

13. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

14. By 13, the attacker may know CreateSessionResponse.
By 12, the attacker may know pub(sk(Sess_5415)).
By 10, the attacker may know Ns_5416.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_5415)),Ns_5416).
attacker((CreateSessionResponse,pub(sk(Sess_5415)),Ns_5416)).

15. The message (B[],Sess_5415) that the attacker may have by 9 may be received at input {7}.
The message (CreateSessionResponse,pub(sk(Sess_5415)),Ns_5416) that the attacker may have by 14 may be received at input {19}.
The event beginCli(B[],Sess_5415,(Login(skB[]),Passwd(skB[]))) may be executed at {21}.
We have Sess_5415 <> B[] & Sess_5415 <> A[].
So the message (ActivateSessionRequest,Sess_5415,pub(skB[]),Login(skB[]),Passwd(skB[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,Sess_5415,pub(skB[]),Login(skB[]),Passwd(skB[]))).

16. By 15, the attacker may know (ActivateSessionRequest,Sess_5415,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

17. By 15, the attacker may know (ActivateSessionRequest,Sess_5415,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skB[]).
attacker(Login(skB[])).

18. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

19. By 18, the attacker may know ActivateSessionRequest.
By 1, the attacker may know B[].
By 5, the attacker may know pub(skB[]).
By 17, the attacker may know Login(skB[]).
By 16, the attacker may know Passwd(skB[]).
Using the function 5-tuple the attacker may obtain (ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[])).
attacker((ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[]))).

20. The message (B[],B[],K_5456) that may be sent on channel ch_5455 by 3 may be received at input {26}.
The message (CreateSessionRequest,pub(skB[]),Nc_5449) that the attacker may have by 7 may be received at input {31}.
The message (ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[])) that the attacker may have by 19 may be received at input {36}.
So event endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))) may be executed at {38}.
end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_5461 at {6} in copy a_5460

new ch creating ch_5564 at {6} in copy a_5458

in(c, (B,a)) at {7} in copy a_5458

new K creating K_5640 at {12} in copy a_5458

out(ch_5564, (B,a,K_5640)) at {13} in copy a_5458 received at {26} in copy a_5458

out(c, K_5640) at {15} in copy a_5458

new Nc creating Nc_5711 at {16} in copy a_5458

out(c, (CreateSessionRequest,pub(skB),Nc_5711)) at {18} in copy a_5458

in(c, (CreateSessionResponse,pub(sk(a)),a_5457)) at {19} in copy a_5458

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {21} in copy a_5458

out(c, (ActivateSessionRequest,a,pub(skB),Login(skB),Passwd(skB))) at {23} in copy a_5458

in(c, (B,B)) at {7} in copy a_5460

new K creating K_5462 at {12} in copy a_5460

out(ch_5461, (B,B,K_5462)) at {13} in copy a_5460 received at {26} in copy a_5460

out(c, CreateSessionRequest) at {15} in copy a_5460

new Nc creating Nc_5878 at {16} in copy a_5460

out(c, (CreateSessionRequest,pub(skB),Nc_5878)) at {18} in copy a_5460

in(c, (CreateSessionRequest,pub(skB),a_5459)) at {31} in copy a_5460

new Ns_68 creating Ns_5896 at {33} in copy a_5460

out(c, (CreateSessionResponse,pub(skB),Ns_5896)) at {35} in copy a_5460

in(c, (ActivateSessionRequest,B,pub(skB),Login(skB),Passwd(skB))) at {36} in copy a_5460

event(endSrv(B,B,(Login(skB),Passwd(skB)))) at {38} in copy a_5460

The event endSrv(B,B,(Login(skB),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N)) is false.
-- Query not attacker(Passwd(skA[]))
Completing...
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_9696.
attacker(Ns_9696).

4. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

5. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

6. By 5, the attacker may know CreateSessionResponse.
By 4, the attacker may know pub(skA[]).
By 3, the attacker may know Ns_9696.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Ns_9696).
attacker((CreateSessionResponse,pub(skA[]),Ns_9696)).

7. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Ns_9696) that the attacker may have by 6 may be received at input {19}.
So the message (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[]))).

8. By 7, the attacker may know (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_9782 at {6} in copy a_9704

in(c, (A,A)) at {7} in copy a_9704

new K creating K_9853 at {12} in copy a_9704

out(ch_9782, (A,A,K_9853)) at {13} in copy a_9704 received at {26} in copy a_9704

out(c, CreateSessionRequest) at {15} in copy a_9704

new Nc creating Nc_9933 at {16} in copy a_9704

out(c, (CreateSessionRequest,pub(skA),Nc_9933)) at {18} in copy a_9704

in(c, (CreateSessionResponse,pub(skA),a_9703)) at {19} in copy a_9704

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_9704

out(c, (ActivateSessionRequest,A,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_9704

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_13741.
attacker(Ns_13741).

4. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

5. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

6. By 5, the attacker may know CreateSessionResponse.
By 4, the attacker may know pub(skA[]).
By 3, the attacker may know Ns_13741.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Ns_13741).
attacker((CreateSessionResponse,pub(skA[]),Ns_13741)).

7. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Ns_13741) that the attacker may have by 6 may be received at input {19}.
So the message (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[]))).

8. By 7, the attacker may know (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_13827 at {6} in copy a_13749

in(c, (A,A)) at {7} in copy a_13749

new K creating K_13898 at {12} in copy a_13749

out(ch_13827, (A,A,K_13898)) at {13} in copy a_13749 received at {26} in copy a_13749

out(c, CreateSessionRequest) at {15} in copy a_13749

new Nc creating Nc_13978 at {16} in copy a_13749

out(c, (CreateSessionRequest,pub(skA),Nc_13978)) at {18} in copy a_13749

in(c, (CreateSessionResponse,pub(skA),a_13748)) at {19} in copy a_13749

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_13749

out(c, (ActivateSessionRequest,A,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_13749

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
