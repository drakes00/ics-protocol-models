Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {23}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(skCli),Passwd(skCli)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Ns)
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}in(c, m1_66: bitstring);
    {36}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
    {37}new Ns_68: bitstring;
    {38}event beginSrv(Sess_60,Cli_59,Ns_68);
    {39}let m2_69: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Nc_67,Ns_68) in
    {40}out(c, m2_69);
    {41}in(c, m3_70: bitstring);
    {42}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_70 in
    {43}new Ns2_71: bitstring;
    {44}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
    {45}out(c, m4_72);
    {46}if ((Cli_59 = A) || (Cli_59 = B)) then
    {47}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 107 rules. 34 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_6014,Y_6015,N_6016)) ==> event(beginCli(X_6014,Y_6015,N_6016))
Completing...
200 rules inserted. The rule base contains 107 rules. 28 rules in the queue.
Starting query event(endSrv(X_6014,Y_6015,N_6016)) ==> event(beginCli(X_6014,Y_6015,N_6016))
goal reachable: Sess_11984 <> B[] && Sess_11984 <> A[] && begin(beginCli(B[],Sess_11984,(Login(skB[]),Passwd(skB[])))) && attacker(Sess_11984) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
Abbreviations:
Nc_12084 = Nc[Sess = Sess_12019,Cli = B[],!1 = @sid_12020]
ch_12085 = ch[!1 = @sid_12079]
K_12086 = K[Sess = B[],Cli = B[],!1 = @sid_12079]

1. The attacker initially knows B[].
attacker(B[]).

2. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

3. The message (B[],B[]) that the attacker may have by 2 may be received at input {7}.
So the message (B[],B[],K_12086) may be sent on channel ch_12085 at output {13}.
mess(ch_12085,(B[],B[],K_12086)).

4. The attacker has some term Nc_12078.
attacker(Nc_12078).

5. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

6. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

7. By 6, the attacker may know CreateSessionRequest.
By 5, the attacker may know pub(skB[]).
By 4, the attacker may know Nc_12078.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_12078).
attacker((CreateSessionRequest,pub(skB[]),Nc_12078)).

8. We assume as hypothesis that
attacker(Sess_12019).

9. By 1, the attacker may know B[].
By 8, the attacker may know Sess_12019.
Using the function 2-tuple the attacker may obtain (B[],Sess_12019).
attacker((B[],Sess_12019)).

10. By 8, the attacker may know Sess_12019.
Using the function sk the attacker may obtain sk(Sess_12019).
attacker(sk(Sess_12019)).

11. The attacker has some term Ns_12021.
attacker(Ns_12021).

12. The message (B[],Sess_12019) that the attacker may have by 9 may be received at input {7}.
We have Sess_12019 <> B[] & Sess_12019 <> A[].
So the message ((CreateSessionRequest,pub(skB[]),Nc_12084),sign(h((CreateSessionRequest,pub(skB[]),Nc_12084)),skB[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skB[]),Nc_12084),sign(h((CreateSessionRequest,pub(skB[]),Nc_12084)),skB[]))).

13. By 12, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_12084),sign(h((CreateSessionRequest,pub(skB[]),Nc_12084)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_12084).
attacker((CreateSessionRequest,pub(skB[]),Nc_12084)).

14. By 13, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_12084).
Using the function 3-proj-3-tuple the attacker may obtain Nc_12084.
attacker(Nc_12084).

15. By 10, the attacker may know sk(Sess_12019).
Using the function pub the attacker may obtain pub(sk(Sess_12019)).
attacker(pub(sk(Sess_12019))).

16. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

17. By 16, the attacker may know CreateSessionResponse.
By 1, the attacker may know B[].
By 15, the attacker may know pub(sk(Sess_12019)).
By 14, the attacker may know Nc_12084.
By 11, the attacker may know Ns_12021.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021).
attacker((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)).

18. By 17, the attacker may know (CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021).
Using the function h the attacker may obtain h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)).
attacker(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021))).

19. By 18, the attacker may know h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)).
By 10, the attacker may know sk(Sess_12019).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019)).
attacker(sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019))).

20. By 17, the attacker may know (CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021).
By 19, the attacker may know sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021),sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019))).
attacker(((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021),sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019)))).

21. The message (B[],Sess_12019) that the attacker may have by 9 may be received at input {7}.
The message ((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021),sign(h((CreateSessionResponse,B[],pub(sk(Sess_12019)),Nc_12084,Ns_12021)),sk(Sess_12019))) that the attacker may have by 20 may be received at input {19}.
The event beginCli(B[],Sess_12019,(Login(skB[]),Passwd(skB[]))) may be executed at {22}.
We have Sess_12019 <> B[] & Sess_12019 <> A[].
So the message ((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]))).

22. By 21, the attacker may know ((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])).
attacker((ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[]))).

23. By 22, the attacker may know (ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

24. By 22, the attacker may know (ActivateSessionRequest,Sess_12019,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skB[]).
attacker(Login(skB[])).

25. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

26. By 25, the attacker may know ActivateSessionRequest.
By 1, the attacker may know B[].
By 5, the attacker may know pub(skB[]).
By 24, the attacker may know Login(skB[]).
By 23, the attacker may know Passwd(skB[]).
Using the function 5-tuple the attacker may obtain (ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[])).
attacker((ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[]))).

27. The message (B[],B[],K_12086) that may be sent on channel ch_12085 by 3 may be received at input {30}.
The message (CreateSessionRequest,pub(skB[]),Nc_12078) that the attacker may have by 7 may be received at input {35}.
The message (ActivateSessionRequest,B[],pub(skB[]),Login(skB[]),Passwd(skB[])) that the attacker may have by 26 may be received at input {41}.
So event endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))) may be executed at {47}.
end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_12092 at {6} in copy a_12090

new ch creating ch_12203 at {6} in copy a_12087

in(c, (B,a)) at {7} in copy a_12087

new K creating K_12289 at {12} in copy a_12087

out(ch_12203, (B,a,K_12289)) at {13} in copy a_12087 received at {30} in copy a_12087

out(c, K_12289) at {15} in copy a_12087

new Nc creating Nc_12091 at {16} in copy a_12087

out(c, ((CreateSessionRequest,pub(skB),Nc_12091),sign(h((CreateSessionRequest,pub(skB),Nc_12091)),skB))) at {18} in copy a_12087

in(c, ((CreateSessionResponse,B,pub(sk(a)),Nc_12091,a_12088),sign(h((CreateSessionResponse,B,pub(sk(a)),Nc_12091,a_12088)),sk(a)))) at {19} in copy a_12087

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {22} in copy a_12087

out(c, ((ActivateSessionRequest,a,pub(skB),Login(skB),Passwd(skB)),sign(h((ActivateSessionRequest,a,pub(skB),Login(skB),Passwd(skB))),skB))) at {24} in copy a_12087

in(c, (B,B)) at {7} in copy a_12090

new K creating K_12093 at {12} in copy a_12090

out(ch_12092, (B,B,K_12093)) at {13} in copy a_12090 received at {30} in copy a_12090

out(c, CreateSessionRequest) at {15} in copy a_12090

new Nc creating Nc_12552 at {16} in copy a_12090

out(c, ((CreateSessionRequest,pub(skB),Nc_12552),sign(h((CreateSessionRequest,pub(skB),Nc_12552)),skB))) at {18} in copy a_12090

in(c, (CreateSessionRequest,pub(skB),a_12089)) at {35} in copy a_12090

new Ns_68 creating Ns_12572 at {37} in copy a_12090

event(beginSrv(B,B,Ns_12572)) at {38} in copy a_12090

out(c, (CreateSessionResponse,B,pub(skB),a_12089,Ns_12572)) at {40} in copy a_12090

in(c, (ActivateSessionRequest,B,pub(skB),Login(skB),Passwd(skB))) at {41} in copy a_12090

new Ns2_71 creating Ns2_12583 at {43} in copy a_12090

out(c, (ActivateSessionResponse,Ns2_12583)) at {45} in copy a_12090

event(endSrv(B,B,(Login(skB),Passwd(skB)))) at {47} in copy a_12090

The event endSrv(B,B,(Login(skB),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X_6014,Y_6015,N_6016)) ==> event(beginCli(X_6014,Y_6015,N_6016)) is false.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 104 rules. 27 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
Nc_17909 = Nc[Sess = Sess_17899,Cli = A[],!1 = @sid_17900]

1. The attacker has some term Sess_17899.
attacker(Sess_17899).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_17899.
Using the function 2-tuple the attacker may obtain (A[],Sess_17899).
attacker((A[],Sess_17899)).

4. By 1, the attacker may know Sess_17899.
Using the function sk the attacker may obtain sk(Sess_17899).
attacker(sk(Sess_17899)).

5. The attacker has some term Ns_17901.
attacker(Ns_17901).

6. The message (A[],Sess_17899) that the attacker may have by 3 may be received at input {7}.
We have Sess_17899 <> B[] & Sess_17899 <> A[].
So the message ((CreateSessionRequest,pub(skA[]),Nc_17909),sign(h((CreateSessionRequest,pub(skA[]),Nc_17909)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_17909),sign(h((CreateSessionRequest,pub(skA[]),Nc_17909)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_17909),sign(h((CreateSessionRequest,pub(skA[]),Nc_17909)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_17909).
attacker((CreateSessionRequest,pub(skA[]),Nc_17909)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17909).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17909.
attacker(Nc_17909).

9. By 4, the attacker may know sk(Sess_17899).
Using the function pub the attacker may obtain pub(sk(Sess_17899)).
attacker(pub(sk(Sess_17899))).

10. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

11. By 10, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 9, the attacker may know pub(sk(Sess_17899)).
By 8, the attacker may know Nc_17909.
By 5, the attacker may know Ns_17901.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901).
attacker((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)).

12. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901))).

13. By 12, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)).
By 4, the attacker may know sk(Sess_17899).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899))).

14. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901).
By 13, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901),sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901),sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899)))).

15. The message (A[],Sess_17899) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901),sign(h((CreateSessionResponse,A[],pub(sk(Sess_17899)),Nc_17909,Ns_17901)),sk(Sess_17899))) that the attacker may have by 14 may be received at input {19}.
We have Sess_17899 <> B[] & Sess_17899 <> A[].
So the message ((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

16. By 15, the attacker may know ((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,Sess_17899,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_17997 at {6} in copy a_17911

in(c, (A,a_17910)) at {7} in copy a_17911

new K creating K_18083 at {12} in copy a_17911

out(ch_17997, (A,a_17910,K_18083)) at {13} in copy a_17911 received at {30} in copy a_17911

out(c, K_18083) at {15} in copy a_17911

new Nc creating Nc_17913 at {16} in copy a_17911

out(c, ((CreateSessionRequest,pub(skA),Nc_17913),sign(h((CreateSessionRequest,pub(skA),Nc_17913)),skA))) at {18} in copy a_17911

in(c, ((CreateSessionResponse,A,pub(sk(a_17910)),Nc_17913,a_17912),sign(h((CreateSessionResponse,A,pub(sk(a_17910)),Nc_17913,a_17912)),sk(a_17910)))) at {19} in copy a_17911

event(beginCli(A,a_17910,(Login(skA),Passwd(skA)))) at {22} in copy a_17911

out(c, ((ActivateSessionRequest,a_17910,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a_17910,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_17911

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 104 rules. 27 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
Nc_23504 = Nc[Sess = Sess_23494,Cli = A[],!1 = @sid_23495]

1. The attacker has some term Sess_23494.
attacker(Sess_23494).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_23494.
Using the function 2-tuple the attacker may obtain (A[],Sess_23494).
attacker((A[],Sess_23494)).

4. By 1, the attacker may know Sess_23494.
Using the function sk the attacker may obtain sk(Sess_23494).
attacker(sk(Sess_23494)).

5. The attacker has some term Ns_23496.
attacker(Ns_23496).

6. The message (A[],Sess_23494) that the attacker may have by 3 may be received at input {7}.
We have Sess_23494 <> B[] & Sess_23494 <> A[].
So the message ((CreateSessionRequest,pub(skA[]),Nc_23504),sign(h((CreateSessionRequest,pub(skA[]),Nc_23504)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_23504),sign(h((CreateSessionRequest,pub(skA[]),Nc_23504)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_23504),sign(h((CreateSessionRequest,pub(skA[]),Nc_23504)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_23504).
attacker((CreateSessionRequest,pub(skA[]),Nc_23504)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_23504).
Using the function 3-proj-3-tuple the attacker may obtain Nc_23504.
attacker(Nc_23504).

9. By 4, the attacker may know sk(Sess_23494).
Using the function pub the attacker may obtain pub(sk(Sess_23494)).
attacker(pub(sk(Sess_23494))).

10. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

11. By 10, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 9, the attacker may know pub(sk(Sess_23494)).
By 8, the attacker may know Nc_23504.
By 5, the attacker may know Ns_23496.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496).
attacker((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)).

12. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496))).

13. By 12, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)).
By 4, the attacker may know sk(Sess_23494).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494))).

14. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496).
By 13, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496),sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496),sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494)))).

15. The message (A[],Sess_23494) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496),sign(h((CreateSessionResponse,A[],pub(sk(Sess_23494)),Nc_23504,Ns_23496)),sk(Sess_23494))) that the attacker may have by 14 may be received at input {19}.
We have Sess_23494 <> B[] & Sess_23494 <> A[].
So the message ((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

16. By 15, the attacker may know ((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,Sess_23494,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_23592 at {6} in copy a_23506

in(c, (A,a_23505)) at {7} in copy a_23506

new K creating K_23678 at {12} in copy a_23506

out(ch_23592, (A,a_23505,K_23678)) at {13} in copy a_23506 received at {30} in copy a_23506

out(c, K_23678) at {15} in copy a_23506

new Nc creating Nc_23508 at {16} in copy a_23506

out(c, ((CreateSessionRequest,pub(skA),Nc_23508),sign(h((CreateSessionRequest,pub(skA),Nc_23508)),skA))) at {18} in copy a_23506

in(c, ((CreateSessionResponse,A,pub(sk(a_23505)),Nc_23508,a_23507),sign(h((CreateSessionResponse,A,pub(sk(a_23505)),Nc_23508,a_23507)),sk(a_23505)))) at {19} in copy a_23506

event(beginCli(A,a_23505,(Login(skA),Passwd(skA)))) at {22} in copy a_23506

out(c, ((ActivateSessionRequest,a_23505,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a_23505,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_23506

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
