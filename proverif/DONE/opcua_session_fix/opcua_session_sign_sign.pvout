Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=Cli,=pkSess,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {23}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(skCli),Passwd(skCli)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Ns)
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}in(c, (m1_66: bitstring,sigM1: bitstring));
    {36}if (verify(h(m1_66),sigM1,pkCli_63) <> true) then
        0
    else
        {37}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
        {38}new Ns_68: bitstring;
        {39}event beginSrv(Sess_60,Cli_59,Ns_68);
        {40}let m2_69: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Ns_68) in
        {41}out(c, (m2_69,sign(h(m2_69),skSess_64)));
        {42}in(c, (m3_70: bitstring,sigM3: bitstring));
        {43}if (verify(h(m3_70),sigM3,pkCli_63) <> true) then
            0
        else
            {44}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_70 in
            {45}new Ns2_71: bitstring;
            {46}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {47}out(c, (m4_72,sign(h(m4_72),skSess_64)));
            {48}if ((Cli_59 = A) || (Cli_59 = B)) then
            {49}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 117 rules. 81 rules in the queue.
400 rules inserted. The rule base contains 156 rules. 144 rules in the queue.
600 rules inserted. The rule base contains 176 rules. 106 rules in the queue.
800 rules inserted. The rule base contains 236 rules. 72 rules in the queue.
1000 rules inserted. The rule base contains 258 rules. 60 rules in the queue.
1200 rules inserted. The rule base contains 392 rules. 96 rules in the queue.
1400 rules inserted. The rule base contains 414 rules. 100 rules in the queue.
1600 rules inserted. The rule base contains 414 rules. 100 rules in the queue.
1800 rules inserted. The rule base contains 421 rules. 81 rules in the queue.
2000 rules inserted. The rule base contains 482 rules. 25 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: begin(beginSrv(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25726])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25726]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25727],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25727])) -> end(endCli(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25726])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25726]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25727],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25727]))
goal reachable: begin(beginSrv(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25728])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25728]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25729],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25729])) -> end(endCli(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25728])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25728]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25729],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25729]))
goal reachable: Sess_25730 <> B[] && Sess_25730 <> A[] && begin(beginSrv(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25730,Cli = B[],!1 = @sid_25731])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25730,Cli = B[],!1 = @sid_25731]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25732],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25732])) && attacker(Sess_25730) -> end(endCli(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25730,Cli = B[],!1 = @sid_25731])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25730,Cli = B[],!1 = @sid_25731]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25732],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25732]))
goal reachable: begin(beginSrv(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25733])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25733]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25734],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25734])) -> end(endCli(A[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25733])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25733]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_25734],Sess_60 = A[],Cli_59 = B[],!1 = @sid_25734]))
goal reachable: Sess_25735 <> B[] && Sess_25735 <> A[] && begin(beginSrv(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25735,Cli = A[],!1 = @sid_25736])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25735,Cli = A[],!1 = @sid_25736]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25737],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25737])) && attacker(Sess_25735) -> end(endCli(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25735,Cli = A[],!1 = @sid_25736])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25735,Cli = A[],!1 = @sid_25736]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25737],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25737]))
goal reachable: begin(beginSrv(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25738])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25738]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25739],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25739])) -> end(endCli(B[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25738])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25738]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_25739],Sess_60 = B[],Cli_59 = A[],!1 = @sid_25739]))
goal reachable: begin(beginSrv(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25740])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25740]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25741],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25741])) -> end(endCli(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25740])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_25740]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25741],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25741]))
goal reachable: begin(beginSrv(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25742])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25742]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25743],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25743])) -> end(endCli(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25742])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_25742]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25743],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25743]))
goal reachable: Sess_25744 <> B[] && Sess_25744 <> A[] && begin(beginSrv(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25744,Cli = B[],!1 = @sid_25745])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25744,Cli = B[],!1 = @sid_25745]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25746],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25746])) && attacker(Sess_25744) -> end(endCli(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25744,Cli = B[],!1 = @sid_25745])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = Sess_25744,Cli = B[],!1 = @sid_25745]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25746],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25746]))
goal reachable: begin(beginSrv(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25747])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25747]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25748],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25748])) -> end(endCli(B[],B[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25747])),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_25747]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_25748],Sess_60 = B[],Cli_59 = B[],!1 = @sid_25748]))
goal reachable: Sess_25749 <> B[] && Sess_25749 <> A[] && begin(beginSrv(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25749,Cli = A[],!1 = @sid_25750])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25749,Cli = A[],!1 = @sid_25750]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25751],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25751])) && attacker(Sess_25749) -> end(endCli(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25749,Cli = A[],!1 = @sid_25750])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = Sess_25749,Cli = A[],!1 = @sid_25750]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25751],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25751]))
goal reachable: begin(beginSrv(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25752])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25752]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25753],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25753])) -> end(endCli(A[],A[],Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25752])),skA[]),m1_66 = (CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_25752]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_25753],Sess_60 = A[],Cli_59 = A[],!1 = @sid_25753]))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_25789,Y_25790,N_25791)) ==> event(beginCli(X_25789,Y_25790,N_25791))
Completing...
200 rules inserted. The rule base contains 117 rules. 83 rules in the queue.
400 rules inserted. The rule base contains 154 rules. 158 rules in the queue.
600 rules inserted. The rule base contains 184 rules. 114 rules in the queue.
800 rules inserted. The rule base contains 286 rules. 64 rules in the queue.
1000 rules inserted. The rule base contains 296 rules. 71 rules in the queue.
1200 rules inserted. The rule base contains 353 rules. 140 rules in the queue.
1400 rules inserted. The rule base contains 376 rules. 156 rules in the queue.
1600 rules inserted. The rule base contains 408 rules. 118 rules in the queue.
1800 rules inserted. The rule base contains 466 rules. 56 rules in the queue.
Starting query event(endSrv(X_25789,Y_25790,N_25791)) ==> event(beginCli(X_25789,Y_25790,N_25791))
goal reachable: begin(beginCli(B[],A[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],A[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],B[],(Login(skA[]),Passwd(skA[]))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
RESULT event(endSrv(X_25789,Y_25790,N_25791)) ==> event(beginCli(X_25789,Y_25790,N_25791)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 118 rules. 82 rules in the queue.
400 rules inserted. The rule base contains 144 rules. 137 rules in the queue.
600 rules inserted. The rule base contains 196 rules. 78 rules in the queue.
800 rules inserted. The rule base contains 222 rules. 52 rules in the queue.
1000 rules inserted. The rule base contains 288 rules. 42 rules in the queue.
1200 rules inserted. The rule base contains 286 rules. 48 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker has some term Sess_55315.
attacker(Sess_55315).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_55315.
Using the function 2-tuple the attacker may obtain (A[],Sess_55315).
attacker((A[],Sess_55315)).

4. By 1, the attacker may know Sess_55315.
Using the function sk the attacker may obtain sk(Sess_55315).
attacker(sk(Sess_55315)).

5. The attacker has some term Ns_55316.
attacker(Ns_55316).

6. By 4, the attacker may know sk(Sess_55315).
Using the function pub the attacker may obtain pub(sk(Sess_55315)).
attacker(pub(sk(Sess_55315))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 6, the attacker may know pub(sk(Sess_55315)).
By 5, the attacker may know Ns_55316.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316).
attacker((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)).

9. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316))).

10. By 9, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)).
By 4, the attacker may know sk(Sess_55315).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315))).

11. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316).
By 10, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316),sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316),sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315)))).

12. The message (A[],Sess_55315) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316),sign(h((CreateSessionResponse,A[],pub(sk(Sess_55315)),Ns_55316)),sk(Sess_55315))) that the attacker may have by 11 may be received at input {19}.
We have Sess_55315 <> B[] & Sess_55315 <> A[].
So the message ((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,Sess_55315,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_55415 at {6} in copy a_55326

in(c, (A,a)) at {7} in copy a_55326

new K creating K_55501 at {12} in copy a_55326

out(ch_55415, (A,a,K_55501)) at {13} in copy a_55326 received at {30} in copy a_55326

out(c, K_55501) at {15} in copy a_55326

new Nc creating Nc_55580 at {16} in copy a_55326

out(c, ((CreateSessionRequest,pub(skA),Nc_55580),sign(h((CreateSessionRequest,pub(skA),Nc_55580)),skA))) at {18} in copy a_55326

in(c, ((CreateSessionResponse,A,pub(sk(a)),a_55325),sign(h((CreateSessionResponse,A,pub(sk(a)),a_55325)),sk(a)))) at {19} in copy a_55326

event(beginCli(A,a,(Login(skA),Passwd(skA)))) at {22} in copy a_55326

out(c, ((ActivateSessionRequest,a,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_55326

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 118 rules. 82 rules in the queue.
400 rules inserted. The rule base contains 144 rules. 137 rules in the queue.
600 rules inserted. The rule base contains 196 rules. 78 rules in the queue.
800 rules inserted. The rule base contains 222 rules. 52 rules in the queue.
1000 rules inserted. The rule base contains 288 rules. 42 rules in the queue.
1200 rules inserted. The rule base contains 286 rules. 48 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker has some term Sess_66003.
attacker(Sess_66003).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_66003.
Using the function 2-tuple the attacker may obtain (A[],Sess_66003).
attacker((A[],Sess_66003)).

4. By 1, the attacker may know Sess_66003.
Using the function sk the attacker may obtain sk(Sess_66003).
attacker(sk(Sess_66003)).

5. The attacker has some term Ns_66004.
attacker(Ns_66004).

6. By 4, the attacker may know sk(Sess_66003).
Using the function pub the attacker may obtain pub(sk(Sess_66003)).
attacker(pub(sk(Sess_66003))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 6, the attacker may know pub(sk(Sess_66003)).
By 5, the attacker may know Ns_66004.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004).
attacker((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)).

9. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004))).

10. By 9, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)).
By 4, the attacker may know sk(Sess_66003).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003))).

11. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004).
By 10, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004),sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004),sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003)))).

12. The message (A[],Sess_66003) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004),sign(h((CreateSessionResponse,A[],pub(sk(Sess_66003)),Ns_66004)),sk(Sess_66003))) that the attacker may have by 11 may be received at input {19}.
We have Sess_66003 <> B[] & Sess_66003 <> A[].
So the message ((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,Sess_66003,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_66105 at {6} in copy a_66015

in(c, (A,a_66013)) at {7} in copy a_66015

new K creating K_66191 at {12} in copy a_66015

out(ch_66105, (A,a_66013,K_66191)) at {13} in copy a_66015 received at {30} in copy a_66015

out(c, K_66191) at {15} in copy a_66015

new Nc creating Nc_66270 at {16} in copy a_66015

out(c, ((CreateSessionRequest,pub(skA),Nc_66270),sign(h((CreateSessionRequest,pub(skA),Nc_66270)),skA))) at {18} in copy a_66015

in(c, ((CreateSessionResponse,A,pub(sk(a_66013)),a_66014),sign(h((CreateSessionResponse,A,pub(sk(a_66013)),a_66014)),sk(a_66013)))) at {19} in copy a_66015

event(beginCli(A,a_66013,(Login(skA),Passwd(skA)))) at {22} in copy a_66015

out(c, ((ActivateSessionRequest,a_66013,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a_66013,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_66015

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
