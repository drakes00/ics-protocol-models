Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli)));
        {24}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(pkCli),Passwd(skCli)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Sess = A) || (Sess = B)) then
            {31}event endCli(Sess,Cli,Ns)
) | (
    {32}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {33}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {34}let pkCli_63: bitstring = pub(skCli_62) in
    {35}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {36}let pkSess_65: bitstring = pub(skSess_64) in
    {37}let tmp_66: bitstring = (if ((Cli_59 <> A) && (Cli_59 <> B)) then K_61 else CreateSessionRequest) in
    {38}out(c, tmp_66);
    {39}in(c, m1_67: bitstring);
    {40}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
    {41}new Ns_69: bitstring;
    {42}event beginSrv(Sess_60,Cli_59,Ns_69);
    {43}let m2_70: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Nc_68,Ns_69) in
    {44}out(c, m2_70);
    {45}in(c, m3_71: bitstring);
    {46}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(pkCli_63),=Passwd(skCli_62)) = m3_71 in
    {47}new Ns2_72: bitstring;
    {48}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
    {49}out(c, m4_73);
    {50}if ((Cli_59 = A) || (Cli_59 = B)) then
    {51}event endSrv(Cli_59,Sess_60,(Login(pkCli_63),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 130 rules. 37 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_7013,Y_7014,N_7015)) ==> event(beginCli(X_7013,Y_7014,N_7015))
Completing...
200 rules inserted. The rule base contains 128 rules. 35 rules in the queue.
Starting query event(endSrv(X_7013,Y_7014,N_7015)) ==> event(beginCli(X_7013,Y_7014,N_7015))
goal reachable: Sess_13661 <> B[] && Sess_13661 <> A[] && begin(beginCli(B[],Sess_13661,(Login(pub(skB[])),Passwd(skB[])))) && attacker(Sess_13661) -> end(endSrv(B[],A[],(Login(pub(skB[])),Passwd(skB[]))))
Abbreviations:
K_13744 = K[Sess = Sess_13712,Cli = B[],!1 = @sid_13713]
Nc_13745 = Nc[Sess = Sess_13712,Cli = B[],!1 = @sid_13713]
ch_13746 = ch[!1 = @sid_13739]
K_13747 = K[Sess = A[],Cli = B[],!1 = @sid_13739]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (B[],A[],K_13747) may be sent on channel ch_13746 at output {9}.
mess(ch_13746,(B[],A[],K_13747)).

5. The attacker has some term Nc_13738.
attacker(Nc_13738).

6. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

7. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

8. By 7, the attacker may know CreateSessionRequest.
By 6, the attacker may know pub(skB[]).
By 5, the attacker may know Nc_13738.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_13738).
attacker((CreateSessionRequest,pub(skB[]),Nc_13738)).

9. We assume as hypothesis that
attacker(Sess_13712).

10. By 2, the attacker may know B[].
By 9, the attacker may know Sess_13712.
Using the function 2-tuple the attacker may obtain (B[],Sess_13712).
attacker((B[],Sess_13712)).

11. The message (B[],Sess_13712) that the attacker may have by 10 may be received at input {7}.
We have Sess_13712 <> B[] & Sess_13712 <> A[].
So the message K_13744 may be sent to the attacker at output {15}.
attacker(K_13744).

12. By 9, the attacker may know Sess_13712.
Using the function sk the attacker may obtain sk(Sess_13712).
attacker(sk(Sess_13712)).

13. The attacker has some term Ns_13714.
attacker(Ns_13714).

14. The message (B[],Sess_13712) that the attacker may have by 10 may be received at input {7}.
We have Sess_13712 <> B[] & Sess_13712 <> A[].
So the message (senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744),sign(h((CreateSessionRequest,pub(skB[]),Nc_13745)),skB[])) may be sent to the attacker at output {18}.
attacker((senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744),sign(h((CreateSessionRequest,pub(skB[]),Nc_13745)),skB[]))).

15. By 14, the attacker may know (senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744),sign(h((CreateSessionRequest,pub(skB[]),Nc_13745)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744).
attacker(senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744)).

16. By 15, the attacker may know senc((CreateSessionRequest,pub(skB[]),Nc_13745),K_13744).
By 11, the attacker may know K_13744.
Using the function sdec the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_13745).
attacker((CreateSessionRequest,pub(skB[]),Nc_13745)).

17. By 16, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_13745).
Using the function 3-proj-3-tuple the attacker may obtain Nc_13745.
attacker(Nc_13745).

18. By 12, the attacker may know sk(Sess_13712).
Using the function pub the attacker may obtain pub(sk(Sess_13712)).
attacker(pub(sk(Sess_13712))).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 2, the attacker may know B[].
By 18, the attacker may know pub(sk(Sess_13712)).
By 17, the attacker may know Nc_13745.
By 13, the attacker may know Ns_13714.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714).
attacker((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)).

21. By 20, the attacker may know (CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714).
Using the function h the attacker may obtain h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)).
attacker(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714))).

22. By 21, the attacker may know h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)).
By 12, the attacker may know sk(Sess_13712).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712)).
attacker(sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712))).

23. By 20, the attacker may know (CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714).
By 11, the attacker may know K_13744.
Using the function senc the attacker may obtain senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744).
attacker(senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744)).

24. By 23, the attacker may know senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744).
By 22, the attacker may know sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744),sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712))).
attacker((senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744),sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712)))).

25. The message (B[],Sess_13712) that the attacker may have by 10 may be received at input {7}.
The message (senc((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714),K_13744),sign(h((CreateSessionResponse,B[],pub(sk(Sess_13712)),Nc_13745,Ns_13714)),sk(Sess_13712))) that the attacker may have by 24 may be received at input {19}.
The event beginCli(B[],Sess_13712,(Login(pub(skB[])),Passwd(skB[]))) may be executed at {23}.
We have Sess_13712 <> B[] & Sess_13712 <> A[].
So the message (senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744),sign(h((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))),skB[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744),sign(h((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))),skB[]))).

26. By 25, the attacker may know (senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744),sign(h((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744).
attacker(senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744)).

27. By 26, the attacker may know senc((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])),K_13744).
By 11, the attacker may know K_13744.
Using the function sdec the attacker may obtain (ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])).
attacker((ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))).

28. By 27, the attacker may know (ActivateSessionRequest,Sess_13712,pub(skB[]),Login(pub(skB[])),Passwd(skB[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

29. By 6, the attacker may know pub(skB[]).
Using the function Login the attacker may obtain Login(pub(skB[])).
attacker(Login(pub(skB[]))).

30. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

31. By 30, the attacker may know ActivateSessionRequest.
By 1, the attacker may know A[].
By 6, the attacker may know pub(skB[]).
By 29, the attacker may know Login(pub(skB[])).
By 28, the attacker may know Passwd(skB[]).
Using the function 5-tuple the attacker may obtain (ActivateSessionRequest,A[],pub(skB[]),Login(pub(skB[])),Passwd(skB[])).
attacker((ActivateSessionRequest,A[],pub(skB[]),Login(pub(skB[])),Passwd(skB[]))).

32. The message (B[],A[],K_13747) that may be sent on channel ch_13746 by 4 may be received at input {32}.
The message (CreateSessionRequest,pub(skB[]),Nc_13738) that the attacker may have by 8 may be received at input {39}.
The message (ActivateSessionRequest,A[],pub(skB[]),Login(pub(skB[])),Passwd(skB[])) that the attacker may have by 31 may be received at input {45}.
So event endSrv(B[],A[],(Login(pub(skB[])),Passwd(skB[]))) may be executed at {51}.
end(endSrv(B[],A[],(Login(pub(skB[])),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_13754 at {6} in copy a_13751

new ch creating ch_13877 at {6} in copy a_13748

in(c, (B,a)) at {7} in copy a_13748

new K creating K_13753 at {8} in copy a_13748

out(ch_13877, (B,a,K_13753)) at {9} in copy a_13748 received at {32} in copy a_13748

out(c, K_13753) at {15} in copy a_13748

new Nc creating Nc_13752 at {16} in copy a_13748

out(c, (senc((CreateSessionRequest,pub(skB),Nc_13752),K_13753),sign(h((CreateSessionRequest,pub(skB),Nc_13752)),skB))) at {18} in copy a_13748

in(c, (senc((CreateSessionResponse,B,pub(sk(a)),Nc_13752,a_13749),K_13753),sign(h((CreateSessionResponse,B,pub(sk(a)),Nc_13752,a_13749)),sk(a)))) at {19} in copy a_13748

event(beginCli(B,a,(Login(pub(skB)),Passwd(skB)))) at {23} in copy a_13748

out(c, (senc((ActivateSessionRequest,a,pub(skB),Login(pub(skB)),Passwd(skB)),K_13753),sign(h((ActivateSessionRequest,a,pub(skB),Login(pub(skB)),Passwd(skB))),skB))) at {25} in copy a_13748

in(c, (B,A)) at {7} in copy a_13751

new K creating K_13755 at {8} in copy a_13751

out(ch_13754, (B,A,K_13755)) at {9} in copy a_13751 received at {32} in copy a_13751

out(c, CreateSessionRequest) at {38} in copy a_13751

out(c, CreateSessionRequest) at {15} in copy a_13751

new Nc creating Nc_14288 at {16} in copy a_13751

out(c, (senc((CreateSessionRequest,pub(skB),Nc_14288),K_13755),sign(h((CreateSessionRequest,pub(skB),Nc_14288)),skB))) at {18} in copy a_13751

in(c, (CreateSessionRequest,pub(skB),a_13750)) at {39} in copy a_13751

new Ns_69 creating Ns_14310 at {41} in copy a_13751

event(beginSrv(A,B,Ns_14310)) at {42} in copy a_13751

out(c, (CreateSessionResponse,B,pub(skA),a_13750,Ns_14310)) at {44} in copy a_13751

in(c, (ActivateSessionRequest,A,pub(skB),Login(pub(skB)),Passwd(skB))) at {45} in copy a_13751

new Ns2_72 creating Ns2_14321 at {47} in copy a_13751

out(c, (ActivateSessionResponse,Ns2_14321)) at {49} in copy a_13751

event(endSrv(B,A,(Login(pub(skB)),Passwd(skB)))) at {51} in copy a_13751

The event endSrv(B,A,(Login(pub(skB)),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X_7013,Y_7014,N_7015)) ==> event(beginCli(X_7013,Y_7014,N_7015)) is false.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 127 rules. 26 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
K_20443 = K[Sess = Sess_20431,Cli = A[],!1 = @sid_20432]
Nc_20444 = Nc[Sess = Sess_20431,Cli = A[],!1 = @sid_20432]

1. The attacker has some term Sess_20431.
attacker(Sess_20431).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_20431.
Using the function 2-tuple the attacker may obtain (A[],Sess_20431).
attacker((A[],Sess_20431)).

4. The message (A[],Sess_20431) that the attacker may have by 3 may be received at input {7}.
We have Sess_20431 <> B[] & Sess_20431 <> A[].
So the message K_20443 may be sent to the attacker at output {15}.
attacker(K_20443).

5. By 1, the attacker may know Sess_20431.
Using the function sk the attacker may obtain sk(Sess_20431).
attacker(sk(Sess_20431)).

6. The attacker has some term Ns_20433.
attacker(Ns_20433).

7. The message (A[],Sess_20431) that the attacker may have by 3 may be received at input {7}.
We have Sess_20431 <> B[] & Sess_20431 <> A[].
So the message (senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443),sign(h((CreateSessionRequest,pub(skA[]),Nc_20444)),skA[])) may be sent to the attacker at output {18}.
attacker((senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443),sign(h((CreateSessionRequest,pub(skA[]),Nc_20444)),skA[]))).

8. By 7, the attacker may know (senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443),sign(h((CreateSessionRequest,pub(skA[]),Nc_20444)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443).
attacker(senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443)).

9. By 8, the attacker may know senc((CreateSessionRequest,pub(skA[]),Nc_20444),K_20443).
By 4, the attacker may know K_20443.
Using the function sdec the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_20444).
attacker((CreateSessionRequest,pub(skA[]),Nc_20444)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_20444).
Using the function 3-proj-3-tuple the attacker may obtain Nc_20444.
attacker(Nc_20444).

11. By 5, the attacker may know sk(Sess_20431).
Using the function pub the attacker may obtain pub(sk(Sess_20431)).
attacker(pub(sk(Sess_20431))).

12. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

13. By 12, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 11, the attacker may know pub(sk(Sess_20431)).
By 10, the attacker may know Nc_20444.
By 6, the attacker may know Ns_20433.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433).
attacker((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)).

14. By 13, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433))).

15. By 14, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)).
By 5, the attacker may know sk(Sess_20431).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431))).

16. By 13, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433).
By 4, the attacker may know K_20443.
Using the function senc the attacker may obtain senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443).
attacker(senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443)).

17. By 16, the attacker may know senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443).
By 15, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443),sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431))).
attacker((senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443),sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431)))).

18. The message (A[],Sess_20431) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433),K_20443),sign(h((CreateSessionResponse,A[],pub(sk(Sess_20431)),Nc_20444,Ns_20433)),sk(Sess_20431))) that the attacker may have by 17 may be received at input {19}.
We have Sess_20431 <> B[] & Sess_20431 <> A[].
So the message (senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443),sign(h((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443),sign(h((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[]))).

19. By 18, the attacker may know (senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443),sign(h((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443).
attacker(senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443)).

20. By 19, the attacker may know senc((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),K_20443).
By 4, the attacker may know K_20443.
Using the function sdec the attacker may obtain (ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))).

21. By 20, the attacker may know (ActivateSessionRequest,Sess_20431,pub(skA[]),Login(pub(skA[])),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_20542 at {6} in copy a_20446

in(c, (A,a_20445)) at {7} in copy a_20446

new K creating K_20449 at {8} in copy a_20446

out(ch_20542, (A,a_20445,K_20449)) at {9} in copy a_20446 received at {32} in copy a_20446

out(c, K_20449) at {15} in copy a_20446

new Nc creating Nc_20448 at {16} in copy a_20446

out(c, (senc((CreateSessionRequest,pub(skA),Nc_20448),K_20449),sign(h((CreateSessionRequest,pub(skA),Nc_20448)),skA))) at {18} in copy a_20446

in(c, (senc((CreateSessionResponse,A,pub(sk(a_20445)),Nc_20448,a_20447),K_20449),sign(h((CreateSessionResponse,A,pub(sk(a_20445)),Nc_20448,a_20447)),sk(a_20445)))) at {19} in copy a_20446

event(beginCli(A,a_20445,(Login(pub(skA)),Passwd(skA)))) at {23} in copy a_20446

out(c, (senc((ActivateSessionRequest,a_20445,pub(skA),Login(pub(skA)),Passwd(skA)),K_20449),sign(h((ActivateSessionRequest,a_20445,pub(skA),Login(pub(skA)),Passwd(skA))),skA))) at {25} in copy a_20446

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
