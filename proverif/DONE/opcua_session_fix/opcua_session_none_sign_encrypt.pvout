File "opcua_session_none_sign_encrypt.pv", line 104, character 41 - line 104, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, m1);
    {19}in(c, m2: bitstring);
    {20}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
    {21}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
    {22}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(skCli),Passwd(skCli)) in
    {23}out(c, m3);
    {24}in(c, m4: bitstring);
    {25}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    {26}if ((Sess = A) || (Sess = B)) then
    {27}event endCli(Sess,Cli,Ns)
) | (
    {28}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {29}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {30}let pkCli_63: bitstring = pub(skCli_62) in
    {31}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {32}let pkSess_65: bitstring = pub(skSess_64) in
    {33}in(c, (em1: bitstring,sigM1: bitstring));
    {34}new Nc_66: bitstring;
    {35}let m1_67: bitstring = sdec(em1,K_61) in
    {36}if (verify(h(m1_67),sigM1,pkCli_63) <> true) then
        0
    else
        {37}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
        {38}new Ns_69: bitstring;
        {39}event beginSrv(Sess_60,Cli_59,Ns_69);
        {40}let m2_70: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Nc_68,Ns_69) in
        {41}out(c, (senc(m2_70,K_61),sign(h(m2_70),skSess_64)));
        {42}in(c, (em3: bitstring,sigM3: bitstring));
        {43}let m3_71: bitstring = sdec(em3,K_61) in
        {44}if (verify(h(m3_71),sigM3,pkCli_63) <> true) then
            0
        else
            {45}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_71 in
            {46}new Ns2_72: bitstring;
            {47}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {48}out(c, (senc(m4_73,K_61),sign(h(m4_73),skSess_64)));
            {49}if ((Cli_59 = A) || (Cli_59 = B)) then
            {50}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 124 rules. 40 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: attacker(N_6984) -> end(endCli(A[],B[],N_6984))
Abbreviations:
Nc_7012 = Nc[Sess = A[],Cli = B[],!1 = @sid_7007]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. We assume as hypothesis that
attacker(N_7011).

5. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,pub(skB[]),Nc_7012) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skB[]),Nc_7012)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_7012).
Using the function 3-proj-3-tuple the attacker may obtain Nc_7012.
attacker(Nc_7012).

7. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 2, the attacker may know B[].
By 7, the attacker may know pub(skA[]).
By 6, the attacker may know Nc_7012.
By 4, the attacker may know N_7011.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,B[],pub(skA[]),Nc_7012,N_7011).
attacker((CreateSessionResponse,B[],pub(skA[]),Nc_7012,N_7011)).

10. The attacker has some term Ns2_7006.
attacker(Ns2_7006).

11. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

12. By 11, the attacker may know ActivateSessionResponse.
By 10, the attacker may know Ns2_7006.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_7006).
attacker((ActivateSessionResponse,Ns2_7006)).

13. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,B[],pub(skA[]),Nc_7012,N_7011) that the attacker may have by 9 may be received at input {19}.
The message (ActivateSessionResponse,Ns2_7006) that the attacker may have by 12 may be received at input {24}.
So event endCli(A[],B[],N_7011) may be executed at {27}.
end(endCli(A[],B[],N_7011)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_7104 at {6} in copy a_7014

in(c, (B,A)) at {7} in copy a_7014

new K creating K_7175 at {12} in copy a_7014

out(ch_7104, (B,A,K_7175)) at {13} in copy a_7014 received at {28} in copy a_7014

out(c, CreateSessionRequest) at {15} in copy a_7014

new Nc creating Nc_7015 at {16} in copy a_7014

out(c, (CreateSessionRequest,pub(skB),Nc_7015)) at {18} in copy a_7014

in(c, (CreateSessionResponse,B,pub(skA),Nc_7015,a)) at {19} in copy a_7014

event(beginCli(B,A,(Login(skB),Passwd(skB)))) at {21} in copy a_7014

out(c, (ActivateSessionRequest,A,pub(skB),Login(skB),Passwd(skB))) at {23} in copy a_7014

in(c, (ActivateSessionResponse,a_7013)) at {24} in copy a_7014

event(endCli(A,B,a)) at {27} in copy a_7014

The event endCli(A,B,a) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_7304,Y_7305,N_7306)) ==> event(beginCli(X_7304,Y_7305,N_7306))
Completing...
200 rules inserted. The rule base contains 118 rules. 44 rules in the queue.
400 rules inserted. The rule base contains 229 rules. 36 rules in the queue.
Starting query event(endSrv(X_7304,Y_7305,N_7306)) ==> event(beginCli(X_7304,Y_7305,N_7306))
RESULT event(endSrv(X_7304,Y_7305,N_7306)) ==> event(beginCli(X_7304,Y_7305,N_7306)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 128 rules. 34 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
Nc_20915 = Nc[Sess = A[],Cli = A[],!1 = @sid_20908]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_20909.
attacker(Ns_20909).

4. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
So the message (CreateSessionRequest,pub(skA[]),Nc_20915) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skA[]),Nc_20915)).

5. By 4, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_20915).
Using the function 3-proj-3-tuple the attacker may obtain Nc_20915.
attacker(Nc_20915).

6. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 1, the attacker may know A[].
By 6, the attacker may know pub(skA[]).
By 5, the attacker may know Nc_20915.
By 3, the attacker may know Ns_20909.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(skA[]),Nc_20915,Ns_20909).
attacker((CreateSessionResponse,A[],pub(skA[]),Nc_20915,Ns_20909)).

9. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,A[],pub(skA[]),Nc_20915,Ns_20909) that the attacker may have by 8 may be received at input {19}.
So the message (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[]))).

10. By 9, the attacker may know (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_21008 at {6} in copy a_20916

in(c, (A,A)) at {7} in copy a_20916

new K creating K_21079 at {12} in copy a_20916

out(ch_21008, (A,A,K_21079)) at {13} in copy a_20916 received at {28} in copy a_20916

out(c, CreateSessionRequest) at {15} in copy a_20916

new Nc creating Nc_20918 at {16} in copy a_20916

out(c, (CreateSessionRequest,pub(skA),Nc_20918)) at {18} in copy a_20916

in(c, (CreateSessionResponse,A,pub(skA),Nc_20918,a_20917)) at {19} in copy a_20916

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_20916

out(c, (ActivateSessionRequest,A,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_20916

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 128 rules. 34 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
Nc_27099 = Nc[Sess = A[],Cli = A[],!1 = @sid_27092]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_27093.
attacker(Ns_27093).

4. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
So the message (CreateSessionRequest,pub(skA[]),Nc_27099) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skA[]),Nc_27099)).

5. By 4, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_27099).
Using the function 3-proj-3-tuple the attacker may obtain Nc_27099.
attacker(Nc_27099).

6. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 1, the attacker may know A[].
By 6, the attacker may know pub(skA[]).
By 5, the attacker may know Nc_27099.
By 3, the attacker may know Ns_27093.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(skA[]),Nc_27099,Ns_27093).
attacker((CreateSessionResponse,A[],pub(skA[]),Nc_27099,Ns_27093)).

9. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,A[],pub(skA[]),Nc_27099,Ns_27093) that the attacker may have by 8 may be received at input {19}.
So the message (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[]))).

10. By 9, the attacker may know (ActivateSessionRequest,A[],pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_27192 at {6} in copy a_27100

in(c, (A,A)) at {7} in copy a_27100

new K creating K_27263 at {12} in copy a_27100

out(ch_27192, (A,A,K_27263)) at {13} in copy a_27100 received at {28} in copy a_27100

out(c, CreateSessionRequest) at {15} in copy a_27100

new Nc creating Nc_27102 at {16} in copy a_27100

out(c, (CreateSessionRequest,pub(skA),Nc_27102)) at {18} in copy a_27100

in(c, (CreateSessionResponse,A,pub(skA),Nc_27102,a_27101)) at {19} in copy a_27100

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_27100

out(c, (ActivateSessionRequest,A,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_27100

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
