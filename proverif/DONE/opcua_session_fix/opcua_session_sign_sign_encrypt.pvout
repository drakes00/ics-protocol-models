File "opcua_session_sign_sign_encrypt.pv", line 105, character 41 - line 105, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=Cli,=pkSess,=Nc,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli)));
        {23}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(pkCli),Passwd(skCli)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Ns)
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}let tmp_66: bitstring = (if ((Cli_59 <> A) && (Cli_59 <> B)) then K_61 else CreateSessionRequest) in
    {36}out(c, tmp_66);
    {37}in(c, (em1: bitstring,sigM1: bitstring));
    {38}new Nc_67: bitstring;
    {39}let m1_68: bitstring = sdec(em1,K_61) in
    {40}if (verify(h(m1_68),sigM1,pkCli_63) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=pkCli_63,Nc_69: bitstring) = m1_68 in
        {42}new Ns_70: bitstring;
        {43}event beginSrv(Sess_60,Cli_59,Ns_70);
        {44}let m2_71: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Nc_69,Ns_70) in
        {45}out(c, (senc(m2_71,K_61),sign(h(m2_71),skSess_64)));
        {46}in(c, (em3: bitstring,sigM3: bitstring));
        {47}let m3_72: bitstring = sdec(em3,K_61) in
        {48}if (verify(h(m3_72),sigM3,pkCli_63) <> true) then
            0
        else
            {49}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(pkCli_63),=Passwd(skCli_62)) = m3_72 in
            {50}new Ns2_73: bitstring;
            {51}let m4_74: bitstring = (ActivateSessionResponse,Ns2_73) in
            {52}out(c, (senc(m4_74,K_61),sign(h(m4_74),skSess_64)));
            {53}if ((Cli_59 = A) || (Cli_59 = B)) then
            {54}event endSrv(Cli_59,Sess_60,(Login(pkCli_63),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 143 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 247 rules. 110 rules in the queue.
600 rules inserted. The rule base contains 268 rules. 109 rules in the queue.
800 rules inserted. The rule base contains 332 rules. 49 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_12636,Y_12637,N_12638)) ==> event(beginCli(X_12636,Y_12637,N_12638))
Completing...
200 rules inserted. The rule base contains 143 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 264 rules. 122 rules in the queue.
600 rules inserted. The rule base contains 296 rules. 135 rules in the queue.
800 rules inserted. The rule base contains 344 rules. 79 rules in the queue.
1000 rules inserted. The rule base contains 400 rules. 25 rules in the queue.
Starting query event(endSrv(X_12636,Y_12637,N_12638)) ==> event(beginCli(X_12636,Y_12637,N_12638))
RESULT event(endSrv(X_12636,Y_12637,N_12638)) ==> event(beginCli(X_12636,Y_12637,N_12638)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 136 rules. 63 rules in the queue.
400 rules inserted. The rule base contains 250 rules. 101 rules in the queue.
600 rules inserted. The rule base contains 269 rules. 106 rules in the queue.
800 rules inserted. The rule base contains 329 rules. 44 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
Nc_32603 = Nc[Sess = Sess_32593,Cli = A[],!1 = @sid_32594]

1. The attacker has some term Sess_32593.
attacker(Sess_32593).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_32593.
Using the function 2-tuple the attacker may obtain (A[],Sess_32593).
attacker((A[],Sess_32593)).

4. By 1, the attacker may know Sess_32593.
Using the function sk the attacker may obtain sk(Sess_32593).
attacker(sk(Sess_32593)).

5. The attacker has some term Ns_32595.
attacker(Ns_32595).

6. The message (A[],Sess_32593) that the attacker may have by 3 may be received at input {7}.
We have Sess_32593 <> B[] & Sess_32593 <> A[].
So the message ((CreateSessionRequest,pub(skA[]),Nc_32603),sign(h((CreateSessionRequest,pub(skA[]),Nc_32603)),skA[])) may be sent to the attacker at output {18}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_32603),sign(h((CreateSessionRequest,pub(skA[]),Nc_32603)),skA[]))).

7. By 6, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_32603),sign(h((CreateSessionRequest,pub(skA[]),Nc_32603)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_32603).
attacker((CreateSessionRequest,pub(skA[]),Nc_32603)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_32603).
Using the function 3-proj-3-tuple the attacker may obtain Nc_32603.
attacker(Nc_32603).

9. By 4, the attacker may know sk(Sess_32593).
Using the function pub the attacker may obtain pub(sk(Sess_32593)).
attacker(pub(sk(Sess_32593))).

10. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

11. By 10, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 9, the attacker may know pub(sk(Sess_32593)).
By 8, the attacker may know Nc_32603.
By 5, the attacker may know Ns_32595.
Using the function 5-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595).
attacker((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)).

12. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595))).

13. By 12, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)).
By 4, the attacker may know sk(Sess_32593).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593))).

14. By 11, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595).
By 13, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595),sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595),sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593)))).

15. The message (A[],Sess_32593) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595),sign(h((CreateSessionResponse,A[],pub(sk(Sess_32593)),Nc_32603,Ns_32595)),sk(Sess_32593))) that the attacker may have by 14 may be received at input {19}.
We have Sess_32593 <> B[] & Sess_32593 <> A[].
So the message ((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[]))).

16. By 15, the attacker may know ((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,Sess_32593,pub(skA[]),Login(pub(skA[])),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_32704 at {6} in copy a_32604

in(c, (A,a)) at {7} in copy a_32604

new K creating K_32721 at {8} in copy a_32604

out(ch_32704, (A,a,K_32721)) at {9} in copy a_32604 received at {30} in copy a_32604

out(c, K_32721) at {15} in copy a_32604

new Nc creating Nc_32606 at {16} in copy a_32604

out(c, ((CreateSessionRequest,pub(skA),Nc_32606),sign(h((CreateSessionRequest,pub(skA),Nc_32606)),skA))) at {18} in copy a_32604

in(c, ((CreateSessionResponse,A,pub(sk(a)),Nc_32606,a_32605),sign(h((CreateSessionResponse,A,pub(sk(a)),Nc_32606,a_32605)),sk(a)))) at {19} in copy a_32604

event(beginCli(A,a,(Login(pub(skA)),Passwd(skA)))) at {22} in copy a_32604

out(c, ((ActivateSessionRequest,a,pub(skA),Login(pub(skA)),Passwd(skA)),sign(h((ActivateSessionRequest,a,pub(skA),Login(pub(skA)),Passwd(skA))),skA))) at {24} in copy a_32604

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
