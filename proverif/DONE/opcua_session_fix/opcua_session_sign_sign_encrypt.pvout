File "opcua_session_sign_sign_encrypt.pv", line 106, character 41 - line 106, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (m1,sign(h(m1),skCli)));
    {19}in(c, (m2: bitstring,sigM2: bitstring));
    {20}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {21}let (=CreateSessionResponse,=Cli,=pkSess,Ns: bitstring) = m2 in
        {22}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {23}let m3: bitstring = (ActivateSessionRequest,Sess,pkCli,Login(skCli),Passwd(skCli)) in
        {24}out(c, (m3,sign(h(m3),skCli)));
        {25}in(c, (m4: bitstring,sigM4: bitstring));
        {26}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {27}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {28}if ((Sess = A) || (Sess = B)) then
            {29}event endCli(Sess,Cli,Ns)
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}in(c, (em1: bitstring,sigM1: bitstring));
    {36}new Nc_66: bitstring;
    {37}let m1_67: bitstring = sdec(em1,K_61) in
    {38}if (verify(h(m1_67),sigM1,pkCli_63) <> true) then
        0
    else
        {39}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
        {40}new Ns_69: bitstring;
        {41}event beginSrv(Sess_60,Cli_59,Ns_69);
        {42}let m2_70: bitstring = (CreateSessionResponse,Cli_59,pkSess_65,Ns_69) in
        {43}out(c, (senc(m2_70,K_61),sign(h(m2_70),skSess_64)));
        {44}in(c, (em3: bitstring,sigM3: bitstring));
        {45}let m3_71: bitstring = sdec(em3,K_61) in
        {46}if (verify(h(m3_71),sigM3,pkCli_63) <> true) then
            0
        else
            {47}let (=ActivateSessionRequest,=Sess_60,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_71 in
            {48}new Ns2_72: bitstring;
            {49}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {50}out(c, (senc(m4_73,K_61),sign(h(m4_73),skSess_64)));
            {51}if ((Cli_59 = A) || (Cli_59 = B)) then
            {52}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 141 rules. 73 rules in the queue.
400 rules inserted. The rule base contains 224 rules. 102 rules in the queue.
600 rules inserted. The rule base contains 278 rules. 95 rules in the queue.
800 rules inserted. The rule base contains 350 rules. 32 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_11291,Y_11292,N_11293)) ==> event(beginCli(X_11291,Y_11292,N_11293))
Completing...
200 rules inserted. The rule base contains 144 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 252 rules. 114 rules in the queue.
600 rules inserted. The rule base contains 314 rules. 121 rules in the queue.
800 rules inserted. The rule base contains 422 rules. 36 rules in the queue.
Starting query event(endSrv(X_11291,Y_11292,N_11293)) ==> event(beginCli(X_11291,Y_11292,N_11293))
RESULT event(endSrv(X_11291,Y_11292,N_11293)) ==> event(beginCli(X_11291,Y_11292,N_11293)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 236 rules. 94 rules in the queue.
600 rules inserted. The rule base contains 281 rules. 87 rules in the queue.
800 rules inserted. The rule base contains 342 rules. 32 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker has some term Sess_30473.
attacker(Sess_30473).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_30473.
Using the function 2-tuple the attacker may obtain (A[],Sess_30473).
attacker((A[],Sess_30473)).

4. By 1, the attacker may know Sess_30473.
Using the function sk the attacker may obtain sk(Sess_30473).
attacker(sk(Sess_30473)).

5. The attacker has some term Ns_30474.
attacker(Ns_30474).

6. By 4, the attacker may know sk(Sess_30473).
Using the function pub the attacker may obtain pub(sk(Sess_30473)).
attacker(pub(sk(Sess_30473))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 6, the attacker may know pub(sk(Sess_30473)).
By 5, the attacker may know Ns_30474.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474).
attacker((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)).

9. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474))).

10. By 9, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)).
By 4, the attacker may know sk(Sess_30473).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473))).

11. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474).
By 10, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474),sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474),sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473)))).

12. The message (A[],Sess_30473) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474),sign(h((CreateSessionResponse,A[],pub(sk(Sess_30473)),Ns_30474)),sk(Sess_30473))) that the attacker may have by 11 may be received at input {19}.
We have Sess_30473 <> B[] & Sess_30473 <> A[].
So the message ((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,Sess_30473,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_30579 at {6} in copy a_30484

in(c, (A,a)) at {7} in copy a_30484

new K creating K_30665 at {12} in copy a_30484

out(ch_30579, (A,a,K_30665)) at {13} in copy a_30484 received at {30} in copy a_30484

out(c, K_30665) at {15} in copy a_30484

new Nc creating Nc_30750 at {16} in copy a_30484

out(c, ((CreateSessionRequest,pub(skA),Nc_30750),sign(h((CreateSessionRequest,pub(skA),Nc_30750)),skA))) at {18} in copy a_30484

in(c, ((CreateSessionResponse,A,pub(sk(a)),a_30483),sign(h((CreateSessionResponse,A,pub(sk(a)),a_30483)),sk(a)))) at {19} in copy a_30484

event(beginCli(A,a,(Login(skA),Passwd(skA)))) at {22} in copy a_30484

out(c, ((ActivateSessionRequest,a,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_30484

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 68 rules in the queue.
400 rules inserted. The rule base contains 236 rules. 94 rules in the queue.
600 rules inserted. The rule base contains 281 rules. 87 rules in the queue.
800 rules inserted. The rule base contains 342 rules. 32 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker has some term Sess_39481.
attacker(Sess_39481).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_39481.
Using the function 2-tuple the attacker may obtain (A[],Sess_39481).
attacker((A[],Sess_39481)).

4. By 1, the attacker may know Sess_39481.
Using the function sk the attacker may obtain sk(Sess_39481).
attacker(sk(Sess_39481)).

5. The attacker has some term Ns_39482.
attacker(Ns_39482).

6. By 4, the attacker may know sk(Sess_39481).
Using the function pub the attacker may obtain pub(sk(Sess_39481)).
attacker(pub(sk(Sess_39481))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 2, the attacker may know A[].
By 6, the attacker may know pub(sk(Sess_39481)).
By 5, the attacker may know Ns_39482.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482).
attacker((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)).

9. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482).
Using the function h the attacker may obtain h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)).
attacker(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482))).

10. By 9, the attacker may know h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)).
By 4, the attacker may know sk(Sess_39481).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481)).
attacker(sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481))).

11. By 8, the attacker may know (CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482).
By 10, the attacker may know sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482),sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481))).
attacker(((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482),sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481)))).

12. The message (A[],Sess_39481) that the attacker may have by 3 may be received at input {7}.
The message ((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482),sign(h((CreateSessionResponse,A[],pub(sk(Sess_39481)),Ns_39482)),sk(Sess_39481))) that the attacker may have by 11 may be received at input {19}.
We have Sess_39481 <> B[] & Sess_39481 <> A[].
So the message ((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {24}.
attacker(((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,Sess_39481,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-5-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_39589 at {6} in copy a_39493

in(c, (A,a_39491)) at {7} in copy a_39493

new K creating K_39675 at {12} in copy a_39493

out(ch_39589, (A,a_39491,K_39675)) at {13} in copy a_39493 received at {30} in copy a_39493

out(c, K_39675) at {15} in copy a_39493

new Nc creating Nc_39760 at {16} in copy a_39493

out(c, ((CreateSessionRequest,pub(skA),Nc_39760),sign(h((CreateSessionRequest,pub(skA),Nc_39760)),skA))) at {18} in copy a_39493

in(c, ((CreateSessionResponse,A,pub(sk(a_39491)),a_39492),sign(h((CreateSessionResponse,A,pub(sk(a_39491)),a_39492)),sk(a_39491)))) at {19} in copy a_39493

event(beginCli(A,a_39491,(Login(skA),Passwd(skA)))) at {22} in copy a_39493

out(c, ((ActivateSessionRequest,a_39491,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,a_39491,pub(skA),Login(skA),Passwd(skA))),skA))) at {24} in copy a_39493

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
