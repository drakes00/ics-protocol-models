Linear part:
Completing equations...
Completed equations:
Convergent part:
dec(y,enc(y,x)) = x
Completing equations...
Completed equations:
dec(y,enc(y,x)) = x
Process:
(
    {1}in(cAO, (X: host,Y: host,m1: bitstring));
    {2}in(cBO, (=X,=Y,m2: bitstring));
    {3}if (m1 = m2) then
        0
    else
        {4}event different(X,Y,m2)
) | (
    {5}in(c, (X_27: host,Y_28: host));
    {6}if ((X_27 <> A) && (X_27 <> B)) then
        0
    else
        {7}event sent(X_27,Y_28,m);
        {8}event begin(X_27,Y_28,m);
        {9}out(cAO, (X_27,Y_28,m));
        {10}out(c, enc(k,m))
) | (
    {11}in(c, (X_29: host,Y_30: host));
    {12}if ((Y_30 <> A) && (Y_30 <> B)) then
        0
    else
        {13}in(c, y_31: bitstring);
        {14}let x_32: bitstring = dec(k,y_31) in
        {15}event received(X_29,Y_30,x_32);
        {16}out(cBO, (X_29,Y_30,x_32));
        {17}if ((X_29 = A) || (X_29 = B)) then
        {18}event end(X_29,Y_30,x_32)
)

-- Query event(different(X_33,Y_34,N)) ==> (event(sent(X_33,Y_34,N)) && event(received(X_33,Y_34,N)))
Completing...
Starting query event(different(X_33,Y_34,N)) ==> (event(sent(X_33,Y_34,N)) && event(received(X_33,Y_34,N)))
goal reachable: y_1203 <> enc(k[],m[]) && begin(received(A[],B[],dec(k[],y_1203))) && attacker(y_1203) && begin(sent(A[],B[],m[])) -> end(different(A[],B[],dec(k[],y_1203)))

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The message (A[],B[]) that the attacker may have by 3 may be received at input {5}.
The event sent(A[],B[],m[]) may be executed at {7}.
So the message (A[],B[],m[]) may be sent on channel cAO[] at output {9}.
mess(cAO[],(A[],B[],m[])).

5. We assume as hypothesis that
attacker(y_1216).

6. The message (A[],B[]) that the attacker may have by 3 may be received at input {11}.
The message y_1216 that the attacker may have by 5 may be received at input {13}.
The event received(A[],B[],dec(k[],y_1216)) may be executed at {15}.
So the message (A[],B[],dec(k[],y_1216)) may be sent on channel cBO[] at output {16}.
mess(cBO[],(A[],B[],dec(k[],y_1216))).

7. The message (A[],B[],m[]) that may be sent on channel cAO[] by 4 may be received at input {1}.
The message (A[],B[],dec(k[],y_1216)) that may be sent on channel cBO[] by 6 may be received at input {2}.
We have m[] <> dec(k[],y_1216).
So event different(A[],B[],dec(k[],y_1216)) may be executed at {4}.
end(different(A[],B[],dec(k[],y_1216))).


A more detailed output of the traces is available with
  set traceDisplay = long.

in(c, (A,B)) at {5}

event(sent(A,B,m)) at {7}

event(begin(A,B,m)) at {8}

out(cAO, (A,B,m)) at {9} received at {1}

out(c, enc(k,m)) at {10}

in(c, (A,B)) at {11}

in(c, a) at {13}

event(received(A,B,dec(k,a))) at {15}

out(cBO, (A,B,dec(k,a))) at {16} received at {2}

event(end(A,B,dec(k,a))) at {18}

event(different(A,B,dec(k,a))) at {4}

The event different(A,B,dec(k,a)) is executed.
A trace has been found.
RESULT event(different(X_33,Y_34,N)) ==> (event(sent(X_33,Y_34,N)) && event(received(X_33,Y_34,N))) is false.
-- Query event(end(X_1263,Y_1264,Z)) ==> event(begin(X_1263,Y_1264,Z))
Completing...
Starting query event(end(X_1263,Y_1264,Z)) ==> event(begin(X_1263,Y_1264,Z))
goal reachable: begin(begin(B[],Y_2446,m[])) && attacker(Y_2446) -> end(end(B[],A[],m[]))

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. We assume as hypothesis that
attacker(Y_2471).

5. By 2, the attacker may know B[].
By 4, the attacker may know Y_2471.
Using the function 2-tuple the attacker may obtain (B[],Y_2471).
attacker((B[],Y_2471)).

6. The message (B[],Y_2471) that the attacker may have by 5 may be received at input {5}.
The event begin(B[],Y_2471,m[]) may be executed at {8}.
So the message enc(k[],m[]) may be sent to the attacker at output {10}.
attacker(enc(k[],m[])).

7. The message (B[],A[]) that the attacker may have by 3 may be received at input {11}.
The message enc(k[],m[]) that the attacker may have by 6 may be received at input {13}.
So event end(B[],A[],m[]) may be executed at {18}.
end(end(B[],A[],m[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

in(c, (B,a_2478)) at {5}

event(sent(B,a_2478,m)) at {7}

event(begin(B,a_2478,m)) at {8}

out(cAO, (B,a_2478,m)) at {9} received at {1}

out(c, enc(k,m)) at {10}

in(c, (B,A)) at {11}

in(c, enc(k,m)) at {13}

event(received(B,A,dec(k,enc(k,m)))) at {15}

out(cBO, (B,A,dec(k,enc(k,m)))) at {16} received at {2} (input fails)

event(end(B,A,dec(k,enc(k,m)))) at {18}

The event end(B,A,m) is executed.
A trace has been found.
RESULT event(end(X_1263,Y_1264,Z)) ==> event(begin(X_1263,Y_1264,Z)) is false.
