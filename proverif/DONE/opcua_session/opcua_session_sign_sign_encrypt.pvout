Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
(
    {5}!
    {6}in(c, (Cli: host,Sess: host));
    {7}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else sk(Cli))) in
    {8}let pkCli: bitstring = pub(skCli) in
    {9}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {10}let pkSess: bitstring = pub(skSess) in
    {11}let K: bitstring = Skey(pkCli,pkSess) in
    {12}let m1: bitstring = CreateSessionRequest in
    {13}out(c, (m1,sign(h(m1),skCli)));
    {14}in(c, (m2: bitstring,sigM2: bitstring));
    {15}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {16}let (SSC: bitstring,Ns2: bitstring) = m2 in
        {17}new CSC: bitstring;
        {18}event beginCli(Cli,Sess,(Login(pkCli,pkSess),Passwd(pkCli,pkSess)));
        {19}let m3: bitstring = (CSC,Login(pkCli,pkSess),Passwd(pkCli,pkSess)) in
        {20}out(c, (m3,sign(h(m3),skCli)));
        {21}in(c, (m4: bitstring,sigM4: bitstring));
        {22}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {23}if (m4 <> ActivateSessionResponse) then
            0
) | (
    {24}!
    {25}in(c, (Cli_59: host,Sess_60: host));
    {26}let skCli_61: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {27}let pkCli_62: bitstring = pub(skCli_61) in
    {28}let skSess_63: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else sk(Sess_60))) in
    {29}let pkSess_64: bitstring = pub(skSess_63) in
    {30}let K_65: bitstring = Skey(pkCli_62,pkSess_64) in
    {31}in(c, (em1: bitstring,sigM1: bitstring));
    {32}let m1_66: bitstring = sdec(em1,K_65) in
    {33}if (verify(h(m1_66),sigM1,pkCli_62) <> true) then
        0
    else
        {34}if (m1_66 <> CreateSessionRequest) then
            0
        else
            {35}new SSC_67: bitstring;
            {36}new Ns2_68: bitstring;
            {37}let m2_69: bitstring = (SSC_67,Ns2_68) in
            {38}out(c, (senc(m2_69,K_65),sign(h(m2_69),skSess_63)));
            {39}in(c, (em3: bitstring,sigM3: bitstring));
            {40}let m3_70: bitstring = sdec(em3,K_65) in
            {41}if (verify(h(m3_70),sigM3,pkCli_62) <> true) then
                0
            else
                {42}let (CSC_71: bitstring,=Login(pkCli_62,pkSess_64),=Passwd(pkCli_62,pkSess_64)) = m3_70 in
                {43}event endSrv(Cli_59,Sess_60,(Login(pkCli_62,pkSess_64),Passwd(pkCli_62,pkSess_64)));
                {44}let m4_72: bitstring = ActivateSessionResponse in
                {45}out(c, (senc(m4_72,K_65),sign(h(m4_72),skSess_63)))
) | (
    {46}!
    {47}in(c, (X: host,Y: host));
    {48}let skX: bitstring = (if (X = A) then skA else (if (X = B) then skB else sk(X))) in
    {49}let skY: bitstring = (if (Y = A) then skA else (if (Y = B) then skB else sk(Y))) in
    {50}if ((X,Y) = (A,B)) then
        0
    else
        {51}if ((X,Y) = (B,A)) then
            0
        else
            {52}out(c, Skey(pub(skX),pub(skY)))
)

-- Query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
Completing...
200 rules inserted. The rule base contains 153 rules. 71 rules in the queue.
400 rules inserted. The rule base contains 228 rules. 32 rules in the queue.
600 rules inserted. The rule base contains 243 rules. 37 rules in the queue.
800 rules inserted. The rule base contains 279 rules. 34 rules in the queue.
Starting query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
goal reachable: begin(beginCli(B[],B[],(Login(pub(skB[]),pub(skB[])),Passwd(pub(skB[]),pub(skB[]))))) -> end(endSrv(B[],B[],(Login(pub(skB[]),pub(skB[])),Passwd(pub(skB[]),pub(skB[])))))
goal reachable: begin(beginCli(A[],A[],(Login(pub(skA[]),pub(skA[])),Passwd(pub(skA[]),pub(skA[]))))) -> end(endSrv(A[],A[],(Login(pub(skA[]),pub(skA[])),Passwd(pub(skA[]),pub(skA[])))))
goal reachable: X_12123 <> B[] && X_12123 <> A[] && begin(beginCli(X_12123,B[],(Login(pub(sk(X_12123)),pub(skB[])),Passwd(pub(sk(X_12123)),pub(skB[]))))) && attacker(X_12123) -> end(endSrv(X_12123,B[],(Login(pub(sk(X_12123)),pub(skB[])),Passwd(pub(sk(X_12123)),pub(skB[])))))
goal reachable: X_12124 <> B[] && X_12124 <> A[] && begin(beginCli(X_12124,A[],(Login(pub(sk(X_12124)),pub(skA[])),Passwd(pub(sk(X_12124)),pub(skA[]))))) && attacker(X_12124) -> end(endSrv(X_12124,A[],(Login(pub(sk(X_12124)),pub(skA[])),Passwd(pub(sk(X_12124)),pub(skA[])))))
goal reachable: Y_12125 <> B[] && Y_12125 <> A[] && begin(beginCli(B[],Y_12125,(Login(pub(skB[]),pub(sk(Y_12125))),Passwd(pub(skB[]),pub(sk(Y_12125)))))) && attacker(Y_12125) -> end(endSrv(B[],Y_12125,(Login(pub(skB[]),pub(sk(Y_12125))),Passwd(pub(skB[]),pub(sk(Y_12125))))))
goal reachable: Y_12126 <> B[] && Y_12126 <> A[] && begin(beginCli(A[],Y_12126,(Login(pub(skA[]),pub(sk(Y_12126))),Passwd(pub(skA[]),pub(sk(Y_12126)))))) && attacker(Y_12126) -> end(endSrv(A[],Y_12126,(Login(pub(skA[]),pub(sk(Y_12126))),Passwd(pub(skA[]),pub(sk(Y_12126))))))
goal reachable: Y_12128 <> B[] && Y_12128 <> A[] && X_12127 <> B[] && X_12127 <> A[] && begin(beginCli(X_12127,Y_12128,(Login(pub(sk(X_12127)),pub(sk(Y_12128))),Passwd(pub(sk(X_12127)),pub(sk(Y_12128)))))) && attacker(X_12127) && attacker(Y_12128) -> end(endSrv(X_12127,Y_12128,(Login(pub(sk(X_12127)),pub(sk(Y_12128))),Passwd(pub(sk(X_12127)),pub(sk(Y_12128))))))
RESULT event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N)) is true.
-- Query not attacker(Skey(pub(skB[]),pub(skA[])))
Completing...
200 rules inserted. The rule base contains 137 rules. 60 rules in the queue.
400 rules inserted. The rule base contains 191 rules. 38 rules in the queue.
600 rules inserted. The rule base contains 157 rules. 38 rules in the queue.
Starting query not attacker(Skey(pub(skB[]),pub(skA[])))
RESULT not attacker(Skey(pub(skB[]),pub(skA[]))) is true.
-- Query not attacker(Skey(pub(skA[]),pub(skB[])))
Completing...
200 rules inserted. The rule base contains 137 rules. 60 rules in the queue.
400 rules inserted. The rule base contains 191 rules. 38 rules in the queue.
600 rules inserted. The rule base contains 157 rules. 38 rules in the queue.
Starting query not attacker(Skey(pub(skA[]),pub(skB[])))
RESULT not attacker(Skey(pub(skA[]),pub(skB[]))) is true.
-- Query not attacker(Passwd(pub(skA[]),pub(skB[])))
Completing...
200 rules inserted. The rule base contains 137 rules. 60 rules in the queue.
400 rules inserted. The rule base contains 191 rules. 38 rules in the queue.
600 rules inserted. The rule base contains 157 rules. 38 rules in the queue.
Starting query not attacker(Passwd(pub(skA[]),pub(skB[])))
goal reachable: attacker(Passwd(pub(skA[]),pub(skB[])))
Abbreviations:
SSC_42631 = SSC_67[sigM1 = sign(h(CreateSessionRequest),skB[]),em1 = senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),Sess_60 = B[],Cli_59 = B[],!1 = @sid_42614]
Ns2_42632 = Ns2_68[sigM1 = sign(h(CreateSessionRequest),skB[]),em1 = senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),Sess_60 = B[],Cli_59 = B[],!1 = @sid_42614]
CSC_42633 = CSC[sigM2 = sign(h((SSC_42631,Ns2_42632)),skB[]),m2 = (SSC_42631,Ns2_42632),Sess = B[],Cli = A[],!1 = @sid_42625]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

5. The message (B[],B[]) that the attacker may have by 4 may be received at input {6}.
So the message (CreateSessionRequest,sign(h(CreateSessionRequest),skB[])) may be sent to the attacker at output {13}.
attacker((CreateSessionRequest,sign(h(CreateSessionRequest),skB[]))).

6. By 5, the attacker may know (CreateSessionRequest,sign(h(CreateSessionRequest),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h(CreateSessionRequest),skB[]).
attacker(sign(h(CreateSessionRequest),skB[])).

7. The message (B[],B[]) that the attacker may have by 4 may be received at input {47}.
So the message Skey(pub(skB[]),pub(skB[])) may be sent to the attacker at output {52}.
attacker(Skey(pub(skB[]),pub(skB[]))).

8. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

9. By 8, the attacker may know CreateSessionRequest.
By 7, the attacker may know Skey(pub(skB[]),pub(skB[])).
Using the function senc the attacker may obtain senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))).
attacker(senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[])))).

10. By 9, the attacker may know senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))).
By 6, the attacker may know sign(h(CreateSessionRequest),skB[]).
Using the function 2-tuple the attacker may obtain (senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[])).
attacker((senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[]))).

11. The message (B[],B[]) that the attacker may have by 4 may be received at input {25}.
The message (senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[])) that the attacker may have by 10 may be received at input {31}.
So the message (senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_42631,Ns2_42632)),skB[])) may be sent to the attacker at output {38}.
attacker((senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_42631,Ns2_42632)),skB[]))).

12. By 11, the attacker may know (senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_42631,Ns2_42632)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((SSC_42631,Ns2_42632)),skB[]).
attacker(sign(h((SSC_42631,Ns2_42632)),skB[])).

13. By 11, the attacker may know (senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_42631,Ns2_42632)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))).
attacker(senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[])))).

14. By 13, the attacker may know senc((SSC_42631,Ns2_42632),Skey(pub(skB[]),pub(skB[]))).
By 7, the attacker may know Skey(pub(skB[]),pub(skB[])).
Using the function sdec the attacker may obtain (SSC_42631,Ns2_42632).
attacker((SSC_42631,Ns2_42632)).

15. By 14, the attacker may know (SSC_42631,Ns2_42632).
Using the function 2-proj-2-tuple the attacker may obtain Ns2_42632.
attacker(Ns2_42632).

16. By 14, the attacker may know (SSC_42631,Ns2_42632).
Using the function 1-proj-2-tuple the attacker may obtain SSC_42631.
attacker(SSC_42631).

17. By 16, the attacker may know SSC_42631.
By 15, the attacker may know Ns2_42632.
Using the function 2-tuple the attacker may obtain (SSC_42631,Ns2_42632).
attacker((SSC_42631,Ns2_42632)).

18. By 17, the attacker may know (SSC_42631,Ns2_42632).
By 12, the attacker may know sign(h((SSC_42631,Ns2_42632)),skB[]).
Using the function 2-tuple the attacker may obtain ((SSC_42631,Ns2_42632),sign(h((SSC_42631,Ns2_42632)),skB[])).
attacker(((SSC_42631,Ns2_42632),sign(h((SSC_42631,Ns2_42632)),skB[]))).

19. The message (A[],B[]) that the attacker may have by 3 may be received at input {6}.
The message ((SSC_42631,Ns2_42632),sign(h((SSC_42631,Ns2_42632)),skB[])) that the attacker may have by 18 may be received at input {14}.
So the message ((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[])) may be sent to the attacker at output {20}.
attacker(((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[]))).

20. By 19, the attacker may know ((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
attacker((CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))).

21. By 20, the attacker may know (CSC_42633,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(pub(skA[]),pub(skB[])).
attacker(Passwd(pub(skA[]),pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,B)) at {6} in copy a_42636

out(c, (CreateSessionRequest,sign(h(CreateSessionRequest),skB))) at {13} in copy a_42636

in(c, (A,B)) at {6} in copy a_42634

out(c, (CreateSessionRequest,sign(h(CreateSessionRequest),skA))) at {13} in copy a_42634

in(c, (B,B)) at {25} in copy a

in(c, (B,B)) at {47} in copy a_42635

out(c, Skey(pub(skB),pub(skB))) at {52} in copy a_42635

in(c, (senc(CreateSessionRequest,Skey(pub(skB),pub(skB))),sign(h(CreateSessionRequest),skB))) at {31} in copy a

new SSC_67 creating SSC_42637 at {35} in copy a

new Ns2_68 creating Ns2_42638 at {36} in copy a

out(c, (senc((SSC_42637,Ns2_42638),Skey(pub(skB),pub(skB))),sign(h((SSC_42637,Ns2_42638)),skB))) at {38} in copy a

in(c, ((SSC_42637,Ns2_42638),sign(h((SSC_42637,Ns2_42638)),skB))) at {14} in copy a_42634

new CSC creating CSC_42639 at {17} in copy a_42634

event(beginCli(A,B,(Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))))) at {18} in copy a_42634

out(c, ((CSC_42639,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))),sign(h((CSC_42639,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB)))),skA))) at {20} in copy a_42634

The attacker has the message Passwd(pub(skA),pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(pub(skA[]),pub(skB[]))) is false.
-- Query not attacker(Login(pub(skA[]),pub(skB[])))
Completing...
200 rules inserted. The rule base contains 137 rules. 60 rules in the queue.
400 rules inserted. The rule base contains 191 rules. 38 rules in the queue.
600 rules inserted. The rule base contains 157 rules. 38 rules in the queue.
Starting query not attacker(Login(pub(skA[]),pub(skB[])))
goal reachable: attacker(Login(pub(skA[]),pub(skB[])))
Abbreviations:
SSC_53346 = SSC_67[sigM1 = sign(h(CreateSessionRequest),skB[]),em1 = senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),Sess_60 = B[],Cli_59 = B[],!1 = @sid_53329]
Ns2_53347 = Ns2_68[sigM1 = sign(h(CreateSessionRequest),skB[]),em1 = senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),Sess_60 = B[],Cli_59 = B[],!1 = @sid_53329]
CSC_53348 = CSC[sigM2 = sign(h((SSC_53346,Ns2_53347)),skB[]),m2 = (SSC_53346,Ns2_53347),Sess = B[],Cli = A[],!1 = @sid_53340]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

5. The message (B[],B[]) that the attacker may have by 4 may be received at input {6}.
So the message (CreateSessionRequest,sign(h(CreateSessionRequest),skB[])) may be sent to the attacker at output {13}.
attacker((CreateSessionRequest,sign(h(CreateSessionRequest),skB[]))).

6. By 5, the attacker may know (CreateSessionRequest,sign(h(CreateSessionRequest),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h(CreateSessionRequest),skB[]).
attacker(sign(h(CreateSessionRequest),skB[])).

7. The message (B[],B[]) that the attacker may have by 4 may be received at input {47}.
So the message Skey(pub(skB[]),pub(skB[])) may be sent to the attacker at output {52}.
attacker(Skey(pub(skB[]),pub(skB[]))).

8. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

9. By 8, the attacker may know CreateSessionRequest.
By 7, the attacker may know Skey(pub(skB[]),pub(skB[])).
Using the function senc the attacker may obtain senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))).
attacker(senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[])))).

10. By 9, the attacker may know senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))).
By 6, the attacker may know sign(h(CreateSessionRequest),skB[]).
Using the function 2-tuple the attacker may obtain (senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[])).
attacker((senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[]))).

11. The message (B[],B[]) that the attacker may have by 4 may be received at input {25}.
The message (senc(CreateSessionRequest,Skey(pub(skB[]),pub(skB[]))),sign(h(CreateSessionRequest),skB[])) that the attacker may have by 10 may be received at input {31}.
So the message (senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_53346,Ns2_53347)),skB[])) may be sent to the attacker at output {38}.
attacker((senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_53346,Ns2_53347)),skB[]))).

12. By 11, the attacker may know (senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_53346,Ns2_53347)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((SSC_53346,Ns2_53347)),skB[]).
attacker(sign(h((SSC_53346,Ns2_53347)),skB[])).

13. By 11, the attacker may know (senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))),sign(h((SSC_53346,Ns2_53347)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))).
attacker(senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[])))).

14. By 13, the attacker may know senc((SSC_53346,Ns2_53347),Skey(pub(skB[]),pub(skB[]))).
By 7, the attacker may know Skey(pub(skB[]),pub(skB[])).
Using the function sdec the attacker may obtain (SSC_53346,Ns2_53347).
attacker((SSC_53346,Ns2_53347)).

15. By 14, the attacker may know (SSC_53346,Ns2_53347).
Using the function 2-proj-2-tuple the attacker may obtain Ns2_53347.
attacker(Ns2_53347).

16. By 14, the attacker may know (SSC_53346,Ns2_53347).
Using the function 1-proj-2-tuple the attacker may obtain SSC_53346.
attacker(SSC_53346).

17. By 16, the attacker may know SSC_53346.
By 15, the attacker may know Ns2_53347.
Using the function 2-tuple the attacker may obtain (SSC_53346,Ns2_53347).
attacker((SSC_53346,Ns2_53347)).

18. By 17, the attacker may know (SSC_53346,Ns2_53347).
By 12, the attacker may know sign(h((SSC_53346,Ns2_53347)),skB[]).
Using the function 2-tuple the attacker may obtain ((SSC_53346,Ns2_53347),sign(h((SSC_53346,Ns2_53347)),skB[])).
attacker(((SSC_53346,Ns2_53347),sign(h((SSC_53346,Ns2_53347)),skB[]))).

19. The message (A[],B[]) that the attacker may have by 3 may be received at input {6}.
The message ((SSC_53346,Ns2_53347),sign(h((SSC_53346,Ns2_53347)),skB[])) that the attacker may have by 18 may be received at input {14}.
So the message ((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[])) may be sent to the attacker at output {20}.
attacker(((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[]))).

20. By 19, the attacker may know ((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))),sign(h((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
attacker((CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))).

21. By 20, the attacker may know (CSC_53348,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
Using the function 2-proj-3-tuple the attacker may obtain Login(pub(skA[]),pub(skB[])).
attacker(Login(pub(skA[]),pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,B)) at {6} in copy a_53352

out(c, (CreateSessionRequest,sign(h(CreateSessionRequest),skB))) at {13} in copy a_53352

in(c, (A,B)) at {6} in copy a_53350

out(c, (CreateSessionRequest,sign(h(CreateSessionRequest),skA))) at {13} in copy a_53350

in(c, (B,B)) at {25} in copy a_53349

in(c, (B,B)) at {47} in copy a_53351

out(c, Skey(pub(skB),pub(skB))) at {52} in copy a_53351

in(c, (senc(CreateSessionRequest,Skey(pub(skB),pub(skB))),sign(h(CreateSessionRequest),skB))) at {31} in copy a_53349

new SSC_67 creating SSC_53353 at {35} in copy a_53349

new Ns2_68 creating Ns2_53354 at {36} in copy a_53349

out(c, (senc((SSC_53353,Ns2_53354),Skey(pub(skB),pub(skB))),sign(h((SSC_53353,Ns2_53354)),skB))) at {38} in copy a_53349

in(c, ((SSC_53353,Ns2_53354),sign(h((SSC_53353,Ns2_53354)),skB))) at {14} in copy a_53350

new CSC creating CSC_53355 at {17} in copy a_53350

event(beginCli(A,B,(Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))))) at {18} in copy a_53350

out(c, ((CSC_53355,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))),sign(h((CSC_53355,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB)))),skA))) at {20} in copy a_53350

The attacker has the message Login(pub(skA),pub(skB)).
A trace has been found.
RESULT not attacker(Login(pub(skA[]),pub(skB[]))) is false.
