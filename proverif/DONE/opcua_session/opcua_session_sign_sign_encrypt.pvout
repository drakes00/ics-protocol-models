File "opcua_session_sign_sign_encrypt.pv", line 111, character 41 - line 111, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
(
    {5}!
    {6}in(c, (Cli: host,Sess: host));
    {7}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {8}let pkCli: bitstring = pub(skCli) in
    {9}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {10}let pkSess: bitstring = pub(skSess) in
    {11}let K: bitstring = Skey(skCli,skSess) in
    {12}new Nc: bitstring;
    {13}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {14}out(c, (m1,sign(h(m1),skCli)));
    {15}in(c, (m2: bitstring,sigM2: bitstring));
    {16}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {17}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {18}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {19}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {20}out(c, (m3,sign(h(m3),skCli)));
        {21}in(c, (m4: bitstring,sigM4: bitstring));
        {22}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {23}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            0
) | (
    {24}!
    {25}in(c, (Cli_59: host,Sess_60: host));
    {26}let skCli_61: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {27}let pkCli_62: bitstring = pub(skCli_61) in
    {28}let skSess_63: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {29}let pkSess_64: bitstring = pub(skSess_63) in
    {30}let K_65: bitstring = Skey(skCli_61,skSess_63) in
    {31}in(c, (em1: bitstring,sigM1: bitstring));
    {32}new Nc_66: bitstring;
    {33}let m1_67: bitstring = sdec(em1,K_65) in
    {34}if (verify(h(m1_67),sigM1,pkCli_62) <> true) then
        0
    else
        {35}let (=CreateSessionRequest,=pkCli_62,Nc_68: bitstring) = m1_67 in
        {36}new Ns_69: bitstring;
        {37}let m2_70: bitstring = (CreateSessionResponse,pkSess_64,Ns_69) in
        {38}out(c, (senc(m2_70,K_65),sign(h(m2_70),skSess_63)));
        {39}in(c, (em3: bitstring,sigM3: bitstring));
        {40}let m3_71: bitstring = sdec(em3,K_65) in
        {41}if (verify(h(m3_71),sigM3,pkCli_62) <> true) then
            0
        else
            {42}let (=ActivateSessionRequest,=pkCli_62,=Login(skCli_61),=Passwd(skCli_61)) = m3_71 in
            {43}event endSrv(Cli_59,Sess_60,(Login(skCli_61),Passwd(skCli_61)));
            {44}new Ns2_72: bitstring;
            {45}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {46}out(c, (senc(m4_73,K_65),sign(h(m4_73),skSess_63)))
) | (
    {47}!
    {48}in(c, (X: host,Y: host));
    {49}let skX: bitstring = (if (X = A) then skA else (if (X = B) then skB else sk(X))) in
    {50}let skY: bitstring = (if (Y = A) then skA else (if (Y = B) then skB else sk(Y))) in
    {51}if ((X,Y) = (A,B)) then
        0
    else
        {52}if ((X,Y) = (B,A)) then
            0
        else
            {53}out(c, Skey(skX,skY))
)

-- Query event(endSrv(X_74,Y_75,N)) ==> event(beginCli(X_74,Y_75,N))
Completing...
200 rules inserted. The rule base contains 133 rules. 71 rules in the queue.
400 rules inserted. The rule base contains 183 rules. 69 rules in the queue.
600 rules inserted. The rule base contains 272 rules. 76 rules in the queue.
800 rules inserted. The rule base contains 260 rules. 30 rules in the queue.
1000 rules inserted. The rule base contains 304 rules. 100 rules in the queue.
1200 rules inserted. The rule base contains 372 rules. 32 rules in the queue.
1400 rules inserted. The rule base contains 388 rules. 4 rules in the queue.
Starting query event(endSrv(X_74,Y_75,N)) ==> event(beginCli(X_74,Y_75,N))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
Abbreviations:
Nc_14601 = Nc[Sess = Sess_14556,Cli = B[],!1 = @sid_14557]
Ns_14602 = Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])),Sess_60 = B[],Cli_59 = B[],!1 = @sid_14570]
Nc_14603 = Nc[Sess = B[],Cli = A[],!1 = @sid_14495]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker initially knows B[].
attacker(B[]).

4. By 1, the attacker may know A[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

5. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_14603),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_14603),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[]))).

6. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_14603),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])).

7. The message (A[],A[]) that the attacker may have by 2 may be received at input {48}.
So the message Skey(skA[],skA[]) may be sent to the attacker at output {53}.
attacker(Skey(skA[],skA[])).

8. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_14603),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_14603).
attacker((CreateSessionRequest,pub(skA[]),Nc_14603)).

9. By 8, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_14603).
Using the function 3-proj-3-tuple the attacker may obtain Nc_14603.
attacker(Nc_14603).

10. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

11. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

12. By 11, the attacker may know CreateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 9, the attacker may know Nc_14603.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_14603).
attacker((CreateSessionRequest,pub(skA[]),Nc_14603)).

13. By 12, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_14603).
By 7, the attacker may know Skey(skA[],skA[]).
Using the function senc the attacker may obtain senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[])).
attacker(senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[]))).

14. By 13, the attacker may know senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[])).
By 6, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[]).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[])),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])).
attacker((senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[])),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[]))).

15. By 3, the attacker may know B[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

16. The attacker has some term Sess_14556.
attacker(Sess_14556).

17. By 3, the attacker may know B[].
By 16, the attacker may know Sess_14556.
Using the function 2-tuple the attacker may obtain (B[],Sess_14556).
attacker((B[],Sess_14556)).

18. The message (B[],Sess_14556) that the attacker may have by 17 may be received at input {6}.
We have Sess_14556 <> B[] & Sess_14556 <> A[].
So the message ((CreateSessionRequest,pub(skB[]),Nc_14601),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skB[]),Nc_14601),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[]))).

19. By 18, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_14601),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[]).
attacker(sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])).

20. The message (B[],B[]) that the attacker may have by 15 may be received at input {48}.
So the message Skey(skB[],skB[]) may be sent to the attacker at output {53}.
attacker(Skey(skB[],skB[])).

21. By 18, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_14601),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_14601).
attacker((CreateSessionRequest,pub(skB[]),Nc_14601)).

22. By 21, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_14601).
Using the function 3-proj-3-tuple the attacker may obtain Nc_14601.
attacker(Nc_14601).

23. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

24. By 11, the attacker may know CreateSessionRequest.
By 23, the attacker may know pub(skB[]).
By 22, the attacker may know Nc_14601.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_14601).
attacker((CreateSessionRequest,pub(skB[]),Nc_14601)).

25. By 24, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_14601).
By 20, the attacker may know Skey(skB[],skB[]).
Using the function senc the attacker may obtain senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])).
attacker(senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[]))).

26. By 25, the attacker may know senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])).
By 19, the attacker may know sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[]).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])).
attacker((senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[]))).

27. The message (B[],B[]) that the attacker may have by 15 may be received at input {25}.
The message (senc((CreateSessionRequest,pub(skB[]),Nc_14601),Skey(skB[],skB[])),sign(h((CreateSessionRequest,pub(skB[]),Nc_14601)),skB[])) that the attacker may have by 26 may be received at input {31}.
So the message (senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])) may be sent to the attacker at output {38}.
attacker((senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[]))).

28. By 27, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])).

29. By 27, the attacker may know (senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])).
attacker(senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[]))).

30. By 29, the attacker may know senc((CreateSessionResponse,pub(skB[]),Ns_14602),Skey(skB[],skB[])).
By 20, the attacker may know Skey(skB[],skB[]).
Using the function sdec the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_14602).
attacker((CreateSessionResponse,pub(skB[]),Ns_14602)).

31. By 30, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_14602).
Using the function 3-proj-3-tuple the attacker may obtain Ns_14602.
attacker(Ns_14602).

32. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

33. By 32, the attacker may know CreateSessionResponse.
By 23, the attacker may know pub(skB[]).
By 31, the attacker may know Ns_14602.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_14602).
attacker((CreateSessionResponse,pub(skB[]),Ns_14602)).

34. By 33, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_14602).
By 28, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_14602),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_14602),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[]))).

35. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
The message ((CreateSessionResponse,pub(skB[]),Ns_14602),sign(h((CreateSessionResponse,pub(skB[]),Ns_14602)),skB[])) that the attacker may have by 34 may be received at input {15}.
The event beginCli(A[],B[],(Login(skA[]),Passwd(skA[]))) may be executed at {18}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

36. By 35, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
attacker(sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).

37. By 35, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

38. By 37, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).

39. By 37, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).

40. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

41. By 40, the attacker may know ActivateSessionRequest.
By 10, the attacker may know pub(skA[]).
By 39, the attacker may know Login(skA[]).
By 38, the attacker may know Passwd(skA[]).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

42. By 41, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
By 7, the attacker may know Skey(skA[],skA[]).
Using the function senc the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[]))).

43. By 42, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
By 36, the attacker may know sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
Using the function 2-tuple the attacker may obtain (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

44. The message (A[],A[]) that the attacker may have by 2 may be received at input {25}.
The message (senc((CreateSessionRequest,pub(skA[]),Nc_14603),Skey(skA[],skA[])),sign(h((CreateSessionRequest,pub(skA[]),Nc_14603)),skA[])) that the attacker may have by 14 may be received at input {31}.
The message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) that the attacker may have by 43 may be received at input {39}.
So event endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))) may be executed at {43}.
end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,a)) at {6} in copy a_14604

new Nc creating Nc_14611 at {12} in copy a_14604

out(c, ((CreateSessionRequest,pub(skB),Nc_14611),sign(h((CreateSessionRequest,pub(skB),Nc_14611)),skB))) at {14} in copy a_14604

in(c, (A,B)) at {6} in copy a_14607

new Nc creating Nc_14961 at {12} in copy a_14607

out(c, ((CreateSessionRequest,pub(skA),Nc_14961),sign(h((CreateSessionRequest,pub(skA),Nc_14961)),skA))) at {14} in copy a_14607

in(c, (A,B)) at {6} in copy a_14608

new Nc creating Nc_14613 at {12} in copy a_14608

out(c, ((CreateSessionRequest,pub(skA),Nc_14613),sign(h((CreateSessionRequest,pub(skA),Nc_14613)),skA))) at {14} in copy a_14608

in(c, (B,B)) at {25} in copy a_14605

in(c, (A,A)) at {25} in copy a_14610

in(c, (B,B)) at {48} in copy a_14606

out(c, Skey(skB,skB)) at {53} in copy a_14606

in(c, (senc((CreateSessionRequest,pub(skB),Nc_14611),Skey(skB,skB)),sign(h((CreateSessionRequest,pub(skB),Nc_14611)),skB))) at {31} in copy a_14605

new Nc_66 creating Nc_15299 at {32} in copy a_14605

new Ns_69 creating Ns_14612 at {36} in copy a_14605

out(c, (senc((CreateSessionResponse,pub(skB),Ns_14612),Skey(skB,skB)),sign(h((CreateSessionResponse,pub(skB),Ns_14612)),skB))) at {38} in copy a_14605

in(c, ((CreateSessionResponse,pub(skB),Ns_14612),sign(h((CreateSessionResponse,pub(skB),Ns_14612)),skB))) at {15} in copy a_14607

event(beginCli(A,B,(Login(skA),Passwd(skA)))) at {18} in copy a_14607

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_14607

in(c, (A,A)) at {48} in copy a_14609

out(c, Skey(skA,skA)) at {53} in copy a_14609

in(c, (senc((CreateSessionRequest,pub(skA),Nc_14613),Skey(skA,skA)),sign(h((CreateSessionRequest,pub(skA),Nc_14613)),skA))) at {31} in copy a_14610

new Nc_66 creating Nc_15388 at {32} in copy a_14610

new Ns_69 creating Ns_15408 at {36} in copy a_14610

out(c, (senc((CreateSessionResponse,pub(skA),Ns_15408),Skey(skA,skA)),sign(h((CreateSessionResponse,pub(skA),Ns_15408)),skA))) at {38} in copy a_14610

in(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),Skey(skA,skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {39} in copy a_14610

event(endSrv(A,A,(Login(skA),Passwd(skA)))) at {43} in copy a_14610

The event endSrv(A,A,(Login(skA),Passwd(skA))) is executed.
A trace has been found.
RESULT event(endSrv(X_74,Y_75,N)) ==> event(beginCli(X_74,Y_75,N)) is false.
-- Query not attacker(Skey(skB[],skA[]))
Completing...
200 rules inserted. The rule base contains 124 rules. 62 rules in the queue.
400 rules inserted. The rule base contains 124 rules. 60 rules in the queue.
600 rules inserted. The rule base contains 174 rules. 34 rules in the queue.
Starting query not attacker(Skey(skB[],skA[]))
RESULT not attacker(Skey(skB[],skA[])) is true.
-- Query not attacker(Skey(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 124 rules. 62 rules in the queue.
400 rules inserted. The rule base contains 124 rules. 60 rules in the queue.
600 rules inserted. The rule base contains 174 rules. 34 rules in the queue.
Starting query not attacker(Skey(skA[],skB[]))
RESULT not attacker(Skey(skA[],skB[])) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 124 rules. 62 rules in the queue.
400 rules inserted. The rule base contains 124 rules. 60 rules in the queue.
600 rules inserted. The rule base contains 174 rules. 34 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker has some term Sess_39183.
attacker(Sess_39183).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_39183.
Using the function 2-tuple the attacker may obtain (A[],Sess_39183).
attacker((A[],Sess_39183)).

4. By 1, the attacker may know Sess_39183.
Using the function sk the attacker may obtain sk(Sess_39183).
attacker(sk(Sess_39183)).

5. The attacker has some term Ns_39184.
attacker(Ns_39184).

6. By 4, the attacker may know sk(Sess_39183).
Using the function pub the attacker may obtain pub(sk(Sess_39183)).
attacker(pub(sk(Sess_39183))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_39183)).
By 5, the attacker may know Ns_39184.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184).
attacker((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)).
attacker(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)).
By 4, the attacker may know sk(Sess_39183).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184),sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183))).
attacker(((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184),sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183)))).

12. The message (A[],Sess_39183) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184),sign(h((CreateSessionResponse,pub(sk(Sess_39183)),Ns_39184)),sk(Sess_39183))) that the attacker may have by 11 may be received at input {15}.
We have Sess_39183 <> B[] & Sess_39183 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_39192)) at {6} in copy a_39194

new Nc creating Nc_39377 at {12} in copy a_39194

out(c, ((CreateSessionRequest,pub(skA),Nc_39377),sign(h((CreateSessionRequest,pub(skA),Nc_39377)),skA))) at {14} in copy a_39194

in(c, ((CreateSessionResponse,pub(sk(a_39192)),a_39193),sign(h((CreateSessionResponse,pub(sk(a_39192)),a_39193)),sk(a_39192)))) at {15} in copy a_39194

event(beginCli(A,a_39192,(Login(skA),Passwd(skA)))) at {18} in copy a_39194

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_39194

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 124 rules. 62 rules in the queue.
400 rules inserted. The rule base contains 124 rules. 60 rules in the queue.
600 rules inserted. The rule base contains 174 rules. 34 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker has some term Sess_47334.
attacker(Sess_47334).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_47334.
Using the function 2-tuple the attacker may obtain (A[],Sess_47334).
attacker((A[],Sess_47334)).

4. By 1, the attacker may know Sess_47334.
Using the function sk the attacker may obtain sk(Sess_47334).
attacker(sk(Sess_47334)).

5. The attacker has some term Ns_47335.
attacker(Ns_47335).

6. By 4, the attacker may know sk(Sess_47334).
Using the function pub the attacker may obtain pub(sk(Sess_47334)).
attacker(pub(sk(Sess_47334))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_47334)).
By 5, the attacker may know Ns_47335.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335).
attacker((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)).
attacker(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)).
By 4, the attacker may know sk(Sess_47334).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335),sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334))).
attacker(((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335),sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334)))).

12. The message (A[],Sess_47334) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335),sign(h((CreateSessionResponse,pub(sk(Sess_47334)),Ns_47335)),sk(Sess_47334))) that the attacker may have by 11 may be received at input {15}.
We have Sess_47334 <> B[] & Sess_47334 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_47343)) at {6} in copy a_47345

new Nc creating Nc_47528 at {12} in copy a_47345

out(c, ((CreateSessionRequest,pub(skA),Nc_47528),sign(h((CreateSessionRequest,pub(skA),Nc_47528)),skA))) at {14} in copy a_47345

in(c, ((CreateSessionResponse,pub(sk(a_47343)),a_47344),sign(h((CreateSessionResponse,pub(sk(a_47343)),a_47344)),sk(a_47343)))) at {15} in copy a_47345

event(beginCli(A,a_47343,(Login(skA),Passwd(skA)))) at {18} in copy a_47345

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_47345

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
