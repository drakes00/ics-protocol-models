Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}new skI: bitstring;
{6}let pkI: bitstring = pub(skI) in
{7}out(c, (pkI,skI));
{8}out(c, Skey(pkI,pkA));
{9}out(c, Skey(pkI,pkB));
{10}out(c, Skey(pkA,pkI));
{11}out(c, Skey(pkB,pkI));
(
    {12}!
    {13}in(c, (Cli: host,Sess: host));
    {14}let v_80: bool = (Cli = A) in
    (
        {15}if v_80 then
        (
            {16}let skCli: bitstring = skA in
            {17}let pkCli: bitstring = pub(skCli) in
            {18}let v_81: bool = (Sess = A) in
            (
                {19}if v_81 then
                (
                    {20}let skSess: bitstring = skA in
                    {21}let pkSess: bitstring = pub(skSess) in
                    {22}let K: bitstring = Skey(pkCli,pkSess) in
                    {23}let m1: bitstring = CreateSessionRequest in
                    {24}out(c, (senc(m1,K),sign(h(m1),skCli)));
                    {25}in(c, (em2: bitstring,sigM2: bitstring));
                    {26}let m2: bitstring = sdec(em2,K) in
                    {27}if (verify(h(m2),sigM2,pkSess) <> true) then
                        0
                    else
                        {28}let (SSC: bitstring,Ns2: bitstring) = m2 in
                        {29}new CSC: bitstring;
                        {30}event beginCli(Cli,Sess,(Login(pkCli,pkSess),Passwd(pkCli,pkSess)));
                        {31}let m3: bitstring = (CSC,Login(pkCli,pkSess),Passwd(pkCli,pkSess)) in
                        {32}out(c, (senc(m3,K),sign(h(m3),skCli)));
                        {33}in(c, (em4: bitstring,sigM4: bitstring));
                        {34}let m4: bitstring = sdec(em4,K) in
                        {35}if (verify(h(m4),sigM4,pkSess) <> true) then
                            0
                        else
                            {36}if (m4 <> ActivateSessionResponse) then
                            0
                )
                else
                    {37}let v_82: bool = (Sess = B) in
                    (
                        {38}if v_82 then
                        (
                            {39}let skSess_83: bitstring = skB in
                            {40}let pkSess_84: bitstring = pub(skSess_83) in
                            {41}let K_85: bitstring = Skey(pkCli,pkSess_84) in
                            {42}let m1_86: bitstring = CreateSessionRequest in
                            {43}out(c, (senc(m1_86,K_85),sign(h(m1_86),skCli)));
                            {44}in(c, (em2_87: bitstring,sigM2_88: bitstring));
                            {45}let m2_89: bitstring = sdec(em2_87,K_85) in
                            {46}if (verify(h(m2_89),sigM2_88,pkSess_84) <> true) then
                                0
                            else
                                {47}let (SSC_90: bitstring,Ns2_91: bitstring) = m2_89 in
                                {48}new CSC_92: bitstring;
                                {49}event beginCli(Cli,Sess,(Login(pkCli,pkSess_84),Passwd(pkCli,pkSess_84)));
                                {50}let m3_93: bitstring = (CSC_92,Login(pkCli,pkSess_84),Passwd(pkCli,pkSess_84)) in
                                {51}out(c, (senc(m3_93,K_85),sign(h(m3_93),skCli)));
                                {52}in(c, (em4_94: bitstring,sigM4_95: bitstring));
                                {53}let m4_96: bitstring = sdec(em4_94,K_85) in
                                {54}if (verify(h(m4_96),sigM4_95,pkSess_84) <> true) then
                                    0
                                else
                                    {55}if (m4_96 <> ActivateSessionResponse) then
                                    0
                        )
                        else
                            {56}let skSess_97: bitstring = skI in
                            {57}let pkSess_98: bitstring = pub(skSess_97) in
                            {58}let K_99: bitstring = Skey(pkCli,pkSess_98) in
                            {59}let m1_100: bitstring = CreateSessionRequest in
                            {60}out(c, (senc(m1_100,K_99),sign(h(m1_100),skCli)));
                            {61}in(c, (em2_101: bitstring,sigM2_102: bitstring));
                            {62}let m2_103: bitstring = sdec(em2_101,K_99) in
                            {63}if (verify(h(m2_103),sigM2_102,pkSess_98) <> true) then
                                0
                            else
                                {64}let (SSC_104: bitstring,Ns2_105: bitstring) = m2_103 in
                                {65}new CSC_106: bitstring;
                                {66}event beginCli(Cli,Sess,(Login(pkCli,pkSess_98),Passwd(pkCli,pkSess_98)));
                                {67}let m3_107: bitstring = (CSC_106,Login(pkCli,pkSess_98),Passwd(pkCli,pkSess_98)) in
                                {68}out(c, (senc(m3_107,K_99),sign(h(m3_107),skCli)));
                                {69}in(c, (em4_108: bitstring,sigM4_109: bitstring));
                                {70}let m4_110: bitstring = sdec(em4_108,K_99) in
                                {71}if (verify(h(m4_110),sigM4_109,pkSess_98) <> true) then
                                    0
                                else
                                    {72}if (m4_110 <> ActivateSessionResponse) then
                                    0
                    )
                    else
                        {73}let skSess_111: bitstring = fail-any in
                        {74}let pkSess_112: bitstring = pub(skSess_111) in
                        {75}let K_113: bitstring = Skey(pkCli,pkSess_112) in
                        {76}let m1_114: bitstring = CreateSessionRequest in
                        {77}out(c, (senc(m1_114,K_113),sign(h(m1_114),skCli)));
                        {78}in(c, (em2_115: bitstring,sigM2_116: bitstring));
                        {79}let m2_117: bitstring = sdec(em2_115,K_113) in
                        {80}if (verify(h(m2_117),sigM2_116,pkSess_112) <> true) then
                            0
                        else
                            {81}let (SSC_118: bitstring,Ns2_119: bitstring) = m2_117 in
                            {82}new CSC_120: bitstring;
                            {83}event beginCli(Cli,Sess,(Login(pkCli,pkSess_112),Passwd(pkCli,pkSess_112)));
                            {84}let m3_121: bitstring = (CSC_120,Login(pkCli,pkSess_112),Passwd(pkCli,pkSess_112)) in
                            {85}out(c, (senc(m3_121,K_113),sign(h(m3_121),skCli)));
                            {86}in(c, (em4_122: bitstring,sigM4_123: bitstring));
                            {87}let m4_124: bitstring = sdec(em4_122,K_113) in
                            {88}if (verify(h(m4_124),sigM4_123,pkSess_112) <> true) then
                                0
                            else
                                {89}if (m4_124 <> ActivateSessionResponse) then
                                0
            )
            else
                {90}let skSess_125: bitstring = fail-any in
                {91}let pkSess_126: bitstring = pub(skSess_125) in
                {92}let K_127: bitstring = Skey(pkCli,pkSess_126) in
                {93}let m1_128: bitstring = CreateSessionRequest in
                {94}out(c, (senc(m1_128,K_127),sign(h(m1_128),skCli)));
                {95}in(c, (em2_129: bitstring,sigM2_130: bitstring));
                {96}let m2_131: bitstring = sdec(em2_129,K_127) in
                {97}if (verify(h(m2_131),sigM2_130,pkSess_126) <> true) then
                    0
                else
                    {98}let (SSC_132: bitstring,Ns2_133: bitstring) = m2_131 in
                    {99}new CSC_134: bitstring;
                    {100}event beginCli(Cli,Sess,(Login(pkCli,pkSess_126),Passwd(pkCli,pkSess_126)));
                    {101}let m3_135: bitstring = (CSC_134,Login(pkCli,pkSess_126),Passwd(pkCli,pkSess_126)) in
                    {102}out(c, (senc(m3_135,K_127),sign(h(m3_135),skCli)));
                    {103}in(c, (em4_136: bitstring,sigM4_137: bitstring));
                    {104}let m4_138: bitstring = sdec(em4_136,K_127) in
                    {105}if (verify(h(m4_138),sigM4_137,pkSess_126) <> true) then
                        0
                    else
                        {106}if (m4_138 <> ActivateSessionResponse) then
                        0
        )
        else
            {107}let v_139: bool = (Cli = B) in
            (
                {108}if v_139 then
                (
                    {109}let skCli_140: bitstring = skB in
                    {110}let pkCli_141: bitstring = pub(skCli_140) in
                    {111}let v_142: bool = (Sess = A) in
                    (
                        {112}if v_142 then
                        (
                            {113}let skSess_143: bitstring = skA in
                            {114}let pkSess_144: bitstring = pub(skSess_143) in
                            {115}let K_145: bitstring = Skey(pkCli_141,pkSess_144) in
                            {116}let m1_146: bitstring = CreateSessionRequest in
                            {117}out(c, (senc(m1_146,K_145),sign(h(m1_146),skCli_140)));
                            {118}in(c, (em2_147: bitstring,sigM2_148: bitstring));
                            {119}let m2_149: bitstring = sdec(em2_147,K_145) in
                            {120}if (verify(h(m2_149),sigM2_148,pkSess_144) <> true) then
                                0
                            else
                                {121}let (SSC_150: bitstring,Ns2_151: bitstring) = m2_149 in
                                {122}new CSC_152: bitstring;
                                {123}event beginCli(Cli,Sess,(Login(pkCli_141,pkSess_144),Passwd(pkCli_141,pkSess_144)));
                                {124}let m3_153: bitstring = (CSC_152,Login(pkCli_141,pkSess_144),Passwd(pkCli_141,pkSess_144)) in
                                {125}out(c, (senc(m3_153,K_145),sign(h(m3_153),skCli_140)));
                                {126}in(c, (em4_154: bitstring,sigM4_155: bitstring));
                                {127}let m4_156: bitstring = sdec(em4_154,K_145) in
                                {128}if (verify(h(m4_156),sigM4_155,pkSess_144) <> true) then
                                    0
                                else
                                    {129}if (m4_156 <> ActivateSessionResponse) then
                                    0
                        )
                        else
                            {130}let v_157: bool = (Sess = B) in
                            (
                                {131}if v_157 then
                                (
                                    {132}let skSess_158: bitstring = skB in
                                    {133}let pkSess_159: bitstring = pub(skSess_158) in
                                    {134}let K_160: bitstring = Skey(pkCli_141,pkSess_159) in
                                    {135}let m1_161: bitstring = CreateSessionRequest in
                                    {136}out(c, (senc(m1_161,K_160),sign(h(m1_161),skCli_140)));
                                    {137}in(c, (em2_162: bitstring,sigM2_163: bitstring));
                                    {138}let m2_164: bitstring = sdec(em2_162,K_160) in
                                    {139}if (verify(h(m2_164),sigM2_163,pkSess_159) <> true) then
                                        0
                                    else
                                        {140}let (SSC_165: bitstring,Ns2_166: bitstring) = m2_164 in
                                        {141}new CSC_167: bitstring;
                                        {142}event beginCli(Cli,Sess,(Login(pkCli_141,pkSess_159),Passwd(pkCli_141,pkSess_159)));
                                        {143}let m3_168: bitstring = (CSC_167,Login(pkCli_141,pkSess_159),Passwd(pkCli_141,pkSess_159)) in
                                        {144}out(c, (senc(m3_168,K_160),sign(h(m3_168),skCli_140)));
                                        {145}in(c, (em4_169: bitstring,sigM4_170: bitstring));
                                        {146}let m4_171: bitstring = sdec(em4_169,K_160) in
                                        {147}if (verify(h(m4_171),sigM4_170,pkSess_159) <> true) then
                                            0
                                        else
                                            {148}if (m4_171 <> ActivateSessionResponse) then
                                            0
                                )
                                else
                                    {149}let skSess_172: bitstring = skI in
                                    {150}let pkSess_173: bitstring = pub(skSess_172) in
                                    {151}let K_174: bitstring = Skey(pkCli_141,pkSess_173) in
                                    {152}let m1_175: bitstring = CreateSessionRequest in
                                    {153}out(c, (senc(m1_175,K_174),sign(h(m1_175),skCli_140)));
                                    {154}in(c, (em2_176: bitstring,sigM2_177: bitstring));
                                    {155}let m2_178: bitstring = sdec(em2_176,K_174) in
                                    {156}if (verify(h(m2_178),sigM2_177,pkSess_173) <> true) then
                                        0
                                    else
                                        {157}let (SSC_179: bitstring,Ns2_180: bitstring) = m2_178 in
                                        {158}new CSC_181: bitstring;
                                        {159}event beginCli(Cli,Sess,(Login(pkCli_141,pkSess_173),Passwd(pkCli_141,pkSess_173)));
                                        {160}let m3_182: bitstring = (CSC_181,Login(pkCli_141,pkSess_173),Passwd(pkCli_141,pkSess_173)) in
                                        {161}out(c, (senc(m3_182,K_174),sign(h(m3_182),skCli_140)));
                                        {162}in(c, (em4_183: bitstring,sigM4_184: bitstring));
                                        {163}let m4_185: bitstring = sdec(em4_183,K_174) in
                                        {164}if (verify(h(m4_185),sigM4_184,pkSess_173) <> true) then
                                            0
                                        else
                                            {165}if (m4_185 <> ActivateSessionResponse) then
                                            0
                            )
                            else
                                {166}let skSess_186: bitstring = fail-any in
                                {167}let pkSess_187: bitstring = pub(skSess_186) in
                                {168}let K_188: bitstring = Skey(pkCli_141,pkSess_187) in
                                {169}let m1_189: bitstring = CreateSessionRequest in
                                {170}out(c, (senc(m1_189,K_188),sign(h(m1_189),skCli_140)));
                                {171}in(c, (em2_190: bitstring,sigM2_191: bitstring));
                                {172}let m2_192: bitstring = sdec(em2_190,K_188) in
                                {173}if (verify(h(m2_192),sigM2_191,pkSess_187) <> true) then
                                    0
                                else
                                    {174}let (SSC_193: bitstring,Ns2_194: bitstring) = m2_192 in
                                    {175}new CSC_195: bitstring;
                                    {176}event beginCli(Cli,Sess,(Login(pkCli_141,pkSess_187),Passwd(pkCli_141,pkSess_187)));
                                    {177}let m3_196: bitstring = (CSC_195,Login(pkCli_141,pkSess_187),Passwd(pkCli_141,pkSess_187)) in
                                    {178}out(c, (senc(m3_196,K_188),sign(h(m3_196),skCli_140)));
                                    {179}in(c, (em4_197: bitstring,sigM4_198: bitstring));
                                    {180}let m4_199: bitstring = sdec(em4_197,K_188) in
                                    {181}if (verify(h(m4_199),sigM4_198,pkSess_187) <> true) then
                                        0
                                    else
                                        {182}if (m4_199 <> ActivateSessionResponse) then
                                        0
                    )
                    else
                        {183}let skSess_200: bitstring = fail-any in
                        {184}let pkSess_201: bitstring = pub(skSess_200) in
                        {185}let K_202: bitstring = Skey(pkCli_141,pkSess_201) in
                        {186}let m1_203: bitstring = CreateSessionRequest in
                        {187}out(c, (senc(m1_203,K_202),sign(h(m1_203),skCli_140)));
                        {188}in(c, (em2_204: bitstring,sigM2_205: bitstring));
                        {189}let m2_206: bitstring = sdec(em2_204,K_202) in
                        {190}if (verify(h(m2_206),sigM2_205,pkSess_201) <> true) then
                            0
                        else
                            {191}let (SSC_207: bitstring,Ns2_208: bitstring) = m2_206 in
                            {192}new CSC_209: bitstring;
                            {193}event beginCli(Cli,Sess,(Login(pkCli_141,pkSess_201),Passwd(pkCli_141,pkSess_201)));
                            {194}let m3_210: bitstring = (CSC_209,Login(pkCli_141,pkSess_201),Passwd(pkCli_141,pkSess_201)) in
                            {195}out(c, (senc(m3_210,K_202),sign(h(m3_210),skCli_140)));
                            {196}in(c, (em4_211: bitstring,sigM4_212: bitstring));
                            {197}let m4_213: bitstring = sdec(em4_211,K_202) in
                            {198}if (verify(h(m4_213),sigM4_212,pkSess_201) <> true) then
                                0
                            else
                                {199}if (m4_213 <> ActivateSessionResponse) then
                                0
                )
                else
                    {200}let skCli_214: bitstring = skI in
                    {201}let pkCli_215: bitstring = pub(skCli_214) in
                    {202}let v_216: bool = (Sess = A) in
                    (
                        {203}if v_216 then
                        (
                            {204}let skSess_217: bitstring = skA in
                            {205}let pkSess_218: bitstring = pub(skSess_217) in
                            {206}let K_219: bitstring = Skey(pkCli_215,pkSess_218) in
                            {207}let m1_220: bitstring = CreateSessionRequest in
                            {208}out(c, (senc(m1_220,K_219),sign(h(m1_220),skCli_214)));
                            {209}in(c, (em2_221: bitstring,sigM2_222: bitstring));
                            {210}let m2_223: bitstring = sdec(em2_221,K_219) in
                            {211}if (verify(h(m2_223),sigM2_222,pkSess_218) <> true) then
                                0
                            else
                                {212}let (SSC_224: bitstring,Ns2_225: bitstring) = m2_223 in
                                {213}new CSC_226: bitstring;
                                {214}event beginCli(Cli,Sess,(Login(pkCli_215,pkSess_218),Passwd(pkCli_215,pkSess_218)));
                                {215}let m3_227: bitstring = (CSC_226,Login(pkCli_215,pkSess_218),Passwd(pkCli_215,pkSess_218)) in
                                {216}out(c, (senc(m3_227,K_219),sign(h(m3_227),skCli_214)));
                                {217}in(c, (em4_228: bitstring,sigM4_229: bitstring));
                                {218}let m4_230: bitstring = sdec(em4_228,K_219) in
                                {219}if (verify(h(m4_230),sigM4_229,pkSess_218) <> true) then
                                    0
                                else
                                    {220}if (m4_230 <> ActivateSessionResponse) then
                                    0
                        )
                        else
                            {221}let v_231: bool = (Sess = B) in
                            (
                                {222}if v_231 then
                                (
                                    {223}let skSess_232: bitstring = skB in
                                    {224}let pkSess_233: bitstring = pub(skSess_232) in
                                    {225}let K_234: bitstring = Skey(pkCli_215,pkSess_233) in
                                    {226}let m1_235: bitstring = CreateSessionRequest in
                                    {227}out(c, (senc(m1_235,K_234),sign(h(m1_235),skCli_214)));
                                    {228}in(c, (em2_236: bitstring,sigM2_237: bitstring));
                                    {229}let m2_238: bitstring = sdec(em2_236,K_234) in
                                    {230}if (verify(h(m2_238),sigM2_237,pkSess_233) <> true) then
                                        0
                                    else
                                        {231}let (SSC_239: bitstring,Ns2_240: bitstring) = m2_238 in
                                        {232}new CSC_241: bitstring;
                                        {233}event beginCli(Cli,Sess,(Login(pkCli_215,pkSess_233),Passwd(pkCli_215,pkSess_233)));
                                        {234}let m3_242: bitstring = (CSC_241,Login(pkCli_215,pkSess_233),Passwd(pkCli_215,pkSess_233)) in
                                        {235}out(c, (senc(m3_242,K_234),sign(h(m3_242),skCli_214)));
                                        {236}in(c, (em4_243: bitstring,sigM4_244: bitstring));
                                        {237}let m4_245: bitstring = sdec(em4_243,K_234) in
                                        {238}if (verify(h(m4_245),sigM4_244,pkSess_233) <> true) then
                                            0
                                        else
                                            {239}if (m4_245 <> ActivateSessionResponse) then
                                            0
                                )
                                else
                                    {240}let skSess_246: bitstring = skI in
                                    {241}let pkSess_247: bitstring = pub(skSess_246) in
                                    {242}let K_248: bitstring = Skey(pkCli_215,pkSess_247) in
                                    {243}let m1_249: bitstring = CreateSessionRequest in
                                    {244}out(c, (senc(m1_249,K_248),sign(h(m1_249),skCli_214)));
                                    {245}in(c, (em2_250: bitstring,sigM2_251: bitstring));
                                    {246}let m2_252: bitstring = sdec(em2_250,K_248) in
                                    {247}if (verify(h(m2_252),sigM2_251,pkSess_247) <> true) then
                                        0
                                    else
                                        {248}let (SSC_253: bitstring,Ns2_254: bitstring) = m2_252 in
                                        {249}new CSC_255: bitstring;
                                        {250}event beginCli(Cli,Sess,(Login(pkCli_215,pkSess_247),Passwd(pkCli_215,pkSess_247)));
                                        {251}let m3_256: bitstring = (CSC_255,Login(pkCli_215,pkSess_247),Passwd(pkCli_215,pkSess_247)) in
                                        {252}out(c, (senc(m3_256,K_248),sign(h(m3_256),skCli_214)));
                                        {253}in(c, (em4_257: bitstring,sigM4_258: bitstring));
                                        {254}let m4_259: bitstring = sdec(em4_257,K_248) in
                                        {255}if (verify(h(m4_259),sigM4_258,pkSess_247) <> true) then
                                            0
                                        else
                                            {256}if (m4_259 <> ActivateSessionResponse) then
                                            0
                            )
                            else
                                {257}let skSess_260: bitstring = fail-any in
                                {258}let pkSess_261: bitstring = pub(skSess_260) in
                                {259}let K_262: bitstring = Skey(pkCli_215,pkSess_261) in
                                {260}let m1_263: bitstring = CreateSessionRequest in
                                {261}out(c, (senc(m1_263,K_262),sign(h(m1_263),skCli_214)));
                                {262}in(c, (em2_264: bitstring,sigM2_265: bitstring));
                                {263}let m2_266: bitstring = sdec(em2_264,K_262) in
                                {264}if (verify(h(m2_266),sigM2_265,pkSess_261) <> true) then
                                    0
                                else
                                    {265}let (SSC_267: bitstring,Ns2_268: bitstring) = m2_266 in
                                    {266}new CSC_269: bitstring;
                                    {267}event beginCli(Cli,Sess,(Login(pkCli_215,pkSess_261),Passwd(pkCli_215,pkSess_261)));
                                    {268}let m3_270: bitstring = (CSC_269,Login(pkCli_215,pkSess_261),Passwd(pkCli_215,pkSess_261)) in
                                    {269}out(c, (senc(m3_270,K_262),sign(h(m3_270),skCli_214)));
                                    {270}in(c, (em4_271: bitstring,sigM4_272: bitstring));
                                    {271}let m4_273: bitstring = sdec(em4_271,K_262) in
                                    {272}if (verify(h(m4_273),sigM4_272,pkSess_261) <> true) then
                                        0
                                    else
                                        {273}if (m4_273 <> ActivateSessionResponse) then
                                        0
                    )
                    else
                        {274}let skSess_274: bitstring = fail-any in
                        {275}let pkSess_275: bitstring = pub(skSess_274) in
                        {276}let K_276: bitstring = Skey(pkCli_215,pkSess_275) in
                        {277}let m1_277: bitstring = CreateSessionRequest in
                        {278}out(c, (senc(m1_277,K_276),sign(h(m1_277),skCli_214)));
                        {279}in(c, (em2_278: bitstring,sigM2_279: bitstring));
                        {280}let m2_280: bitstring = sdec(em2_278,K_276) in
                        {281}if (verify(h(m2_280),sigM2_279,pkSess_275) <> true) then
                            0
                        else
                            {282}let (SSC_281: bitstring,Ns2_282: bitstring) = m2_280 in
                            {283}new CSC_283: bitstring;
                            {284}event beginCli(Cli,Sess,(Login(pkCli_215,pkSess_275),Passwd(pkCli_215,pkSess_275)));
                            {285}let m3_284: bitstring = (CSC_283,Login(pkCli_215,pkSess_275),Passwd(pkCli_215,pkSess_275)) in
                            {286}out(c, (senc(m3_284,K_276),sign(h(m3_284),skCli_214)));
                            {287}in(c, (em4_285: bitstring,sigM4_286: bitstring));
                            {288}let m4_287: bitstring = sdec(em4_285,K_276) in
                            {289}if (verify(h(m4_287),sigM4_286,pkSess_275) <> true) then
                                0
                            else
                                {290}if (m4_287 <> ActivateSessionResponse) then
                                0
            )
            else
                {291}let skCli_288: bitstring = fail-any in
                {292}let pkCli_289: bitstring = pub(skCli_288) in
                {293}let v_290: bool = (Sess = A) in
                (
                    {294}if v_290 then
                    (
                        {295}let skSess_291: bitstring = skA in
                        {296}let pkSess_292: bitstring = pub(skSess_291) in
                        {297}let K_293: bitstring = Skey(pkCli_289,pkSess_292) in
                        {298}let m1_294: bitstring = CreateSessionRequest in
                        {299}out(c, (senc(m1_294,K_293),sign(h(m1_294),skCli_288)));
                        {300}in(c, (em2_295: bitstring,sigM2_296: bitstring));
                        {301}let m2_297: bitstring = sdec(em2_295,K_293) in
                        {302}if (verify(h(m2_297),sigM2_296,pkSess_292) <> true) then
                            0
                        else
                            {303}let (SSC_298: bitstring,Ns2_299: bitstring) = m2_297 in
                            {304}new CSC_300: bitstring;
                            {305}event beginCli(Cli,Sess,(Login(pkCli_289,pkSess_292),Passwd(pkCli_289,pkSess_292)));
                            {306}let m3_301: bitstring = (CSC_300,Login(pkCli_289,pkSess_292),Passwd(pkCli_289,pkSess_292)) in
                            {307}out(c, (senc(m3_301,K_293),sign(h(m3_301),skCli_288)));
                            {308}in(c, (em4_302: bitstring,sigM4_303: bitstring));
                            {309}let m4_304: bitstring = sdec(em4_302,K_293) in
                            {310}if (verify(h(m4_304),sigM4_303,pkSess_292) <> true) then
                                0
                            else
                                {311}if (m4_304 <> ActivateSessionResponse) then
                                0
                    )
                    else
                        {312}let v_305: bool = (Sess = B) in
                        (
                            {313}if v_305 then
                            (
                                {314}let skSess_306: bitstring = skB in
                                {315}let pkSess_307: bitstring = pub(skSess_306) in
                                {316}let K_308: bitstring = Skey(pkCli_289,pkSess_307) in
                                {317}let m1_309: bitstring = CreateSessionRequest in
                                {318}out(c, (senc(m1_309,K_308),sign(h(m1_309),skCli_288)));
                                {319}in(c, (em2_310: bitstring,sigM2_311: bitstring));
                                {320}let m2_312: bitstring = sdec(em2_310,K_308) in
                                {321}if (verify(h(m2_312),sigM2_311,pkSess_307) <> true) then
                                    0
                                else
                                    {322}let (SSC_313: bitstring,Ns2_314: bitstring) = m2_312 in
                                    {323}new CSC_315: bitstring;
                                    {324}event beginCli(Cli,Sess,(Login(pkCli_289,pkSess_307),Passwd(pkCli_289,pkSess_307)));
                                    {325}let m3_316: bitstring = (CSC_315,Login(pkCli_289,pkSess_307),Passwd(pkCli_289,pkSess_307)) in
                                    {326}out(c, (senc(m3_316,K_308),sign(h(m3_316),skCli_288)));
                                    {327}in(c, (em4_317: bitstring,sigM4_318: bitstring));
                                    {328}let m4_319: bitstring = sdec(em4_317,K_308) in
                                    {329}if (verify(h(m4_319),sigM4_318,pkSess_307) <> true) then
                                        0
                                    else
                                        {330}if (m4_319 <> ActivateSessionResponse) then
                                        0
                            )
                            else
                                {331}let skSess_320: bitstring = skI in
                                {332}let pkSess_321: bitstring = pub(skSess_320) in
                                {333}let K_322: bitstring = Skey(pkCli_289,pkSess_321) in
                                {334}let m1_323: bitstring = CreateSessionRequest in
                                {335}out(c, (senc(m1_323,K_322),sign(h(m1_323),skCli_288)));
                                {336}in(c, (em2_324: bitstring,sigM2_325: bitstring));
                                {337}let m2_326: bitstring = sdec(em2_324,K_322) in
                                {338}if (verify(h(m2_326),sigM2_325,pkSess_321) <> true) then
                                    0
                                else
                                    {339}let (SSC_327: bitstring,Ns2_328: bitstring) = m2_326 in
                                    {340}new CSC_329: bitstring;
                                    {341}event beginCli(Cli,Sess,(Login(pkCli_289,pkSess_321),Passwd(pkCli_289,pkSess_321)));
                                    {342}let m3_330: bitstring = (CSC_329,Login(pkCli_289,pkSess_321),Passwd(pkCli_289,pkSess_321)) in
                                    {343}out(c, (senc(m3_330,K_322),sign(h(m3_330),skCli_288)));
                                    {344}in(c, (em4_331: bitstring,sigM4_332: bitstring));
                                    {345}let m4_333: bitstring = sdec(em4_331,K_322) in
                                    {346}if (verify(h(m4_333),sigM4_332,pkSess_321) <> true) then
                                        0
                                    else
                                        {347}if (m4_333 <> ActivateSessionResponse) then
                                        0
                        )
                        else
                            {348}let skSess_334: bitstring = fail-any in
                            {349}let pkSess_335: bitstring = pub(skSess_334) in
                            {350}let K_336: bitstring = Skey(pkCli_289,pkSess_335) in
                            {351}let m1_337: bitstring = CreateSessionRequest in
                            {352}out(c, (senc(m1_337,K_336),sign(h(m1_337),skCli_288)));
                            {353}in(c, (em2_338: bitstring,sigM2_339: bitstring));
                            {354}let m2_340: bitstring = sdec(em2_338,K_336) in
                            {355}if (verify(h(m2_340),sigM2_339,pkSess_335) <> true) then
                                0
                            else
                                {356}let (SSC_341: bitstring,Ns2_342: bitstring) = m2_340 in
                                {357}new CSC_343: bitstring;
                                {358}event beginCli(Cli,Sess,(Login(pkCli_289,pkSess_335),Passwd(pkCli_289,pkSess_335)));
                                {359}let m3_344: bitstring = (CSC_343,Login(pkCli_289,pkSess_335),Passwd(pkCli_289,pkSess_335)) in
                                {360}out(c, (senc(m3_344,K_336),sign(h(m3_344),skCli_288)));
                                {361}in(c, (em4_345: bitstring,sigM4_346: bitstring));
                                {362}let m4_347: bitstring = sdec(em4_345,K_336) in
                                {363}if (verify(h(m4_347),sigM4_346,pkSess_335) <> true) then
                                    0
                                else
                                    {364}if (m4_347 <> ActivateSessionResponse) then
                                    0
                )
                else
                    {365}let skSess_348: bitstring = fail-any in
                    {366}let pkSess_349: bitstring = pub(skSess_348) in
                    {367}let K_350: bitstring = Skey(pkCli_289,pkSess_349) in
                    {368}let m1_351: bitstring = CreateSessionRequest in
                    {369}out(c, (senc(m1_351,K_350),sign(h(m1_351),skCli_288)));
                    {370}in(c, (em2_352: bitstring,sigM2_353: bitstring));
                    {371}let m2_354: bitstring = sdec(em2_352,K_350) in
                    {372}if (verify(h(m2_354),sigM2_353,pkSess_349) <> true) then
                        0
                    else
                        {373}let (SSC_355: bitstring,Ns2_356: bitstring) = m2_354 in
                        {374}new CSC_357: bitstring;
                        {375}event beginCli(Cli,Sess,(Login(pkCli_289,pkSess_349),Passwd(pkCli_289,pkSess_349)));
                        {376}let m3_358: bitstring = (CSC_357,Login(pkCli_289,pkSess_349),Passwd(pkCli_289,pkSess_349)) in
                        {377}out(c, (senc(m3_358,K_350),sign(h(m3_358),skCli_288)));
                        {378}in(c, (em4_359: bitstring,sigM4_360: bitstring));
                        {379}let m4_361: bitstring = sdec(em4_359,K_350) in
                        {380}if (verify(h(m4_361),sigM4_360,pkSess_349) <> true) then
                            0
                        else
                            {381}if (m4_361 <> ActivateSessionResponse) then
                            0
    )
    else
        {382}let skCli_362: bitstring = fail-any in
        {383}let pkCli_363: bitstring = pub(skCli_362) in
        {384}let v_364: bool = (Sess = A) in
        (
            {385}if v_364 then
            (
                {386}let skSess_365: bitstring = skA in
                {387}let pkSess_366: bitstring = pub(skSess_365) in
                {388}let K_367: bitstring = Skey(pkCli_363,pkSess_366) in
                {389}let m1_368: bitstring = CreateSessionRequest in
                {390}out(c, (senc(m1_368,K_367),sign(h(m1_368),skCli_362)));
                {391}in(c, (em2_369: bitstring,sigM2_370: bitstring));
                {392}let m2_371: bitstring = sdec(em2_369,K_367) in
                {393}if (verify(h(m2_371),sigM2_370,pkSess_366) <> true) then
                    0
                else
                    {394}let (SSC_372: bitstring,Ns2_373: bitstring) = m2_371 in
                    {395}new CSC_374: bitstring;
                    {396}event beginCli(Cli,Sess,(Login(pkCli_363,pkSess_366),Passwd(pkCli_363,pkSess_366)));
                    {397}let m3_375: bitstring = (CSC_374,Login(pkCli_363,pkSess_366),Passwd(pkCli_363,pkSess_366)) in
                    {398}out(c, (senc(m3_375,K_367),sign(h(m3_375),skCli_362)));
                    {399}in(c, (em4_376: bitstring,sigM4_377: bitstring));
                    {400}let m4_378: bitstring = sdec(em4_376,K_367) in
                    {401}if (verify(h(m4_378),sigM4_377,pkSess_366) <> true) then
                        0
                    else
                        {402}if (m4_378 <> ActivateSessionResponse) then
                        0
            )
            else
                {403}let v_379: bool = (Sess = B) in
                (
                    {404}if v_379 then
                    (
                        {405}let skSess_380: bitstring = skB in
                        {406}let pkSess_381: bitstring = pub(skSess_380) in
                        {407}let K_382: bitstring = Skey(pkCli_363,pkSess_381) in
                        {408}let m1_383: bitstring = CreateSessionRequest in
                        {409}out(c, (senc(m1_383,K_382),sign(h(m1_383),skCli_362)));
                        {410}in(c, (em2_384: bitstring,sigM2_385: bitstring));
                        {411}let m2_386: bitstring = sdec(em2_384,K_382) in
                        {412}if (verify(h(m2_386),sigM2_385,pkSess_381) <> true) then
                            0
                        else
                            {413}let (SSC_387: bitstring,Ns2_388: bitstring) = m2_386 in
                            {414}new CSC_389: bitstring;
                            {415}event beginCli(Cli,Sess,(Login(pkCli_363,pkSess_381),Passwd(pkCli_363,pkSess_381)));
                            {416}let m3_390: bitstring = (CSC_389,Login(pkCli_363,pkSess_381),Passwd(pkCli_363,pkSess_381)) in
                            {417}out(c, (senc(m3_390,K_382),sign(h(m3_390),skCli_362)));
                            {418}in(c, (em4_391: bitstring,sigM4_392: bitstring));
                            {419}let m4_393: bitstring = sdec(em4_391,K_382) in
                            {420}if (verify(h(m4_393),sigM4_392,pkSess_381) <> true) then
                                0
                            else
                                {421}if (m4_393 <> ActivateSessionResponse) then
                                0
                    )
                    else
                        {422}let skSess_394: bitstring = skI in
                        {423}let pkSess_395: bitstring = pub(skSess_394) in
                        {424}let K_396: bitstring = Skey(pkCli_363,pkSess_395) in
                        {425}let m1_397: bitstring = CreateSessionRequest in
                        {426}out(c, (senc(m1_397,K_396),sign(h(m1_397),skCli_362)));
                        {427}in(c, (em2_398: bitstring,sigM2_399: bitstring));
                        {428}let m2_400: bitstring = sdec(em2_398,K_396) in
                        {429}if (verify(h(m2_400),sigM2_399,pkSess_395) <> true) then
                            0
                        else
                            {430}let (SSC_401: bitstring,Ns2_402: bitstring) = m2_400 in
                            {431}new CSC_403: bitstring;
                            {432}event beginCli(Cli,Sess,(Login(pkCli_363,pkSess_395),Passwd(pkCli_363,pkSess_395)));
                            {433}let m3_404: bitstring = (CSC_403,Login(pkCli_363,pkSess_395),Passwd(pkCli_363,pkSess_395)) in
                            {434}out(c, (senc(m3_404,K_396),sign(h(m3_404),skCli_362)));
                            {435}in(c, (em4_405: bitstring,sigM4_406: bitstring));
                            {436}let m4_407: bitstring = sdec(em4_405,K_396) in
                            {437}if (verify(h(m4_407),sigM4_406,pkSess_395) <> true) then
                                0
                            else
                                {438}if (m4_407 <> ActivateSessionResponse) then
                                0
                )
                else
                    {439}let skSess_408: bitstring = fail-any in
                    {440}let pkSess_409: bitstring = pub(skSess_408) in
                    {441}let K_410: bitstring = Skey(pkCli_363,pkSess_409) in
                    {442}let m1_411: bitstring = CreateSessionRequest in
                    {443}out(c, (senc(m1_411,K_410),sign(h(m1_411),skCli_362)));
                    {444}in(c, (em2_412: bitstring,sigM2_413: bitstring));
                    {445}let m2_414: bitstring = sdec(em2_412,K_410) in
                    {446}if (verify(h(m2_414),sigM2_413,pkSess_409) <> true) then
                        0
                    else
                        {447}let (SSC_415: bitstring,Ns2_416: bitstring) = m2_414 in
                        {448}new CSC_417: bitstring;
                        {449}event beginCli(Cli,Sess,(Login(pkCli_363,pkSess_409),Passwd(pkCli_363,pkSess_409)));
                        {450}let m3_418: bitstring = (CSC_417,Login(pkCli_363,pkSess_409),Passwd(pkCli_363,pkSess_409)) in
                        {451}out(c, (senc(m3_418,K_410),sign(h(m3_418),skCli_362)));
                        {452}in(c, (em4_419: bitstring,sigM4_420: bitstring));
                        {453}let m4_421: bitstring = sdec(em4_419,K_410) in
                        {454}if (verify(h(m4_421),sigM4_420,pkSess_409) <> true) then
                            0
                        else
                            {455}if (m4_421 <> ActivateSessionResponse) then
                            0
        )
        else
            {456}let skSess_422: bitstring = fail-any in
            {457}let pkSess_423: bitstring = pub(skSess_422) in
            {458}let K_424: bitstring = Skey(pkCli_363,pkSess_423) in
            {459}let m1_425: bitstring = CreateSessionRequest in
            {460}out(c, (senc(m1_425,K_424),sign(h(m1_425),skCli_362)));
            {461}in(c, (em2_426: bitstring,sigM2_427: bitstring));
            {462}let m2_428: bitstring = sdec(em2_426,K_424) in
            {463}if (verify(h(m2_428),sigM2_427,pkSess_423) <> true) then
                0
            else
                {464}let (SSC_429: bitstring,Ns2_430: bitstring) = m2_428 in
                {465}new CSC_431: bitstring;
                {466}event beginCli(Cli,Sess,(Login(pkCli_363,pkSess_423),Passwd(pkCli_363,pkSess_423)));
                {467}let m3_432: bitstring = (CSC_431,Login(pkCli_363,pkSess_423),Passwd(pkCli_363,pkSess_423)) in
                {468}out(c, (senc(m3_432,K_424),sign(h(m3_432),skCli_362)));
                {469}in(c, (em4_433: bitstring,sigM4_434: bitstring));
                {470}let m4_435: bitstring = sdec(em4_433,K_424) in
                {471}if (verify(h(m4_435),sigM4_434,pkSess_423) <> true) then
                    0
                else
                    {472}if (m4_435 <> ActivateSessionResponse) then
                    0
) | (
    {473}!
    {474}in(c, (Cli_436: host,Sess_437: host));
    {475}let v_438: bool = (Cli_436 = A) in
    (
        {476}if v_438 then
        (
            {477}let skCli_439: bitstring = skA in
            {478}let pkCli_440: bitstring = pub(skCli_439) in
            {479}let v_441: bool = (Sess_437 = A) in
            (
                {480}if v_441 then
                (
                    {481}let skSess_442: bitstring = skA in
                    {482}let pkSess_443: bitstring = pub(skSess_442) in
                    {483}let K_444: bitstring = Skey(pkCli_440,pkSess_443) in
                    {484}in(c, m1_445: bitstring);
                    {485}if (m1_445 <> CreateSessionRequest) then
                        0
                    else
                        {486}new SSC_446: bitstring;
                        {487}new Ns2_447: bitstring;
                        {488}let m2_448: bitstring = (SSC_446,Ns2_447) in
                        {489}out(c, m2_448);
                        {490}in(c, m3_449: bitstring);
                        {491}let (=Login(pkCli_440,pkSess_443),=Passwd(pkCli_440,pkSess_443)) = m3_449 in
                        {492}event endSrv(Cli_436,Sess_437,(Login(pkCli_440,pkSess_443),Passwd(pkCli_440,pkSess_443)));
                        {493}let m4_450: bitstring = ActivateSessionResponse in
                        {494}out(c, m4_450)
                )
                else
                    {495}let v_451: bool = (Sess_437 = B) in
                    (
                        {496}if v_451 then
                        (
                            {497}let skSess_452: bitstring = skB in
                            {498}let pkSess_453: bitstring = pub(skSess_452) in
                            {499}let K_454: bitstring = Skey(pkCli_440,pkSess_453) in
                            {500}in(c, m1_455: bitstring);
                            {501}if (m1_455 <> CreateSessionRequest) then
                                0
                            else
                                {502}new SSC_456: bitstring;
                                {503}new Ns2_457: bitstring;
                                {504}let m2_458: bitstring = (SSC_456,Ns2_457) in
                                {505}out(c, m2_458);
                                {506}in(c, m3_459: bitstring);
                                {507}let (=Login(pkCli_440,pkSess_453),=Passwd(pkCli_440,pkSess_453)) = m3_459 in
                                {508}event endSrv(Cli_436,Sess_437,(Login(pkCli_440,pkSess_453),Passwd(pkCli_440,pkSess_453)));
                                {509}let m4_460: bitstring = ActivateSessionResponse in
                                {510}out(c, m4_460)
                        )
                        else
                            {511}let skSess_461: bitstring = skI in
                            {512}let pkSess_462: bitstring = pub(skSess_461) in
                            {513}let K_463: bitstring = Skey(pkCli_440,pkSess_462) in
                            {514}in(c, m1_464: bitstring);
                            {515}if (m1_464 <> CreateSessionRequest) then
                                0
                            else
                                {516}new SSC_465: bitstring;
                                {517}new Ns2_466: bitstring;
                                {518}let m2_467: bitstring = (SSC_465,Ns2_466) in
                                {519}out(c, m2_467);
                                {520}in(c, m3_468: bitstring);
                                {521}let (=Login(pkCli_440,pkSess_462),=Passwd(pkCli_440,pkSess_462)) = m3_468 in
                                {522}event endSrv(Cli_436,Sess_437,(Login(pkCli_440,pkSess_462),Passwd(pkCli_440,pkSess_462)));
                                {523}let m4_469: bitstring = ActivateSessionResponse in
                                {524}out(c, m4_469)
                    )
                    else
                        {525}let skSess_470: bitstring = fail-any in
                        {526}let pkSess_471: bitstring = pub(skSess_470) in
                        {527}let K_472: bitstring = Skey(pkCli_440,pkSess_471) in
                        {528}in(c, m1_473: bitstring);
                        {529}if (m1_473 <> CreateSessionRequest) then
                            0
                        else
                            {530}new SSC_474: bitstring;
                            {531}new Ns2_475: bitstring;
                            {532}let m2_476: bitstring = (SSC_474,Ns2_475) in
                            {533}out(c, m2_476);
                            {534}in(c, m3_477: bitstring);
                            {535}let (=Login(pkCli_440,pkSess_471),=Passwd(pkCli_440,pkSess_471)) = m3_477 in
                            {536}event endSrv(Cli_436,Sess_437,(Login(pkCli_440,pkSess_471),Passwd(pkCli_440,pkSess_471)));
                            {537}let m4_478: bitstring = ActivateSessionResponse in
                            {538}out(c, m4_478)
            )
            else
                {539}let skSess_479: bitstring = fail-any in
                {540}let pkSess_480: bitstring = pub(skSess_479) in
                {541}let K_481: bitstring = Skey(pkCli_440,pkSess_480) in
                {542}in(c, m1_482: bitstring);
                {543}if (m1_482 <> CreateSessionRequest) then
                    0
                else
                    {544}new SSC_483: bitstring;
                    {545}new Ns2_484: bitstring;
                    {546}let m2_485: bitstring = (SSC_483,Ns2_484) in
                    {547}out(c, m2_485);
                    {548}in(c, m3_486: bitstring);
                    {549}let (=Login(pkCli_440,pkSess_480),=Passwd(pkCli_440,pkSess_480)) = m3_486 in
                    {550}event endSrv(Cli_436,Sess_437,(Login(pkCli_440,pkSess_480),Passwd(pkCli_440,pkSess_480)));
                    {551}let m4_487: bitstring = ActivateSessionResponse in
                    {552}out(c, m4_487)
        )
        else
            {553}let v_488: bool = (Cli_436 = B) in
            (
                {554}if v_488 then
                (
                    {555}let skCli_489: bitstring = skB in
                    {556}let pkCli_490: bitstring = pub(skCli_489) in
                    {557}let v_491: bool = (Sess_437 = A) in
                    (
                        {558}if v_491 then
                        (
                            {559}let skSess_492: bitstring = skA in
                            {560}let pkSess_493: bitstring = pub(skSess_492) in
                            {561}let K_494: bitstring = Skey(pkCli_490,pkSess_493) in
                            {562}in(c, m1_495: bitstring);
                            {563}if (m1_495 <> CreateSessionRequest) then
                                0
                            else
                                {564}new SSC_496: bitstring;
                                {565}new Ns2_497: bitstring;
                                {566}let m2_498: bitstring = (SSC_496,Ns2_497) in
                                {567}out(c, m2_498);
                                {568}in(c, m3_499: bitstring);
                                {569}let (=Login(pkCli_490,pkSess_493),=Passwd(pkCli_490,pkSess_493)) = m3_499 in
                                {570}event endSrv(Cli_436,Sess_437,(Login(pkCli_490,pkSess_493),Passwd(pkCli_490,pkSess_493)));
                                {571}let m4_500: bitstring = ActivateSessionResponse in
                                {572}out(c, m4_500)
                        )
                        else
                            {573}let v_501: bool = (Sess_437 = B) in
                            (
                                {574}if v_501 then
                                (
                                    {575}let skSess_502: bitstring = skB in
                                    {576}let pkSess_503: bitstring = pub(skSess_502) in
                                    {577}let K_504: bitstring = Skey(pkCli_490,pkSess_503) in
                                    {578}in(c, m1_505: bitstring);
                                    {579}if (m1_505 <> CreateSessionRequest) then
                                        0
                                    else
                                        {580}new SSC_506: bitstring;
                                        {581}new Ns2_507: bitstring;
                                        {582}let m2_508: bitstring = (SSC_506,Ns2_507) in
                                        {583}out(c, m2_508);
                                        {584}in(c, m3_509: bitstring);
                                        {585}let (=Login(pkCli_490,pkSess_503),=Passwd(pkCli_490,pkSess_503)) = m3_509 in
                                        {586}event endSrv(Cli_436,Sess_437,(Login(pkCli_490,pkSess_503),Passwd(pkCli_490,pkSess_503)));
                                        {587}let m4_510: bitstring = ActivateSessionResponse in
                                        {588}out(c, m4_510)
                                )
                                else
                                    {589}let skSess_511: bitstring = skI in
                                    {590}let pkSess_512: bitstring = pub(skSess_511) in
                                    {591}let K_513: bitstring = Skey(pkCli_490,pkSess_512) in
                                    {592}in(c, m1_514: bitstring);
                                    {593}if (m1_514 <> CreateSessionRequest) then
                                        0
                                    else
                                        {594}new SSC_515: bitstring;
                                        {595}new Ns2_516: bitstring;
                                        {596}let m2_517: bitstring = (SSC_515,Ns2_516) in
                                        {597}out(c, m2_517);
                                        {598}in(c, m3_518: bitstring);
                                        {599}let (=Login(pkCli_490,pkSess_512),=Passwd(pkCli_490,pkSess_512)) = m3_518 in
                                        {600}event endSrv(Cli_436,Sess_437,(Login(pkCli_490,pkSess_512),Passwd(pkCli_490,pkSess_512)));
                                        {601}let m4_519: bitstring = ActivateSessionResponse in
                                        {602}out(c, m4_519)
                            )
                            else
                                {603}let skSess_520: bitstring = fail-any in
                                {604}let pkSess_521: bitstring = pub(skSess_520) in
                                {605}let K_522: bitstring = Skey(pkCli_490,pkSess_521) in
                                {606}in(c, m1_523: bitstring);
                                {607}if (m1_523 <> CreateSessionRequest) then
                                    0
                                else
                                    {608}new SSC_524: bitstring;
                                    {609}new Ns2_525: bitstring;
                                    {610}let m2_526: bitstring = (SSC_524,Ns2_525) in
                                    {611}out(c, m2_526);
                                    {612}in(c, m3_527: bitstring);
                                    {613}let (=Login(pkCli_490,pkSess_521),=Passwd(pkCli_490,pkSess_521)) = m3_527 in
                                    {614}event endSrv(Cli_436,Sess_437,(Login(pkCli_490,pkSess_521),Passwd(pkCli_490,pkSess_521)));
                                    {615}let m4_528: bitstring = ActivateSessionResponse in
                                    {616}out(c, m4_528)
                    )
                    else
                        {617}let skSess_529: bitstring = fail-any in
                        {618}let pkSess_530: bitstring = pub(skSess_529) in
                        {619}let K_531: bitstring = Skey(pkCli_490,pkSess_530) in
                        {620}in(c, m1_532: bitstring);
                        {621}if (m1_532 <> CreateSessionRequest) then
                            0
                        else
                            {622}new SSC_533: bitstring;
                            {623}new Ns2_534: bitstring;
                            {624}let m2_535: bitstring = (SSC_533,Ns2_534) in
                            {625}out(c, m2_535);
                            {626}in(c, m3_536: bitstring);
                            {627}let (=Login(pkCli_490,pkSess_530),=Passwd(pkCli_490,pkSess_530)) = m3_536 in
                            {628}event endSrv(Cli_436,Sess_437,(Login(pkCli_490,pkSess_530),Passwd(pkCli_490,pkSess_530)));
                            {629}let m4_537: bitstring = ActivateSessionResponse in
                            {630}out(c, m4_537)
                )
                else
                    {631}let skCli_538: bitstring = skI in
                    {632}let pkCli_539: bitstring = pub(skCli_538) in
                    {633}let v_540: bool = (Sess_437 = A) in
                    (
                        {634}if v_540 then
                        (
                            {635}let skSess_541: bitstring = skA in
                            {636}let pkSess_542: bitstring = pub(skSess_541) in
                            {637}let K_543: bitstring = Skey(pkCli_539,pkSess_542) in
                            {638}in(c, m1_544: bitstring);
                            {639}if (m1_544 <> CreateSessionRequest) then
                                0
                            else
                                {640}new SSC_545: bitstring;
                                {641}new Ns2_546: bitstring;
                                {642}let m2_547: bitstring = (SSC_545,Ns2_546) in
                                {643}out(c, m2_547);
                                {644}in(c, m3_548: bitstring);
                                {645}let (=Login(pkCli_539,pkSess_542),=Passwd(pkCli_539,pkSess_542)) = m3_548 in
                                {646}event endSrv(Cli_436,Sess_437,(Login(pkCli_539,pkSess_542),Passwd(pkCli_539,pkSess_542)));
                                {647}let m4_549: bitstring = ActivateSessionResponse in
                                {648}out(c, m4_549)
                        )
                        else
                            {649}let v_550: bool = (Sess_437 = B) in
                            (
                                {650}if v_550 then
                                (
                                    {651}let skSess_551: bitstring = skB in
                                    {652}let pkSess_552: bitstring = pub(skSess_551) in
                                    {653}let K_553: bitstring = Skey(pkCli_539,pkSess_552) in
                                    {654}in(c, m1_554: bitstring);
                                    {655}if (m1_554 <> CreateSessionRequest) then
                                        0
                                    else
                                        {656}new SSC_555: bitstring;
                                        {657}new Ns2_556: bitstring;
                                        {658}let m2_557: bitstring = (SSC_555,Ns2_556) in
                                        {659}out(c, m2_557);
                                        {660}in(c, m3_558: bitstring);
                                        {661}let (=Login(pkCli_539,pkSess_552),=Passwd(pkCli_539,pkSess_552)) = m3_558 in
                                        {662}event endSrv(Cli_436,Sess_437,(Login(pkCli_539,pkSess_552),Passwd(pkCli_539,pkSess_552)));
                                        {663}let m4_559: bitstring = ActivateSessionResponse in
                                        {664}out(c, m4_559)
                                )
                                else
                                    {665}let skSess_560: bitstring = skI in
                                    {666}let pkSess_561: bitstring = pub(skSess_560) in
                                    {667}let K_562: bitstring = Skey(pkCli_539,pkSess_561) in
                                    {668}in(c, m1_563: bitstring);
                                    {669}if (m1_563 <> CreateSessionRequest) then
                                        0
                                    else
                                        {670}new SSC_564: bitstring;
                                        {671}new Ns2_565: bitstring;
                                        {672}let m2_566: bitstring = (SSC_564,Ns2_565) in
                                        {673}out(c, m2_566);
                                        {674}in(c, m3_567: bitstring);
                                        {675}let (=Login(pkCli_539,pkSess_561),=Passwd(pkCli_539,pkSess_561)) = m3_567 in
                                        {676}event endSrv(Cli_436,Sess_437,(Login(pkCli_539,pkSess_561),Passwd(pkCli_539,pkSess_561)));
                                        {677}let m4_568: bitstring = ActivateSessionResponse in
                                        {678}out(c, m4_568)
                            )
                            else
                                {679}let skSess_569: bitstring = fail-any in
                                {680}let pkSess_570: bitstring = pub(skSess_569) in
                                {681}let K_571: bitstring = Skey(pkCli_539,pkSess_570) in
                                {682}in(c, m1_572: bitstring);
                                {683}if (m1_572 <> CreateSessionRequest) then
                                    0
                                else
                                    {684}new SSC_573: bitstring;
                                    {685}new Ns2_574: bitstring;
                                    {686}let m2_575: bitstring = (SSC_573,Ns2_574) in
                                    {687}out(c, m2_575);
                                    {688}in(c, m3_576: bitstring);
                                    {689}let (=Login(pkCli_539,pkSess_570),=Passwd(pkCli_539,pkSess_570)) = m3_576 in
                                    {690}event endSrv(Cli_436,Sess_437,(Login(pkCli_539,pkSess_570),Passwd(pkCli_539,pkSess_570)));
                                    {691}let m4_577: bitstring = ActivateSessionResponse in
                                    {692}out(c, m4_577)
                    )
                    else
                        {693}let skSess_578: bitstring = fail-any in
                        {694}let pkSess_579: bitstring = pub(skSess_578) in
                        {695}let K_580: bitstring = Skey(pkCli_539,pkSess_579) in
                        {696}in(c, m1_581: bitstring);
                        {697}if (m1_581 <> CreateSessionRequest) then
                            0
                        else
                            {698}new SSC_582: bitstring;
                            {699}new Ns2_583: bitstring;
                            {700}let m2_584: bitstring = (SSC_582,Ns2_583) in
                            {701}out(c, m2_584);
                            {702}in(c, m3_585: bitstring);
                            {703}let (=Login(pkCli_539,pkSess_579),=Passwd(pkCli_539,pkSess_579)) = m3_585 in
                            {704}event endSrv(Cli_436,Sess_437,(Login(pkCli_539,pkSess_579),Passwd(pkCli_539,pkSess_579)));
                            {705}let m4_586: bitstring = ActivateSessionResponse in
                            {706}out(c, m4_586)
            )
            else
                {707}let skCli_587: bitstring = fail-any in
                {708}let pkCli_588: bitstring = pub(skCli_587) in
                {709}let v_589: bool = (Sess_437 = A) in
                (
                    {710}if v_589 then
                    (
                        {711}let skSess_590: bitstring = skA in
                        {712}let pkSess_591: bitstring = pub(skSess_590) in
                        {713}let K_592: bitstring = Skey(pkCli_588,pkSess_591) in
                        {714}in(c, m1_593: bitstring);
                        {715}if (m1_593 <> CreateSessionRequest) then
                            0
                        else
                            {716}new SSC_594: bitstring;
                            {717}new Ns2_595: bitstring;
                            {718}let m2_596: bitstring = (SSC_594,Ns2_595) in
                            {719}out(c, m2_596);
                            {720}in(c, m3_597: bitstring);
                            {721}let (=Login(pkCli_588,pkSess_591),=Passwd(pkCli_588,pkSess_591)) = m3_597 in
                            {722}event endSrv(Cli_436,Sess_437,(Login(pkCli_588,pkSess_591),Passwd(pkCli_588,pkSess_591)));
                            {723}let m4_598: bitstring = ActivateSessionResponse in
                            {724}out(c, m4_598)
                    )
                    else
                        {725}let v_599: bool = (Sess_437 = B) in
                        (
                            {726}if v_599 then
                            (
                                {727}let skSess_600: bitstring = skB in
                                {728}let pkSess_601: bitstring = pub(skSess_600) in
                                {729}let K_602: bitstring = Skey(pkCli_588,pkSess_601) in
                                {730}in(c, m1_603: bitstring);
                                {731}if (m1_603 <> CreateSessionRequest) then
                                    0
                                else
                                    {732}new SSC_604: bitstring;
                                    {733}new Ns2_605: bitstring;
                                    {734}let m2_606: bitstring = (SSC_604,Ns2_605) in
                                    {735}out(c, m2_606);
                                    {736}in(c, m3_607: bitstring);
                                    {737}let (=Login(pkCli_588,pkSess_601),=Passwd(pkCli_588,pkSess_601)) = m3_607 in
                                    {738}event endSrv(Cli_436,Sess_437,(Login(pkCli_588,pkSess_601),Passwd(pkCli_588,pkSess_601)));
                                    {739}let m4_608: bitstring = ActivateSessionResponse in
                                    {740}out(c, m4_608)
                            )
                            else
                                {741}let skSess_609: bitstring = skI in
                                {742}let pkSess_610: bitstring = pub(skSess_609) in
                                {743}let K_611: bitstring = Skey(pkCli_588,pkSess_610) in
                                {744}in(c, m1_612: bitstring);
                                {745}if (m1_612 <> CreateSessionRequest) then
                                    0
                                else
                                    {746}new SSC_613: bitstring;
                                    {747}new Ns2_614: bitstring;
                                    {748}let m2_615: bitstring = (SSC_613,Ns2_614) in
                                    {749}out(c, m2_615);
                                    {750}in(c, m3_616: bitstring);
                                    {751}let (=Login(pkCli_588,pkSess_610),=Passwd(pkCli_588,pkSess_610)) = m3_616 in
                                    {752}event endSrv(Cli_436,Sess_437,(Login(pkCli_588,pkSess_610),Passwd(pkCli_588,pkSess_610)));
                                    {753}let m4_617: bitstring = ActivateSessionResponse in
                                    {754}out(c, m4_617)
                        )
                        else
                            {755}let skSess_618: bitstring = fail-any in
                            {756}let pkSess_619: bitstring = pub(skSess_618) in
                            {757}let K_620: bitstring = Skey(pkCli_588,pkSess_619) in
                            {758}in(c, m1_621: bitstring);
                            {759}if (m1_621 <> CreateSessionRequest) then
                                0
                            else
                                {760}new SSC_622: bitstring;
                                {761}new Ns2_623: bitstring;
                                {762}let m2_624: bitstring = (SSC_622,Ns2_623) in
                                {763}out(c, m2_624);
                                {764}in(c, m3_625: bitstring);
                                {765}let (=Login(pkCli_588,pkSess_619),=Passwd(pkCli_588,pkSess_619)) = m3_625 in
                                {766}event endSrv(Cli_436,Sess_437,(Login(pkCli_588,pkSess_619),Passwd(pkCli_588,pkSess_619)));
                                {767}let m4_626: bitstring = ActivateSessionResponse in
                                {768}out(c, m4_626)
                )
                else
                    {769}let skSess_627: bitstring = fail-any in
                    {770}let pkSess_628: bitstring = pub(skSess_627) in
                    {771}let K_629: bitstring = Skey(pkCli_588,pkSess_628) in
                    {772}in(c, m1_630: bitstring);
                    {773}if (m1_630 <> CreateSessionRequest) then
                        0
                    else
                        {774}new SSC_631: bitstring;
                        {775}new Ns2_632: bitstring;
                        {776}let m2_633: bitstring = (SSC_631,Ns2_632) in
                        {777}out(c, m2_633);
                        {778}in(c, m3_634: bitstring);
                        {779}let (=Login(pkCli_588,pkSess_628),=Passwd(pkCli_588,pkSess_628)) = m3_634 in
                        {780}event endSrv(Cli_436,Sess_437,(Login(pkCli_588,pkSess_628),Passwd(pkCli_588,pkSess_628)));
                        {781}let m4_635: bitstring = ActivateSessionResponse in
                        {782}out(c, m4_635)
    )
    else
        {783}let skCli_636: bitstring = fail-any in
        {784}let pkCli_637: bitstring = pub(skCli_636) in
        {785}let v_638: bool = (Sess_437 = A) in
        (
            {786}if v_638 then
            (
                {787}let skSess_639: bitstring = skA in
                {788}let pkSess_640: bitstring = pub(skSess_639) in
                {789}let K_641: bitstring = Skey(pkCli_637,pkSess_640) in
                {790}in(c, m1_642: bitstring);
                {791}if (m1_642 <> CreateSessionRequest) then
                    0
                else
                    {792}new SSC_643: bitstring;
                    {793}new Ns2_644: bitstring;
                    {794}let m2_645: bitstring = (SSC_643,Ns2_644) in
                    {795}out(c, m2_645);
                    {796}in(c, m3_646: bitstring);
                    {797}let (=Login(pkCli_637,pkSess_640),=Passwd(pkCli_637,pkSess_640)) = m3_646 in
                    {798}event endSrv(Cli_436,Sess_437,(Login(pkCli_637,pkSess_640),Passwd(pkCli_637,pkSess_640)));
                    {799}let m4_647: bitstring = ActivateSessionResponse in
                    {800}out(c, m4_647)
            )
            else
                {801}let v_648: bool = (Sess_437 = B) in
                (
                    {802}if v_648 then
                    (
                        {803}let skSess_649: bitstring = skB in
                        {804}let pkSess_650: bitstring = pub(skSess_649) in
                        {805}let K_651: bitstring = Skey(pkCli_637,pkSess_650) in
                        {806}in(c, m1_652: bitstring);
                        {807}if (m1_652 <> CreateSessionRequest) then
                            0
                        else
                            {808}new SSC_653: bitstring;
                            {809}new Ns2_654: bitstring;
                            {810}let m2_655: bitstring = (SSC_653,Ns2_654) in
                            {811}out(c, m2_655);
                            {812}in(c, m3_656: bitstring);
                            {813}let (=Login(pkCli_637,pkSess_650),=Passwd(pkCli_637,pkSess_650)) = m3_656 in
                            {814}event endSrv(Cli_436,Sess_437,(Login(pkCli_637,pkSess_650),Passwd(pkCli_637,pkSess_650)));
                            {815}let m4_657: bitstring = ActivateSessionResponse in
                            {816}out(c, m4_657)
                    )
                    else
                        {817}let skSess_658: bitstring = skI in
                        {818}let pkSess_659: bitstring = pub(skSess_658) in
                        {819}let K_660: bitstring = Skey(pkCli_637,pkSess_659) in
                        {820}in(c, m1_661: bitstring);
                        {821}if (m1_661 <> CreateSessionRequest) then
                            0
                        else
                            {822}new SSC_662: bitstring;
                            {823}new Ns2_663: bitstring;
                            {824}let m2_664: bitstring = (SSC_662,Ns2_663) in
                            {825}out(c, m2_664);
                            {826}in(c, m3_665: bitstring);
                            {827}let (=Login(pkCli_637,pkSess_659),=Passwd(pkCli_637,pkSess_659)) = m3_665 in
                            {828}event endSrv(Cli_436,Sess_437,(Login(pkCli_637,pkSess_659),Passwd(pkCli_637,pkSess_659)));
                            {829}let m4_666: bitstring = ActivateSessionResponse in
                            {830}out(c, m4_666)
                )
                else
                    {831}let skSess_667: bitstring = fail-any in
                    {832}let pkSess_668: bitstring = pub(skSess_667) in
                    {833}let K_669: bitstring = Skey(pkCli_637,pkSess_668) in
                    {834}in(c, m1_670: bitstring);
                    {835}if (m1_670 <> CreateSessionRequest) then
                        0
                    else
                        {836}new SSC_671: bitstring;
                        {837}new Ns2_672: bitstring;
                        {838}let m2_673: bitstring = (SSC_671,Ns2_672) in
                        {839}out(c, m2_673);
                        {840}in(c, m3_674: bitstring);
                        {841}let (=Login(pkCli_637,pkSess_668),=Passwd(pkCli_637,pkSess_668)) = m3_674 in
                        {842}event endSrv(Cli_436,Sess_437,(Login(pkCli_637,pkSess_668),Passwd(pkCli_637,pkSess_668)));
                        {843}let m4_675: bitstring = ActivateSessionResponse in
                        {844}out(c, m4_675)
        )
        else
            {845}let skSess_676: bitstring = fail-any in
            {846}let pkSess_677: bitstring = pub(skSess_676) in
            {847}let K_678: bitstring = Skey(pkCli_637,pkSess_677) in
            {848}in(c, m1_679: bitstring);
            {849}if (m1_679 <> CreateSessionRequest) then
                0
            else
                {850}new SSC_680: bitstring;
                {851}new Ns2_681: bitstring;
                {852}let m2_682: bitstring = (SSC_680,Ns2_681) in
                {853}out(c, m2_682);
                {854}in(c, m3_683: bitstring);
                {855}let (=Login(pkCli_637,pkSess_677),=Passwd(pkCli_637,pkSess_677)) = m3_683 in
                {856}event endSrv(Cli_436,Sess_437,(Login(pkCli_637,pkSess_677),Passwd(pkCli_637,pkSess_677)));
                {857}let m4_684: bitstring = ActivateSessionResponse in
                {858}out(c, m4_684)
)

-- Query event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N))
Completing...
200 rules inserted. The rule base contains 110 rules. 3 rules in the queue.
Starting query event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N))
goal reachable: Sess_7080 <> B[] && Sess_7080 <> A[] && X_7081 <> B[] && X_7081 <> A[] && begin(beginCli(A[],Sess_7080,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))))) && attacker(Sess_7080) && attacker(X_7081) -> end(endSrv(A[],X_7081,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))))
Abbreviations:
CSC_7144 = CSC_106[sigM2_102 = sign(h((SSC_7126,Ns2_7127)),skI[]),em2_101 = senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))),Sess = Sess_7099,Cli = A[],!1 = @sid_7128]
CSC_7145 = CSC_106[sigM2_102 = sign(h((SSC_7100,Ns2_7101)),skI[]),em2_101 = senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))),Sess = Sess_7099,Cli = A[],!1 = @sid_7102]

1. We assume as hypothesis that
attacker(X_7142).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know X_7142.
Using the function 2-tuple the attacker may obtain (A[],X_7142).
attacker((A[],X_7142)).

4. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

5. The message Skey(pub(skA[]),pub(skI[])) may be sent to the attacker at output {10}.
attacker(Skey(pub(skA[]),pub(skI[]))).

6. We assume as hypothesis that
attacker(Sess_7099).

7. By 2, the attacker may know A[].
By 6, the attacker may know Sess_7099.
Using the function 2-tuple the attacker may obtain (A[],Sess_7099).
attacker((A[],Sess_7099)).

8. The message (pub(skI[]),skI[]) may be sent to the attacker at output {7}.
attacker((pub(skI[]),skI[])).

9. By 8, the attacker may know (pub(skI[]),skI[]).
Using the function 2-proj-2-tuple the attacker may obtain skI[].
attacker(skI[]).

10. The attacker has some term Ns2_7101.
attacker(Ns2_7101).

11. The attacker has some term SSC_7100.
attacker(SSC_7100).

12. By 11, the attacker may know SSC_7100.
By 10, the attacker may know Ns2_7101.
Using the function 2-tuple the attacker may obtain (SSC_7100,Ns2_7101).
attacker((SSC_7100,Ns2_7101)).

13. By 12, the attacker may know (SSC_7100,Ns2_7101).
Using the function h the attacker may obtain h((SSC_7100,Ns2_7101)).
attacker(h((SSC_7100,Ns2_7101))).

14. By 13, the attacker may know h((SSC_7100,Ns2_7101)).
By 9, the attacker may know skI[].
Using the function sign the attacker may obtain sign(h((SSC_7100,Ns2_7101)),skI[]).
attacker(sign(h((SSC_7100,Ns2_7101)),skI[])).

15. By 12, the attacker may know (SSC_7100,Ns2_7101).
By 5, the attacker may know Skey(pub(skA[]),pub(skI[])).
Using the function senc the attacker may obtain senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))).
attacker(senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[])))).

16. By 15, the attacker may know senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))).
By 14, the attacker may know sign(h((SSC_7100,Ns2_7101)),skI[]).
Using the function 2-tuple the attacker may obtain (senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7100,Ns2_7101)),skI[])).
attacker((senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7100,Ns2_7101)),skI[]))).

17. The message (A[],Sess_7099) that the attacker may have by 7 may be received at input {13}.
The message (senc((SSC_7100,Ns2_7101),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7100,Ns2_7101)),skI[])) that the attacker may have by 16 may be received at input {61}.
The event beginCli(A[],Sess_7099,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {66}.
We have Sess_7099 <> B[] & Sess_7099 <> A[].
So the message (senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[])) may be sent to the attacker at output {68}.
attacker((senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[]))).

18. By 17, the attacker may know (senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))).
attacker(senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[])))).

19. By 18, the attacker may know senc((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))).
By 5, the attacker may know Skey(pub(skA[]),pub(skI[])).
Using the function sdec the attacker may obtain (CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
attacker((CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

20. By 19, the attacker may know (CSC_7145,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(pub(skA[]),pub(skI[])).
attacker(Passwd(pub(skA[]),pub(skI[]))).

21. The attacker has some term Ns2_7127.
attacker(Ns2_7127).

22. The attacker has some term SSC_7126.
attacker(SSC_7126).

23. By 22, the attacker may know SSC_7126.
By 21, the attacker may know Ns2_7127.
Using the function 2-tuple the attacker may obtain (SSC_7126,Ns2_7127).
attacker((SSC_7126,Ns2_7127)).

24. By 23, the attacker may know (SSC_7126,Ns2_7127).
Using the function h the attacker may obtain h((SSC_7126,Ns2_7127)).
attacker(h((SSC_7126,Ns2_7127))).

25. By 24, the attacker may know h((SSC_7126,Ns2_7127)).
By 9, the attacker may know skI[].
Using the function sign the attacker may obtain sign(h((SSC_7126,Ns2_7127)),skI[]).
attacker(sign(h((SSC_7126,Ns2_7127)),skI[])).

26. By 23, the attacker may know (SSC_7126,Ns2_7127).
By 5, the attacker may know Skey(pub(skA[]),pub(skI[])).
Using the function senc the attacker may obtain senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))).
attacker(senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[])))).

27. By 26, the attacker may know senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))).
By 25, the attacker may know sign(h((SSC_7126,Ns2_7127)),skI[]).
Using the function 2-tuple the attacker may obtain (senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7126,Ns2_7127)),skI[])).
attacker((senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7126,Ns2_7127)),skI[]))).

28. The message (A[],Sess_7099) that the attacker may have by 7 may be received at input {13}.
The message (senc((SSC_7126,Ns2_7127),Skey(pub(skA[]),pub(skI[]))),sign(h((SSC_7126,Ns2_7127)),skI[])) that the attacker may have by 27 may be received at input {61}.
The event beginCli(A[],Sess_7099,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {66}.
We have Sess_7099 <> B[] & Sess_7099 <> A[].
So the message (senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[])) may be sent to the attacker at output {68}.
attacker((senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[]))).

29. By 28, the attacker may know (senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))),sign(h((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))).
attacker(senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[])))).

30. By 29, the attacker may know senc((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))),Skey(pub(skA[]),pub(skI[]))).
By 5, the attacker may know Skey(pub(skA[]),pub(skI[])).
Using the function sdec the attacker may obtain (CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
attacker((CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

31. By 30, the attacker may know (CSC_7144,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
Using the function 2-proj-3-tuple the attacker may obtain Login(pub(skA[]),pub(skI[])).
attacker(Login(pub(skA[]),pub(skI[]))).

32. By 31, the attacker may know Login(pub(skA[]),pub(skI[])).
By 20, the attacker may know Passwd(pub(skA[]),pub(skI[])).
Using the function 2-tuple the attacker may obtain (Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
attacker((Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

33. The message (A[],X_7142) that the attacker may have by 3 may be received at input {474}.
The message CreateSessionRequest that the attacker may have by 4 may be received at input {514}.
The message (Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))) that the attacker may have by 32 may be received at input {520}.
We have X_7142 <> B[] & X_7142 <> A[].
So event endSrv(A[],X_7142,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {522}.
end(endSrv(A[],X_7142,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new skI creating skI_7154 at {5}

out(c, (pub(skI_7154),skI_7154)) at {7}

out(c, Skey(pub(skI_7154),pub(skA))) at {8}

out(c, Skey(pub(skI_7154),pub(skB))) at {9}

out(c, Skey(pub(skA),pub(skI_7154))) at {10}

out(c, Skey(pub(skB),pub(skI_7154))) at {11}

in(c, (A,a_7148)) at {13} in copy a_7149

out(c, (senc(CreateSessionRequest,Skey(pub(skA),pub(skI_7154))),sign(h(CreateSessionRequest),skA))) at {60} in copy a_7149

in(c, (senc((a_7146,a_7147),Skey(pub(skA),pub(skI_7154))),sign(h((a_7146,a_7147)),skI_7154))) at {61} in copy a_7149

new CSC_106 creating CSC_7155 at {65} in copy a_7149

event(beginCli(A,a_7148,(Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154))))) at {66} in copy a_7149

out(c, (senc((CSC_7155,Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154))),Skey(pub(skA),pub(skI_7154))),sign(h((CSC_7155,Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154)))),skA))) at {68} in copy a_7149

in(c, (A,a_7148)) at {13} in copy a_7152

out(c, (senc(CreateSessionRequest,Skey(pub(skA),pub(skI_7154))),sign(h(CreateSessionRequest),skA))) at {60} in copy a_7152

in(c, (senc((a_7150,a_7151),Skey(pub(skA),pub(skI_7154))),sign(h((a_7150,a_7151)),skI_7154))) at {61} in copy a_7152

new CSC_106 creating CSC_7156 at {65} in copy a_7152

event(beginCli(A,a_7148,(Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154))))) at {66} in copy a_7152

out(c, (senc((CSC_7156,Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154))),Skey(pub(skA),pub(skI_7154))),sign(h((CSC_7156,Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154)))),skA))) at {68} in copy a_7152

in(c, (A,a)) at {474} in copy a_7153

in(c, CreateSessionRequest) at {514} in copy a_7153

new SSC_465 creating SSC_12046 at {516} in copy a_7153

new Ns2_466 creating Ns2_12047 at {517} in copy a_7153

out(c, (SSC_12046,Ns2_12047)) at {519} in copy a_7153

in(c, (Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154)))) at {520} in copy a_7153

event(endSrv(A,a,(Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154))))) at {522} in copy a_7153

The event endSrv(A,a,(Login(pub(skA),pub(skI_7154)),Passwd(pub(skA),pub(skI_7154)))) is executed.
A trace has been found.
RESULT event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N)) is false.
-- Query not attacker(Skey(pub(skB[]),pub(skA[])))
Completing...
Starting query not attacker(Skey(pub(skB[]),pub(skA[])))
RESULT not attacker(Skey(pub(skB[]),pub(skA[]))) is true.
-- Query not attacker(Skey(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Skey(pub(skA[]),pub(skB[])))
RESULT not attacker(Skey(pub(skA[]),pub(skB[]))) is true.
-- Query not attacker(Passwd(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Passwd(pub(skA[]),pub(skB[])))
RESULT not attacker(Passwd(pub(skA[]),pub(skB[]))) is true.
-- Query not attacker(Login(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Login(pub(skA[]),pub(skB[])))
RESULT not attacker(Login(pub(skA[]),pub(skB[]))) is true.
