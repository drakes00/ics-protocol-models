Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            0
) | (
    {30}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {31}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {32}let pkCli_63: bitstring = pub(skCli_62) in
    {33}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {34}let pkSess_65: bitstring = pub(skSess_64) in
    {35}in(c, (m1_66: bitstring,sigM1: bitstring));
    {36}if (verify(h(m1_66),sigM1,pkCli_63) <> true) then
        0
    else
        {37}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
        {38}new Ns_68: bitstring;
        {39}let m2_69: bitstring = (CreateSessionResponse,pkSess_65,Ns_68) in
        {40}out(c, (m2_69,sign(h(m2_69),skSess_64)));
        {41}in(c, (m3_70: bitstring,sigM3: bitstring));
        {42}if (verify(h(m3_70),sigM3,pkCli_63) <> true) then
            0
        else
            {43}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_70 in
            {44}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)));
            {45}new Ns2_71: bitstring;
            {46}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {47}out(c, (m4_72,sign(h(m4_72),skSess_64)))
)

-- Query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
Completing...
200 rules inserted. The rule base contains 130 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 194 rules. 118 rules in the queue.
600 rules inserted. The rule base contains 250 rules. 8 rules in the queue.
800 rules inserted. The rule base contains 338 rules. 40 rules in the queue.
Starting query event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N))
goal reachable: Sess_11560 <> B[] && Sess_11560 <> A[] && begin(beginCli(B[],Sess_11560,(Login(skB[]),Passwd(skB[])))) && attacker(Sess_11560) -> end(endSrv(B[],A[],(Login(skB[]),Passwd(skB[]))))
Abbreviations:
K_11706 = K[Sess = Sess_11684,Cli = B[],!1 = @sid_11609]
K_11707 = K[Sess = Sess_11684,Cli = B[],!1 = @sid_11686]
Nc_11708 = Nc[Sess = Sess_11659,Cli = B[],!1 = @sid_11660]
K_11709 = K[Sess = Sess_11659,Cli = B[],!1 = @sid_11660]
ch_11710 = ch[!1 = @sid_11701]
K_11711 = K[Sess = A[],Cli = B[],!1 = @sid_11701]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (B[],A[],K_11711) may be sent on channel ch_11710 at output {13}.
mess(ch_11710,(B[],A[],K_11711)).

5. The attacker has some term Sess_11659.
attacker(Sess_11659).

6. By 2, the attacker may know B[].
By 5, the attacker may know Sess_11659.
Using the function 2-tuple the attacker may obtain (B[],Sess_11659).
attacker((B[],Sess_11659)).

7. The message (B[],Sess_11659) that the attacker may have by 6 may be received at input {7}.
We have Sess_11659 <> B[] & Sess_11659 <> A[].
So the message (senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])) may be sent to the attacker at output {18}.
attacker((senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[]))).

8. By 7, the attacker may know (senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[]).
attacker(sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])).

9. The message (B[],Sess_11659) that the attacker may have by 6 may be received at input {7}.
We have Sess_11659 <> B[] & Sess_11659 <> A[].
So the message K_11709 may be sent to the attacker at output {15}.
attacker(K_11709).

10. By 7, the attacker may know (senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709).
attacker(senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709)).

11. By 10, the attacker may know senc((CreateSessionRequest,pub(skB[]),Nc_11708),K_11709).
By 9, the attacker may know K_11709.
Using the function sdec the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_11708).
attacker((CreateSessionRequest,pub(skB[]),Nc_11708)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_11708).
Using the function 3-proj-3-tuple the attacker may obtain Nc_11708.
attacker(Nc_11708).

13. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

14. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

15. By 14, the attacker may know CreateSessionRequest.
By 13, the attacker may know pub(skB[]).
By 12, the attacker may know Nc_11708.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_11708).
attacker((CreateSessionRequest,pub(skB[]),Nc_11708)).

16. By 15, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_11708).
By 8, the attacker may know sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skB[]),Nc_11708),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])).
attacker(((CreateSessionRequest,pub(skB[]),Nc_11708),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[]))).

17. We assume as hypothesis that
attacker(Sess_11684).

18. By 2, the attacker may know B[].
By 17, the attacker may know Sess_11684.
Using the function 2-tuple the attacker may obtain (B[],Sess_11684).
attacker((B[],Sess_11684)).

19. By 17, the attacker may know Sess_11684.
Using the function sk the attacker may obtain sk(Sess_11684).
attacker(sk(Sess_11684)).

20. The attacker has some term Ns_11685.
attacker(Ns_11685).

21. By 19, the attacker may know sk(Sess_11684).
Using the function pub the attacker may obtain pub(sk(Sess_11684)).
attacker(pub(sk(Sess_11684))).

22. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

23. By 22, the attacker may know CreateSessionResponse.
By 21, the attacker may know pub(sk(Sess_11684)).
By 20, the attacker may know Ns_11685.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685).
attacker((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)).

24. By 23, the attacker may know (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)).
attacker(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685))).

25. By 24, the attacker may know h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)).
By 19, the attacker may know sk(Sess_11684).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684))).

26. The message (B[],Sess_11684) that the attacker may have by 18 may be received at input {7}.
We have Sess_11684 <> B[] & Sess_11684 <> A[].
So the message K_11707 may be sent to the attacker at output {15}.
attacker(K_11707).

27. By 23, the attacker may know (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685).
By 26, the attacker may know K_11707.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707).
attacker(senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707)).

28. By 27, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707).
By 25, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684)))).

29. The message (B[],Sess_11684) that the attacker may have by 18 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685),K_11707),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11685)),sk(Sess_11684))) that the attacker may have by 28 may be received at input {19}.
The event beginCli(B[],Sess_11684,(Login(skB[]),Passwd(skB[]))) may be executed at {23}.
We have Sess_11684 <> B[] & Sess_11684 <> A[].
So the message (senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11707),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11707),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]))).

30. By 29, the attacker may know (senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11707),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]).
attacker(sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])).

31. The message (B[],Sess_11684) that the attacker may have by 18 may be received at input {7}.
We have Sess_11684 <> B[] & Sess_11684 <> A[].
So the message K_11706 may be sent to the attacker at output {15}.
attacker(K_11706).

32. The attacker has some term Ns_11608.
attacker(Ns_11608).

33. By 22, the attacker may know CreateSessionResponse.
By 21, the attacker may know pub(sk(Sess_11684)).
By 32, the attacker may know Ns_11608.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608).
attacker((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)).

34. By 33, the attacker may know (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)).
attacker(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608))).

35. By 34, the attacker may know h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)).
By 19, the attacker may know sk(Sess_11684).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684))).

36. By 33, the attacker may know (CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608).
By 31, the attacker may know K_11706.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706).
attacker(senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706)).

37. By 36, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706).
By 35, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684)))).

38. The message (B[],Sess_11684) that the attacker may have by 18 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608),K_11706),sign(h((CreateSessionResponse,pub(sk(Sess_11684)),Ns_11608)),sk(Sess_11684))) that the attacker may have by 37 may be received at input {19}.
The event beginCli(B[],Sess_11684,(Login(skB[]),Passwd(skB[]))) may be executed at {23}.
We have Sess_11684 <> B[] & Sess_11684 <> A[].
So the message (senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]))).

39. By 38, the attacker may know (senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706).
attacker(senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706)).

40. By 39, the attacker may know senc((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),K_11706).
By 31, the attacker may know K_11706.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])).
attacker((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))).

41. By 40, the attacker may know (ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

42. By 40, the attacker may know (ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skB[]).
attacker(Login(skB[])).

43. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

44. By 43, the attacker may know ActivateSessionRequest.
By 13, the attacker may know pub(skB[]).
By 42, the attacker may know Login(skB[]).
By 41, the attacker may know Passwd(skB[]).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])).
attacker((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))).

45. By 44, the attacker may know (ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])).
By 30, the attacker may know sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]).
Using the function 2-tuple the attacker may obtain ((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])).
attacker(((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[]))).

46. The message (B[],A[],K_11711) that may be sent on channel ch_11710 by 4 may be received at input {30}.
The message ((CreateSessionRequest,pub(skB[]),Nc_11708),sign(h((CreateSessionRequest,pub(skB[]),Nc_11708)),skB[])) that the attacker may have by 16 may be received at input {35}.
The message ((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[])),sign(h((ActivateSessionRequest,pub(skB[]),Login(skB[]),Passwd(skB[]))),skB[])) that the attacker may have by 45 may be received at input {41}.
So event endSrv(B[],A[],(Login(skB[]),Passwd(skB[]))) may be executed at {44}.
end(endSrv(B[],A[],(Login(skB[]),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_11723 at {6} in copy a_11718

new ch creating ch_11912 at {6} in copy a_11717

new ch creating ch_11913 at {6} in copy a_11714

new ch creating ch_11914 at {6} in copy a_11712

in(c, (B,a)) at {7} in copy a_11712

new K creating K_11719 at {12} in copy a_11712

out(ch_11914, (B,a,K_11719)) at {13} in copy a_11712 received at {30} in copy a_11712

out(c, K_11719) at {15} in copy a_11712

new Nc creating Nc_12090 at {16} in copy a_11712

out(c, (senc((CreateSessionRequest,pub(skB),Nc_12090),K_11719),sign(h((CreateSessionRequest,pub(skB),Nc_12090)),skB))) at {18} in copy a_11712

in(c, (senc((CreateSessionResponse,pub(sk(a)),a_11713),K_11719),sign(h((CreateSessionResponse,pub(sk(a)),a_11713)),sk(a)))) at {19} in copy a_11712

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {23} in copy a_11712

out(c, (senc((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB)),K_11719),sign(h((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB))),skB))) at {25} in copy a_11712

in(c, (B,a)) at {7} in copy a_11714

new K creating K_11720 at {12} in copy a_11714

out(ch_11913, (B,a,K_11720)) at {13} in copy a_11714 received at {30} in copy a_11714

out(c, K_11720) at {15} in copy a_11714

new Nc creating Nc_12309 at {16} in copy a_11714

out(c, (senc((CreateSessionRequest,pub(skB),Nc_12309),K_11720),sign(h((CreateSessionRequest,pub(skB),Nc_12309)),skB))) at {18} in copy a_11714

in(c, (senc((CreateSessionResponse,pub(sk(a)),a_11715),K_11720),sign(h((CreateSessionResponse,pub(sk(a)),a_11715)),sk(a)))) at {19} in copy a_11714

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {23} in copy a_11714

out(c, (senc((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB)),K_11720),sign(h((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB))),skB))) at {25} in copy a_11714

in(c, (B,a_11716)) at {7} in copy a_11717

new K creating K_11722 at {12} in copy a_11717

out(ch_11912, (B,a_11716,K_11722)) at {13} in copy a_11717 received at {30} in copy a_11717

out(c, K_11722) at {15} in copy a_11717

new Nc creating Nc_11721 at {16} in copy a_11717

out(c, (senc((CreateSessionRequest,pub(skB),Nc_11721),K_11722),sign(h((CreateSessionRequest,pub(skB),Nc_11721)),skB))) at {18} in copy a_11717

in(c, (B,A)) at {7} in copy a_11718

new K creating K_11724 at {12} in copy a_11718

out(ch_11723, (B,A,K_11724)) at {13} in copy a_11718 received at {30} in copy a_11718

out(c, CreateSessionRequest) at {15} in copy a_11718

new Nc creating Nc_12721 at {16} in copy a_11718

out(c, (senc((CreateSessionRequest,pub(skB),Nc_12721),K_11724),sign(h((CreateSessionRequest,pub(skB),Nc_12721)),skB))) at {18} in copy a_11718

in(c, ((CreateSessionRequest,pub(skB),Nc_11721),sign(h((CreateSessionRequest,pub(skB),Nc_11721)),skB))) at {35} in copy a_11718

new Ns_68 creating Ns_12750 at {38} in copy a_11718

out(c, ((CreateSessionResponse,pub(skA),Ns_12750),sign(h((CreateSessionResponse,pub(skA),Ns_12750)),skA))) at {40} in copy a_11718

in(c, ((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB)),sign(h((ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB))),skB))) at {41} in copy a_11718

event(endSrv(B,A,(Login(skB),Passwd(skB)))) at {44} in copy a_11718

The event endSrv(B,A,(Login(skB),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X,Y,N)) ==> event(beginCli(X,Y,N)) is false.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 136 rules. 108 rules in the queue.
400 rules inserted. The rule base contains 192 rules. 80 rules in the queue.
600 rules inserted. The rule base contains 262 rules. 50 rules in the queue.
800 rules inserted. The rule base contains 308 rules. 4 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
K_21089 = K[Sess = Sess_21078,Cli = A[],!1 = @sid_21080]

1. The attacker has some term Sess_21078.
attacker(Sess_21078).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_21078.
Using the function 2-tuple the attacker may obtain (A[],Sess_21078).
attacker((A[],Sess_21078)).

4. The message (A[],Sess_21078) that the attacker may have by 3 may be received at input {7}.
We have Sess_21078 <> B[] & Sess_21078 <> A[].
So the message K_21089 may be sent to the attacker at output {15}.
attacker(K_21089).

5. By 1, the attacker may know Sess_21078.
Using the function sk the attacker may obtain sk(Sess_21078).
attacker(sk(Sess_21078)).

6. The attacker has some term Ns_21079.
attacker(Ns_21079).

7. By 5, the attacker may know sk(Sess_21078).
Using the function pub the attacker may obtain pub(sk(Sess_21078)).
attacker(pub(sk(Sess_21078))).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(sk(Sess_21078)).
By 6, the attacker may know Ns_21079.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079).
attacker((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)).

10. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)).
attacker(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079))).

11. By 10, the attacker may know h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)).
By 5, the attacker may know sk(Sess_21078).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078))).

12. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079).
By 4, the attacker may know K_21089.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089).
attacker(senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089)).

13. By 12, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089).
By 11, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089),sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089),sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078)))).

14. The message (A[],Sess_21078) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079),K_21089),sign(h((CreateSessionResponse,pub(sk(Sess_21078)),Ns_21079)),sk(Sess_21078))) that the attacker may have by 13 may be received at input {19}.
We have Sess_21078 <> B[] & Sess_21078 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

15. By 14, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089)).

16. By 15, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_21089).
By 4, the attacker may know K_21089.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_21189 at {6} in copy a_21091

in(c, (A,a_21090)) at {7} in copy a_21091

new K creating K_21093 at {12} in copy a_21091

out(ch_21189, (A,a_21090,K_21093)) at {13} in copy a_21091 received at {30} in copy a_21091

out(c, K_21093) at {15} in copy a_21091

new Nc creating Nc_21365 at {16} in copy a_21091

out(c, (senc((CreateSessionRequest,pub(skA),Nc_21365),K_21093),sign(h((CreateSessionRequest,pub(skA),Nc_21365)),skA))) at {18} in copy a_21091

in(c, (senc((CreateSessionResponse,pub(sk(a_21090)),a_21092),K_21093),sign(h((CreateSessionResponse,pub(sk(a_21090)),a_21092)),sk(a_21090)))) at {19} in copy a_21091

event(beginCli(A,a_21090,(Login(skA),Passwd(skA)))) at {23} in copy a_21091

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_21093),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_21091

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 136 rules. 108 rules in the queue.
400 rules inserted. The rule base contains 192 rules. 80 rules in the queue.
600 rules inserted. The rule base contains 262 rules. 50 rules in the queue.
800 rules inserted. The rule base contains 308 rules. 4 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
K_29731 = K[Sess = Sess_29720,Cli = A[],!1 = @sid_29722]

1. The attacker has some term Sess_29720.
attacker(Sess_29720).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_29720.
Using the function 2-tuple the attacker may obtain (A[],Sess_29720).
attacker((A[],Sess_29720)).

4. The message (A[],Sess_29720) that the attacker may have by 3 may be received at input {7}.
We have Sess_29720 <> B[] & Sess_29720 <> A[].
So the message K_29731 may be sent to the attacker at output {15}.
attacker(K_29731).

5. By 1, the attacker may know Sess_29720.
Using the function sk the attacker may obtain sk(Sess_29720).
attacker(sk(Sess_29720)).

6. The attacker has some term Ns_29721.
attacker(Ns_29721).

7. By 5, the attacker may know sk(Sess_29720).
Using the function pub the attacker may obtain pub(sk(Sess_29720)).
attacker(pub(sk(Sess_29720))).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(sk(Sess_29720)).
By 6, the attacker may know Ns_29721.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721).
attacker((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)).

10. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)).
attacker(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721))).

11. By 10, the attacker may know h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)).
By 5, the attacker may know sk(Sess_29720).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720))).

12. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721).
By 4, the attacker may know K_29731.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731).
attacker(senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731)).

13. By 12, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731).
By 11, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731),sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731),sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720)))).

14. The message (A[],Sess_29720) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721),K_29731),sign(h((CreateSessionResponse,pub(sk(Sess_29720)),Ns_29721)),sk(Sess_29720))) that the attacker may have by 13 may be received at input {19}.
We have Sess_29720 <> B[] & Sess_29720 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

15. By 14, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731)).

16. By 15, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_29731).
By 4, the attacker may know K_29731.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_29831 at {6} in copy a_29733

in(c, (A,a_29732)) at {7} in copy a_29733

new K creating K_29735 at {12} in copy a_29733

out(ch_29831, (A,a_29732,K_29735)) at {13} in copy a_29733 received at {30} in copy a_29733

out(c, K_29735) at {15} in copy a_29733

new Nc creating Nc_30007 at {16} in copy a_29733

out(c, (senc((CreateSessionRequest,pub(skA),Nc_30007),K_29735),sign(h((CreateSessionRequest,pub(skA),Nc_30007)),skA))) at {18} in copy a_29733

in(c, (senc((CreateSessionResponse,pub(sk(a_29732)),a_29734),K_29735),sign(h((CreateSessionResponse,pub(sk(a_29732)),a_29734)),sk(a_29732)))) at {19} in copy a_29733

event(beginCli(A,a_29732,(Login(skA),Passwd(skA)))) at {23} in copy a_29733

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_29735),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_29733

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
