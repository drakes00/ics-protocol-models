File "opcua_session_sign_encrypt_sign_encrypt.pv", line 108, character 41 - line 108, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Sess = A) || (Sess = B)) then
            {31}event endCli(Sess,Cli,Ns)
) | (
    {32}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {33}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {34}let pkCli_63: bitstring = pub(skCli_62) in
    {35}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {36}let pkSess_65: bitstring = pub(skSess_64) in
    {37}in(c, (em1: bitstring,sigM1: bitstring));
    {38}new Nc_66: bitstring;
    {39}let m1_67: bitstring = sdec(em1,K_61) in
    {40}if (verify(h(m1_67),sigM1,pkCli_63) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
        {42}new Ns_69: bitstring;
        {43}event beginSrv(Sess_60,Cli_59,Ns_69);
        {44}let m2_70: bitstring = (CreateSessionResponse,pkSess_65,Nc_68,Ns_69) in
        {45}out(c, (senc(m2_70,K_61),sign(h(m2_70),skSess_64)));
        {46}in(c, (em3: bitstring,sigM3: bitstring));
        {47}let m3_71: bitstring = sdec(em3,K_61) in
        {48}if (verify(h(m3_71),sigM3,pkCli_63) <> true) then
            0
        else
            {49}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_71 in
            {50}new Ns2_72: bitstring;
            {51}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {52}out(c, (senc(m4_73,K_61),sign(h(m4_73),skSess_64)));
            {53}if ((Cli_59 = A) || (Cli_59 = B)) then
            {54}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 154 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 304 rules. 124 rules in the queue.
600 rules inserted. The rule base contains 402 rules. 128 rules in the queue.
800 rules inserted. The rule base contains 494 rules. 33 rules in the queue.
1000 rules inserted. The rule base contains 570 rules. 222 rules in the queue.
1200 rules inserted. The rule base contains 639 rules. 227 rules in the queue.
1400 rules inserted. The rule base contains 671 rules. 208 rules in the queue.
1600 rules inserted. The rule base contains 745 rules. 127 rules in the queue.
1800 rules inserted. The rule base contains 806 rules. 26 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: begin(beginSrv(A[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_21121])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_21121]),K[Sess = A[],Cli = B[],!1 = @sid_21121]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_21121],Sess_60 = A[],Cli_59 = B[],!1 = @sid_21121])) -> end(endCli(A[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_21121])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_21121]),K[Sess = A[],Cli = B[],!1 = @sid_21121]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_21121],Sess_60 = A[],Cli_59 = B[],!1 = @sid_21121]))
goal reachable: begin(beginSrv(B[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_21122])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_21122]),K[Sess = B[],Cli = A[],!1 = @sid_21122]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_21122],Sess_60 = B[],Cli_59 = A[],!1 = @sid_21122])) -> end(endCli(B[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_21122])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_21122]),K[Sess = B[],Cli = A[],!1 = @sid_21122]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_21122],Sess_60 = B[],Cli_59 = A[],!1 = @sid_21122]))
goal reachable: begin(beginSrv(B[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_21123])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_21123]),K[Sess = B[],Cli = B[],!1 = @sid_21123]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_21123],Sess_60 = B[],Cli_59 = B[],!1 = @sid_21123])) -> end(endCli(B[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_21123])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_21123]),K[Sess = B[],Cli = B[],!1 = @sid_21123]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_21123],Sess_60 = B[],Cli_59 = B[],!1 = @sid_21123]))
goal reachable: begin(beginSrv(A[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_21124])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_21124]),K[Sess = A[],Cli = A[],!1 = @sid_21124]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_21124],Sess_60 = A[],Cli_59 = A[],!1 = @sid_21124])) -> end(endCli(A[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_21124])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_21124]),K[Sess = A[],Cli = A[],!1 = @sid_21124]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_21124],Sess_60 = A[],Cli_59 = A[],!1 = @sid_21124]))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_21128,Y_21129,N_21130)) ==> event(beginCli(X_21128,Y_21129,N_21130))
Completing...
200 rules inserted. The rule base contains 154 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 304 rules. 135 rules in the queue.
600 rules inserted. The rule base contains 406 rules. 158 rules in the queue.
800 rules inserted. The rule base contains 476 rules. 56 rules in the queue.
1000 rules inserted. The rule base contains 612 rules. 180 rules in the queue.
1200 rules inserted. The rule base contains 774 rules. 289 rules in the queue.
1400 rules inserted. The rule base contains 884 rules. 337 rules in the queue.
1600 rules inserted. The rule base contains 1015 rules. 331 rules in the queue.
1800 rules inserted. The rule base contains 1148 rules. 332 rules in the queue.
2000 rules inserted. The rule base contains 1279 rules. 178 rules in the queue.
2200 rules inserted. The rule base contains 1382 rules. 50 rules in the queue.
Starting query event(endSrv(X_21128,Y_21129,N_21130)) ==> event(beginCli(X_21128,Y_21129,N_21130))
goal reachable: begin(beginCli(B[],A[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],A[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],B[],(Login(skA[]),Passwd(skA[]))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
RESULT event(endSrv(X_21128,Y_21129,N_21130)) ==> event(beginCli(X_21128,Y_21129,N_21130)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 126 rules in the queue.
600 rules inserted. The rule base contains 373 rules. 91 rules in the queue.
800 rules inserted. The rule base contains 440 rules. 97 rules in the queue.
1000 rules inserted. The rule base contains 542 rules. 163 rules in the queue.
1200 rules inserted. The rule base contains 672 rules. 84 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
K_58282 = K[Sess = Sess_58271,Cli = A[],!1 = @sid_58272]
Nc_58283 = Nc[Sess = Sess_58271,Cli = A[],!1 = @sid_58272]

1. The attacker has some term Sess_58271.
attacker(Sess_58271).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_58271.
Using the function 2-tuple the attacker may obtain (A[],Sess_58271).
attacker((A[],Sess_58271)).

4. The message (A[],Sess_58271) that the attacker may have by 3 may be received at input {7}.
We have Sess_58271 <> B[] & Sess_58271 <> A[].
So the message K_58282 may be sent to the attacker at output {15}.
attacker(K_58282).

5. By 1, the attacker may know Sess_58271.
Using the function sk the attacker may obtain sk(Sess_58271).
attacker(sk(Sess_58271)).

6. The attacker has some term Ns_58273.
attacker(Ns_58273).

7. The message (A[],Sess_58271) that the attacker may have by 3 may be received at input {7}.
We have Sess_58271 <> B[] & Sess_58271 <> A[].
So the message (senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282),sign(h((CreateSessionRequest,pub(skA[]),Nc_58283)),skA[])) may be sent to the attacker at output {18}.
attacker((senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282),sign(h((CreateSessionRequest,pub(skA[]),Nc_58283)),skA[]))).

8. By 7, the attacker may know (senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282),sign(h((CreateSessionRequest,pub(skA[]),Nc_58283)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282).
attacker(senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282)).

9. By 8, the attacker may know senc((CreateSessionRequest,pub(skA[]),Nc_58283),K_58282).
By 4, the attacker may know K_58282.
Using the function sdec the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_58283).
attacker((CreateSessionRequest,pub(skA[]),Nc_58283)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_58283).
Using the function 3-proj-3-tuple the attacker may obtain Nc_58283.
attacker(Nc_58283).

11. By 5, the attacker may know sk(Sess_58271).
Using the function pub the attacker may obtain pub(sk(Sess_58271)).
attacker(pub(sk(Sess_58271))).

12. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

13. By 12, the attacker may know CreateSessionResponse.
By 11, the attacker may know pub(sk(Sess_58271)).
By 10, the attacker may know Nc_58283.
By 6, the attacker may know Ns_58273.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273).
attacker((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)).

14. By 13, the attacker may know (CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)).
attacker(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273))).

15. By 14, the attacker may know h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)).
By 5, the attacker may know sk(Sess_58271).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271))).

16. By 13, the attacker may know (CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273).
By 4, the attacker may know K_58282.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282).
attacker(senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282)).

17. By 16, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282),sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282),sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271)))).

18. The message (A[],Sess_58271) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273),K_58282),sign(h((CreateSessionResponse,pub(sk(Sess_58271)),Nc_58283,Ns_58273)),sk(Sess_58271))) that the attacker may have by 17 may be received at input {19}.
We have Sess_58271 <> B[] & Sess_58271 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

19. By 18, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282)).

20. By 19, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_58282).
By 4, the attacker may know K_58282.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

21. By 20, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_58388 at {6} in copy a_58284

in(c, (A,a)) at {7} in copy a_58284

new K creating K_58287 at {12} in copy a_58284

out(ch_58388, (A,a,K_58287)) at {13} in copy a_58284 received at {32} in copy a_58284

out(c, K_58287) at {15} in copy a_58284

new Nc creating Nc_58286 at {16} in copy a_58284

out(c, (senc((CreateSessionRequest,pub(skA),Nc_58286),K_58287),sign(h((CreateSessionRequest,pub(skA),Nc_58286)),skA))) at {18} in copy a_58284

in(c, (senc((CreateSessionResponse,pub(sk(a)),Nc_58286,a_58285),K_58287),sign(h((CreateSessionResponse,pub(sk(a)),Nc_58286,a_58285)),sk(a)))) at {19} in copy a_58284

event(beginCli(A,a,(Login(skA),Passwd(skA)))) at {23} in copy a_58284

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_58287),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_58284

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 126 rules in the queue.
600 rules inserted. The rule base contains 373 rules. 91 rules in the queue.
800 rules inserted. The rule base contains 440 rules. 97 rules in the queue.
1000 rules inserted. The rule base contains 542 rules. 163 rules in the queue.
1200 rules inserted. The rule base contains 672 rules. 84 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
K_70783 = K[Sess = Sess_70772,Cli = A[],!1 = @sid_70773]
Nc_70784 = Nc[Sess = Sess_70772,Cli = A[],!1 = @sid_70773]

1. The attacker has some term Sess_70772.
attacker(Sess_70772).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_70772.
Using the function 2-tuple the attacker may obtain (A[],Sess_70772).
attacker((A[],Sess_70772)).

4. The message (A[],Sess_70772) that the attacker may have by 3 may be received at input {7}.
We have Sess_70772 <> B[] & Sess_70772 <> A[].
So the message K_70783 may be sent to the attacker at output {15}.
attacker(K_70783).

5. By 1, the attacker may know Sess_70772.
Using the function sk the attacker may obtain sk(Sess_70772).
attacker(sk(Sess_70772)).

6. The attacker has some term Ns_70774.
attacker(Ns_70774).

7. The message (A[],Sess_70772) that the attacker may have by 3 may be received at input {7}.
We have Sess_70772 <> B[] & Sess_70772 <> A[].
So the message (senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783),sign(h((CreateSessionRequest,pub(skA[]),Nc_70784)),skA[])) may be sent to the attacker at output {18}.
attacker((senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783),sign(h((CreateSessionRequest,pub(skA[]),Nc_70784)),skA[]))).

8. By 7, the attacker may know (senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783),sign(h((CreateSessionRequest,pub(skA[]),Nc_70784)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783).
attacker(senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783)).

9. By 8, the attacker may know senc((CreateSessionRequest,pub(skA[]),Nc_70784),K_70783).
By 4, the attacker may know K_70783.
Using the function sdec the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_70784).
attacker((CreateSessionRequest,pub(skA[]),Nc_70784)).

10. By 9, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_70784).
Using the function 3-proj-3-tuple the attacker may obtain Nc_70784.
attacker(Nc_70784).

11. By 5, the attacker may know sk(Sess_70772).
Using the function pub the attacker may obtain pub(sk(Sess_70772)).
attacker(pub(sk(Sess_70772))).

12. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

13. By 12, the attacker may know CreateSessionResponse.
By 11, the attacker may know pub(sk(Sess_70772)).
By 10, the attacker may know Nc_70784.
By 6, the attacker may know Ns_70774.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774).
attacker((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)).

14. By 13, the attacker may know (CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)).
attacker(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774))).

15. By 14, the attacker may know h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)).
By 5, the attacker may know sk(Sess_70772).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772))).

16. By 13, the attacker may know (CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774).
By 4, the attacker may know K_70783.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783).
attacker(senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783)).

17. By 16, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783).
By 15, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783),sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783),sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772)))).

18. The message (A[],Sess_70772) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774),K_70783),sign(h((CreateSessionResponse,pub(sk(Sess_70772)),Nc_70784,Ns_70774)),sk(Sess_70772))) that the attacker may have by 17 may be received at input {19}.
We have Sess_70772 <> B[] & Sess_70772 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

19. By 18, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783)).

20. By 19, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_70783).
By 4, the attacker may know K_70783.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

21. By 20, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_70891 at {6} in copy a_70786

in(c, (A,a_70785)) at {7} in copy a_70786

new K creating K_70789 at {12} in copy a_70786

out(ch_70891, (A,a_70785,K_70789)) at {13} in copy a_70786 received at {32} in copy a_70786

out(c, K_70789) at {15} in copy a_70786

new Nc creating Nc_70788 at {16} in copy a_70786

out(c, (senc((CreateSessionRequest,pub(skA),Nc_70788),K_70789),sign(h((CreateSessionRequest,pub(skA),Nc_70788)),skA))) at {18} in copy a_70786

in(c, (senc((CreateSessionResponse,pub(sk(a_70785)),Nc_70788,a_70787),K_70789),sign(h((CreateSessionResponse,pub(sk(a_70785)),Nc_70788,a_70787)),sk(a_70785)))) at {19} in copy a_70786

event(beginCli(A,a_70785,(Login(skA),Passwd(skA)))) at {23} in copy a_70786

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_70789),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_70786

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
