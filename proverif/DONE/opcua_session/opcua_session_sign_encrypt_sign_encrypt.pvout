File "opcua_session_sign_encrypt_sign_encrypt.pv", line 108, character 41 - line 108, character 43:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
    {19}in(c, (em2: bitstring,sigM2: bitstring));
    {20}let m2: bitstring = sdec(em2,K) in
    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {22}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {23}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {24}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {25}out(c, (senc(m3,K),sign(h(m3),skCli)));
        {26}in(c, (em4: bitstring,sigM4: bitstring));
        {27}let m4: bitstring = sdec(em4,K) in
        {28}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {29}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            {30}if ((Sess = A) || (Sess = B)) then
            {31}event endCli(Sess,Cli,Ns)
) | (
    {32}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {33}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {34}let pkCli_63: bitstring = pub(skCli_62) in
    {35}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {36}let pkSess_65: bitstring = pub(skSess_64) in
    {37}in(c, (em1: bitstring,sigM1: bitstring));
    {38}new Nc_66: bitstring;
    {39}let m1_67: bitstring = sdec(em1,K_61) in
    {40}if (verify(h(m1_67),sigM1,pkCli_63) <> true) then
        0
    else
        {41}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
        {42}new Ns_69: bitstring;
        {43}event beginSrv(Sess_60,Cli_59,Ns_69);
        {44}let m2_70: bitstring = (CreateSessionResponse,pkSess_65,Ns_69) in
        {45}out(c, (senc(m2_70,K_61),sign(h(m2_70),skSess_64)));
        {46}in(c, (em3: bitstring,sigM3: bitstring));
        {47}let m3_71: bitstring = sdec(em3,K_61) in
        {48}if (verify(h(m3_71),sigM3,pkCli_63) <> true) then
            0
        else
            {49}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_71 in
            {50}new Ns2_72: bitstring;
            {51}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
            {52}out(c, (senc(m4_73,K_61),sign(h(m4_73),skSess_64)));
            {53}if ((Cli_59 = A) || (Cli_59 = B)) then
            {54}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 158 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 304 rules. 130 rules in the queue.
600 rules inserted. The rule base contains 413 rules. 137 rules in the queue.
800 rules inserted. The rule base contains 491 rules. 30 rules in the queue.
1000 rules inserted. The rule base contains 524 rules. 224 rules in the queue.
1200 rules inserted. The rule base contains 614 rules. 237 rules in the queue.
1400 rules inserted. The rule base contains 731 rules. 159 rules in the queue.
1600 rules inserted. The rule base contains 814 rules. 38 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: begin(beginSrv(A[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_19461])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_19461]),K[Sess = A[],Cli = B[],!1 = @sid_19461]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_19461],Sess_60 = A[],Cli_59 = B[],!1 = @sid_19461])) -> end(endCli(A[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_19461])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = A[],Cli = B[],!1 = @sid_19461]),K[Sess = A[],Cli = B[],!1 = @sid_19461]),K_61 = K[Sess = A[],Cli = B[],!1 = @sid_19461],Sess_60 = A[],Cli_59 = B[],!1 = @sid_19461]))
goal reachable: begin(beginSrv(B[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_19462])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_19462]),K[Sess = B[],Cli = A[],!1 = @sid_19462]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_19462],Sess_60 = B[],Cli_59 = A[],!1 = @sid_19462])) -> end(endCli(B[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_19462])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = B[],Cli = A[],!1 = @sid_19462]),K[Sess = B[],Cli = A[],!1 = @sid_19462]),K_61 = K[Sess = B[],Cli = A[],!1 = @sid_19462],Sess_60 = B[],Cli_59 = A[],!1 = @sid_19462]))
goal reachable: begin(beginSrv(B[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_19463])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_19463]),K[Sess = B[],Cli = B[],!1 = @sid_19463]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_19463],Sess_60 = B[],Cli_59 = B[],!1 = @sid_19463])) -> end(endCli(B[],B[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_19463])),skB[]),em1 = senc((CreateSessionRequest,pub(skB[]),Nc[Sess = B[],Cli = B[],!1 = @sid_19463]),K[Sess = B[],Cli = B[],!1 = @sid_19463]),K_61 = K[Sess = B[],Cli = B[],!1 = @sid_19463],Sess_60 = B[],Cli_59 = B[],!1 = @sid_19463]))
goal reachable: begin(beginSrv(A[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_19464])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_19464]),K[Sess = A[],Cli = A[],!1 = @sid_19464]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_19464],Sess_60 = A[],Cli_59 = A[],!1 = @sid_19464])) -> end(endCli(A[],A[],Ns_69[sigM1 = sign(h((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_19464])),skA[]),em1 = senc((CreateSessionRequest,pub(skA[]),Nc[Sess = A[],Cli = A[],!1 = @sid_19464]),K[Sess = A[],Cli = A[],!1 = @sid_19464]),K_61 = K[Sess = A[],Cli = A[],!1 = @sid_19464],Sess_60 = A[],Cli_59 = A[],!1 = @sid_19464]))
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is true.
-- Query event(endSrv(X_19468,Y_19469,N_19470)) ==> event(beginCli(X_19468,Y_19469,N_19470))
Completing...
200 rules inserted. The rule base contains 154 rules. 94 rules in the queue.
400 rules inserted. The rule base contains 304 rules. 139 rules in the queue.
600 rules inserted. The rule base contains 412 rules. 158 rules in the queue.
800 rules inserted. The rule base contains 472 rules. 60 rules in the queue.
1000 rules inserted. The rule base contains 616 rules. 197 rules in the queue.
1200 rules inserted. The rule base contains 759 rules. 340 rules in the queue.
1400 rules inserted. The rule base contains 897 rules. 364 rules in the queue.
1600 rules inserted. The rule base contains 1043 rules. 369 rules in the queue.
1800 rules inserted. The rule base contains 1154 rules. 275 rules in the queue.
2000 rules inserted. The rule base contains 1265 rules. 175 rules in the queue.
2200 rules inserted. The rule base contains 1381 rules. 51 rules in the queue.
Starting query event(endSrv(X_19468,Y_19469,N_19470)) ==> event(beginCli(X_19468,Y_19469,N_19470))
goal reachable: begin(beginCli(B[],A[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],A[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],B[],(Login(skA[]),Passwd(skA[]))))
goal reachable: begin(beginCli(B[],B[],(Login(skB[]),Passwd(skB[])))) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
goal reachable: begin(beginCli(A[],A[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
RESULT event(endSrv(X_19468,Y_19469,N_19470)) ==> event(beginCli(X_19468,Y_19469,N_19470)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 130 rules in the queue.
600 rules inserted. The rule base contains 372 rules. 92 rules in the queue.
800 rules inserted. The rule base contains 438 rules. 95 rules in the queue.
1000 rules inserted. The rule base contains 559 rules. 166 rules in the queue.
1200 rules inserted. The rule base contains 675 rules. 82 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
K_56318 = K[Sess = Sess_56307,Cli = A[],!1 = @sid_56309]

1. The attacker has some term Sess_56307.
attacker(Sess_56307).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_56307.
Using the function 2-tuple the attacker may obtain (A[],Sess_56307).
attacker((A[],Sess_56307)).

4. The message (A[],Sess_56307) that the attacker may have by 3 may be received at input {7}.
We have Sess_56307 <> B[] & Sess_56307 <> A[].
So the message K_56318 may be sent to the attacker at output {15}.
attacker(K_56318).

5. By 1, the attacker may know Sess_56307.
Using the function sk the attacker may obtain sk(Sess_56307).
attacker(sk(Sess_56307)).

6. The attacker has some term Ns_56308.
attacker(Ns_56308).

7. By 5, the attacker may know sk(Sess_56307).
Using the function pub the attacker may obtain pub(sk(Sess_56307)).
attacker(pub(sk(Sess_56307))).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(sk(Sess_56307)).
By 6, the attacker may know Ns_56308.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308).
attacker((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)).

10. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)).
attacker(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308))).

11. By 10, the attacker may know h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)).
By 5, the attacker may know sk(Sess_56307).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307))).

12. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308).
By 4, the attacker may know K_56318.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318).
attacker(senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318)).

13. By 12, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318).
By 11, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318),sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318),sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307)))).

14. The message (A[],Sess_56307) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308),K_56318),sign(h((CreateSessionResponse,pub(sk(Sess_56307)),Ns_56308)),sk(Sess_56307))) that the attacker may have by 13 may be received at input {19}.
We have Sess_56307 <> B[] & Sess_56307 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

15. By 14, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318)).

16. By 15, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_56318).
By 4, the attacker may know K_56318.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_56422 at {6} in copy a_56319

in(c, (A,a)) at {7} in copy a_56319

new K creating K_56321 at {12} in copy a_56319

out(ch_56422, (A,a,K_56321)) at {13} in copy a_56319 received at {32} in copy a_56319

out(c, K_56321) at {15} in copy a_56319

new Nc creating Nc_56604 at {16} in copy a_56319

out(c, (senc((CreateSessionRequest,pub(skA),Nc_56604),K_56321),sign(h((CreateSessionRequest,pub(skA),Nc_56604)),skA))) at {18} in copy a_56319

in(c, (senc((CreateSessionResponse,pub(sk(a)),a_56320),K_56321),sign(h((CreateSessionResponse,pub(sk(a)),a_56320)),sk(a)))) at {19} in copy a_56319

event(beginCli(A,a,(Login(skA),Passwd(skA)))) at {23} in copy a_56319

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_56321),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_56319

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 146 rules. 90 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 130 rules in the queue.
600 rules inserted. The rule base contains 372 rules. 92 rules in the queue.
800 rules inserted. The rule base contains 438 rules. 95 rules in the queue.
1000 rules inserted. The rule base contains 559 rules. 166 rules in the queue.
1200 rules inserted. The rule base contains 675 rules. 82 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
K_68625 = K[Sess = Sess_68614,Cli = A[],!1 = @sid_68616]

1. The attacker has some term Sess_68614.
attacker(Sess_68614).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_68614.
Using the function 2-tuple the attacker may obtain (A[],Sess_68614).
attacker((A[],Sess_68614)).

4. The message (A[],Sess_68614) that the attacker may have by 3 may be received at input {7}.
We have Sess_68614 <> B[] & Sess_68614 <> A[].
So the message K_68625 may be sent to the attacker at output {15}.
attacker(K_68625).

5. By 1, the attacker may know Sess_68614.
Using the function sk the attacker may obtain sk(Sess_68614).
attacker(sk(Sess_68614)).

6. The attacker has some term Ns_68615.
attacker(Ns_68615).

7. By 5, the attacker may know sk(Sess_68614).
Using the function pub the attacker may obtain pub(sk(Sess_68614)).
attacker(pub(sk(Sess_68614))).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(sk(Sess_68614)).
By 6, the attacker may know Ns_68615.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615).
attacker((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)).

10. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)).
attacker(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615))).

11. By 10, the attacker may know h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)).
By 5, the attacker may know sk(Sess_68614).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614))).

12. By 9, the attacker may know (CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615).
By 4, the attacker may know K_68625.
Using the function senc the attacker may obtain senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625).
attacker(senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625)).

13. By 12, the attacker may know senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625).
By 11, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614)).
Using the function 2-tuple the attacker may obtain (senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625),sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614))).
attacker((senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625),sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614)))).

14. The message (A[],Sess_68614) that the attacker may have by 3 may be received at input {7}.
The message (senc((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615),K_68625),sign(h((CreateSessionResponse,pub(sk(Sess_68614)),Ns_68615)),sk(Sess_68614))) that the attacker may have by 13 may be received at input {19}.
We have Sess_68614 <> B[] & Sess_68614 <> A[].
So the message (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {25}.
attacker((senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

15. By 14, the attacker may know (senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625).
attacker(senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625)).

16. By 15, the attacker may know senc((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),K_68625).
By 4, the attacker may know K_68625.
Using the function sdec the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

17. By 16, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_68731 at {6} in copy a_68627

in(c, (A,a_68626)) at {7} in copy a_68627

new K creating K_68629 at {12} in copy a_68627

out(ch_68731, (A,a_68626,K_68629)) at {13} in copy a_68627 received at {32} in copy a_68627

out(c, K_68629) at {15} in copy a_68627

new Nc creating Nc_68913 at {16} in copy a_68627

out(c, (senc((CreateSessionRequest,pub(skA),Nc_68913),K_68629),sign(h((CreateSessionRequest,pub(skA),Nc_68913)),skA))) at {18} in copy a_68627

in(c, (senc((CreateSessionResponse,pub(sk(a_68626)),a_68628),K_68629),sign(h((CreateSessionResponse,pub(sk(a_68626)),a_68628)),sk(a_68626)))) at {19} in copy a_68627

event(beginCli(A,a_68626,(Login(skA),Passwd(skA)))) at {23} in copy a_68627

out(c, (senc((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),K_68629),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {25} in copy a_68627

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
