File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 97, character 10 - line 97, character 13:
Warning: identifier Ns2 rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
File "opcua_session_sign_encrypt_sign_encrypt.pv", line 113, character 18 - line 113, character 20:
Warning: identifier Nc rebound
Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
(
    {5}!
    {6}in(c, (Cli: host,Sess: host));
    {7}let v_84: bool = (Cli = A) in
    (
        {8}if v_84 then
        (
            {9}let skCli: bitstring = skA in
            {10}let pkCli: bitstring = pub(skCli) in
            {11}let v_85: bool = (Sess = A) in
            (
                {12}if v_85 then
                (
                    {13}let skSess: bitstring = skA in
                    {14}let pkSess: bitstring = pub(skSess) in
                    {15}let K: bitstring = Skey(skCli,skSess) in
                    {16}new Nc: bitstring;
                    {17}let m1: bitstring = (pkCli,Nc,CreateSessionRequest) in
                    {18}out(c, (senc(m1,K),sign(h(m1),skCli)));
                    {19}in(c, (em2: bitstring,sigM2: bitstring));
                    {20}let m2: bitstring = sdec(em2,K) in
                    {21}if (verify(h(m2),sigM2,pkSess) <> true) then
                        0
                    else
                        {22}let (=pkSess,SSC: bitstring,Ns: bitstring) = m2 in
                        {23}new CSC: bitstring;
                        {24}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
                        {25}let m3: bitstring = (CSC,Login(skCli),Passwd(skCli)) in
                        {26}out(c, (senc(m3,K),sign(h(m3),skCli)));
                        {27}in(c, (em4: bitstring,sigM4: bitstring));
                        {28}new Ns2: bitstring;
                        {29}let m4: bitstring = sdec(em4,K) in
                        {30}if (verify(h(m4),sigM4,pkSess) <> true) then
                            0
                        else
                            {31}let (Ns2_86: bitstring,=ActivateSessionResponse) = m4 in
                            0
                )
                else
                    {32}let v_87: bool = (Sess = B) in
                    (
                        {33}if v_87 then
                        (
                            {34}let skSess_88: bitstring = skB in
                            {35}let pkSess_89: bitstring = pub(skSess_88) in
                            {36}let K_90: bitstring = Skey(skCli,skSess_88) in
                            {37}new Nc_91: bitstring;
                            {38}let m1_92: bitstring = (pkCli,Nc_91,CreateSessionRequest) in
                            {39}out(c, (senc(m1_92,K_90),sign(h(m1_92),skCli)));
                            {40}in(c, (em2_93: bitstring,sigM2_94: bitstring));
                            {41}let m2_95: bitstring = sdec(em2_93,K_90) in
                            {42}if (verify(h(m2_95),sigM2_94,pkSess_89) <> true) then
                                0
                            else
                                {43}let (=pkSess_89,SSC_96: bitstring,Ns_97: bitstring) = m2_95 in
                                {44}new CSC_98: bitstring;
                                {45}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
                                {46}let m3_99: bitstring = (CSC_98,Login(skCli),Passwd(skCli)) in
                                {47}out(c, (senc(m3_99,K_90),sign(h(m3_99),skCli)));
                                {48}in(c, (em4_100: bitstring,sigM4_101: bitstring));
                                {49}new Ns2_102: bitstring;
                                {50}let m4_103: bitstring = sdec(em4_100,K_90) in
                                {51}if (verify(h(m4_103),sigM4_101,pkSess_89) <> true) then
                                    0
                                else
                                    {52}let (Ns2_104: bitstring,=ActivateSessionResponse) = m4_103 in
                                    0
                        )
                        else
                            {53}let skSess_105: bitstring = sk(Sess) in
                            {54}let pkSess_106: bitstring = pub(skSess_105) in
                            {55}let K_107: bitstring = Skey(skCli,skSess_105) in
                            {56}new Nc_108: bitstring;
                            {57}let m1_109: bitstring = (pkCli,Nc_108,CreateSessionRequest) in
                            {58}out(c, (senc(m1_109,K_107),sign(h(m1_109),skCli)));
                            {59}in(c, (em2_110: bitstring,sigM2_111: bitstring));
                            {60}let m2_112: bitstring = sdec(em2_110,K_107) in
                            {61}if (verify(h(m2_112),sigM2_111,pkSess_106) <> true) then
                                0
                            else
                                {62}let (=pkSess_106,SSC_113: bitstring,Ns_114: bitstring) = m2_112 in
                                {63}new CSC_115: bitstring;
                                {64}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
                                {65}let m3_116: bitstring = (CSC_115,Login(skCli),Passwd(skCli)) in
                                {66}out(c, (senc(m3_116,K_107),sign(h(m3_116),skCli)));
                                {67}in(c, (em4_117: bitstring,sigM4_118: bitstring));
                                {68}new Ns2_119: bitstring;
                                {69}let m4_120: bitstring = sdec(em4_117,K_107) in
                                {70}if (verify(h(m4_120),sigM4_118,pkSess_106) <> true) then
                                    0
                                else
                                    {71}let (Ns2_121: bitstring,=ActivateSessionResponse) = m4_120 in
                                    0
                    )
                    else
                        {72}let skSess_122: bitstring = fail-any in
                        {73}let pkSess_123: bitstring = pub(skSess_122) in
                        {74}let K_124: bitstring = Skey(skCli,skSess_122) in
                        {75}new Nc_125: bitstring;
                        {76}let m1_126: bitstring = (pkCli,Nc_125,CreateSessionRequest) in
                        {77}out(c, (senc(m1_126,K_124),sign(h(m1_126),skCli)));
                        {78}in(c, (em2_127: bitstring,sigM2_128: bitstring));
                        {79}let m2_129: bitstring = sdec(em2_127,K_124) in
                        {80}if (verify(h(m2_129),sigM2_128,pkSess_123) <> true) then
                            0
                        else
                            {81}let (=pkSess_123,SSC_130: bitstring,Ns_131: bitstring) = m2_129 in
                            {82}new CSC_132: bitstring;
                            {83}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
                            {84}let m3_133: bitstring = (CSC_132,Login(skCli),Passwd(skCli)) in
                            {85}out(c, (senc(m3_133,K_124),sign(h(m3_133),skCli)));
                            {86}in(c, (em4_134: bitstring,sigM4_135: bitstring));
                            {87}new Ns2_136: bitstring;
                            {88}let m4_137: bitstring = sdec(em4_134,K_124) in
                            {89}if (verify(h(m4_137),sigM4_135,pkSess_123) <> true) then
                                0
                            else
                                {90}let (Ns2_138: bitstring,=ActivateSessionResponse) = m4_137 in
                                0
            )
            else
                {91}let skSess_139: bitstring = fail-any in
                {92}let pkSess_140: bitstring = pub(skSess_139) in
                {93}let K_141: bitstring = Skey(skCli,skSess_139) in
                {94}new Nc_142: bitstring;
                {95}let m1_143: bitstring = (pkCli,Nc_142,CreateSessionRequest) in
                {96}out(c, (senc(m1_143,K_141),sign(h(m1_143),skCli)));
                {97}in(c, (em2_144: bitstring,sigM2_145: bitstring));
                {98}let m2_146: bitstring = sdec(em2_144,K_141) in
                {99}if (verify(h(m2_146),sigM2_145,pkSess_140) <> true) then
                    0
                else
                    {100}let (=pkSess_140,SSC_147: bitstring,Ns_148: bitstring) = m2_146 in
                    {101}new CSC_149: bitstring;
                    {102}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
                    {103}let m3_150: bitstring = (CSC_149,Login(skCli),Passwd(skCli)) in
                    {104}out(c, (senc(m3_150,K_141),sign(h(m3_150),skCli)));
                    {105}in(c, (em4_151: bitstring,sigM4_152: bitstring));
                    {106}new Ns2_153: bitstring;
                    {107}let m4_154: bitstring = sdec(em4_151,K_141) in
                    {108}if (verify(h(m4_154),sigM4_152,pkSess_140) <> true) then
                        0
                    else
                        {109}let (Ns2_155: bitstring,=ActivateSessionResponse) = m4_154 in
                        0
        )
        else
            {110}let =true = (Cli = B) in
            (
                {111}let skCli_156: bitstring = skB in
                {112}let pkCli_157: bitstring = pub(skCli_156) in
                {113}let v_158: bool = (Sess = A) in
                (
                    {114}if v_158 then
                    (
                        {115}let skSess_159: bitstring = skA in
                        {116}let pkSess_160: bitstring = pub(skSess_159) in
                        {117}let K_161: bitstring = Skey(skCli_156,skSess_159) in
                        {118}new Nc_162: bitstring;
                        {119}let m1_163: bitstring = (pkCli_157,Nc_162,CreateSessionRequest) in
                        {120}out(c, (senc(m1_163,K_161),sign(h(m1_163),skCli_156)));
                        {121}in(c, (em2_164: bitstring,sigM2_165: bitstring));
                        {122}let m2_166: bitstring = sdec(em2_164,K_161) in
                        {123}if (verify(h(m2_166),sigM2_165,pkSess_160) <> true) then
                            0
                        else
                            {124}let (=pkSess_160,SSC_167: bitstring,Ns_168: bitstring) = m2_166 in
                            {125}new CSC_169: bitstring;
                            {126}event beginCli(Cli,Sess,(Login(skCli_156),Passwd(skCli_156)));
                            {127}let m3_170: bitstring = (CSC_169,Login(skCli_156),Passwd(skCli_156)) in
                            {128}out(c, (senc(m3_170,K_161),sign(h(m3_170),skCli_156)));
                            {129}in(c, (em4_171: bitstring,sigM4_172: bitstring));
                            {130}new Ns2_173: bitstring;
                            {131}let m4_174: bitstring = sdec(em4_171,K_161) in
                            {132}if (verify(h(m4_174),sigM4_172,pkSess_160) <> true) then
                                0
                            else
                                {133}let (Ns2_175: bitstring,=ActivateSessionResponse) = m4_174 in
                                0
                    )
                    else
                        {134}let v_176: bool = (Sess = B) in
                        (
                            {135}if v_176 then
                            (
                                {136}let skSess_177: bitstring = skB in
                                {137}let pkSess_178: bitstring = pub(skSess_177) in
                                {138}let K_179: bitstring = Skey(skCli_156,skSess_177) in
                                {139}new Nc_180: bitstring;
                                {140}let m1_181: bitstring = (pkCli_157,Nc_180,CreateSessionRequest) in
                                {141}out(c, (senc(m1_181,K_179),sign(h(m1_181),skCli_156)));
                                {142}in(c, (em2_182: bitstring,sigM2_183: bitstring));
                                {143}let m2_184: bitstring = sdec(em2_182,K_179) in
                                {144}if (verify(h(m2_184),sigM2_183,pkSess_178) <> true) then
                                    0
                                else
                                    {145}let (=pkSess_178,SSC_185: bitstring,Ns_186: bitstring) = m2_184 in
                                    {146}new CSC_187: bitstring;
                                    {147}event beginCli(Cli,Sess,(Login(skCli_156),Passwd(skCli_156)));
                                    {148}let m3_188: bitstring = (CSC_187,Login(skCli_156),Passwd(skCli_156)) in
                                    {149}out(c, (senc(m3_188,K_179),sign(h(m3_188),skCli_156)));
                                    {150}in(c, (em4_189: bitstring,sigM4_190: bitstring));
                                    {151}new Ns2_191: bitstring;
                                    {152}let m4_192: bitstring = sdec(em4_189,K_179) in
                                    {153}if (verify(h(m4_192),sigM4_190,pkSess_178) <> true) then
                                        0
                                    else
                                        {154}let (Ns2_193: bitstring,=ActivateSessionResponse) = m4_192 in
                                        0
                            )
                            else
                                {155}let skSess_194: bitstring = sk(Sess) in
                                {156}let pkSess_195: bitstring = pub(skSess_194) in
                                {157}let K_196: bitstring = Skey(skCli_156,skSess_194) in
                                {158}new Nc_197: bitstring;
                                {159}let m1_198: bitstring = (pkCli_157,Nc_197,CreateSessionRequest) in
                                {160}out(c, (senc(m1_198,K_196),sign(h(m1_198),skCli_156)));
                                {161}in(c, (em2_199: bitstring,sigM2_200: bitstring));
                                {162}let m2_201: bitstring = sdec(em2_199,K_196) in
                                {163}if (verify(h(m2_201),sigM2_200,pkSess_195) <> true) then
                                    0
                                else
                                    {164}let (=pkSess_195,SSC_202: bitstring,Ns_203: bitstring) = m2_201 in
                                    {165}new CSC_204: bitstring;
                                    {166}event beginCli(Cli,Sess,(Login(skCli_156),Passwd(skCli_156)));
                                    {167}let m3_205: bitstring = (CSC_204,Login(skCli_156),Passwd(skCli_156)) in
                                    {168}out(c, (senc(m3_205,K_196),sign(h(m3_205),skCli_156)));
                                    {169}in(c, (em4_206: bitstring,sigM4_207: bitstring));
                                    {170}new Ns2_208: bitstring;
                                    {171}let m4_209: bitstring = sdec(em4_206,K_196) in
                                    {172}if (verify(h(m4_209),sigM4_207,pkSess_195) <> true) then
                                        0
                                    else
                                        {173}let (Ns2_210: bitstring,=ActivateSessionResponse) = m4_209 in
                                        0
                        )
                        else
                            {174}let skSess_211: bitstring = fail-any in
                            {175}let pkSess_212: bitstring = pub(skSess_211) in
                            {176}let K_213: bitstring = Skey(skCli_156,skSess_211) in
                            {177}new Nc_214: bitstring;
                            {178}let m1_215: bitstring = (pkCli_157,Nc_214,CreateSessionRequest) in
                            {179}out(c, (senc(m1_215,K_213),sign(h(m1_215),skCli_156)));
                            {180}in(c, (em2_216: bitstring,sigM2_217: bitstring));
                            {181}let m2_218: bitstring = sdec(em2_216,K_213) in
                            {182}if (verify(h(m2_218),sigM2_217,pkSess_212) <> true) then
                                0
                            else
                                {183}let (=pkSess_212,SSC_219: bitstring,Ns_220: bitstring) = m2_218 in
                                {184}new CSC_221: bitstring;
                                {185}event beginCli(Cli,Sess,(Login(skCli_156),Passwd(skCli_156)));
                                {186}let m3_222: bitstring = (CSC_221,Login(skCli_156),Passwd(skCli_156)) in
                                {187}out(c, (senc(m3_222,K_213),sign(h(m3_222),skCli_156)));
                                {188}in(c, (em4_223: bitstring,sigM4_224: bitstring));
                                {189}new Ns2_225: bitstring;
                                {190}let m4_226: bitstring = sdec(em4_223,K_213) in
                                {191}if (verify(h(m4_226),sigM4_224,pkSess_212) <> true) then
                                    0
                                else
                                    {192}let (Ns2_227: bitstring,=ActivateSessionResponse) = m4_226 in
                                    0
                )
                else
                    {193}let skSess_228: bitstring = fail-any in
                    {194}let pkSess_229: bitstring = pub(skSess_228) in
                    {195}let K_230: bitstring = Skey(skCli_156,skSess_228) in
                    {196}new Nc_231: bitstring;
                    {197}let m1_232: bitstring = (pkCli_157,Nc_231,CreateSessionRequest) in
                    {198}out(c, (senc(m1_232,K_230),sign(h(m1_232),skCli_156)));
                    {199}in(c, (em2_233: bitstring,sigM2_234: bitstring));
                    {200}let m2_235: bitstring = sdec(em2_233,K_230) in
                    {201}if (verify(h(m2_235),sigM2_234,pkSess_229) <> true) then
                        0
                    else
                        {202}let (=pkSess_229,SSC_236: bitstring,Ns_237: bitstring) = m2_235 in
                        {203}new CSC_238: bitstring;
                        {204}event beginCli(Cli,Sess,(Login(skCli_156),Passwd(skCli_156)));
                        {205}let m3_239: bitstring = (CSC_238,Login(skCli_156),Passwd(skCli_156)) in
                        {206}out(c, (senc(m3_239,K_230),sign(h(m3_239),skCli_156)));
                        {207}in(c, (em4_240: bitstring,sigM4_241: bitstring));
                        {208}new Ns2_242: bitstring;
                        {209}let m4_243: bitstring = sdec(em4_240,K_230) in
                        {210}if (verify(h(m4_243),sigM4_241,pkSess_229) <> true) then
                            0
                        else
                            {211}let (Ns2_244: bitstring,=ActivateSessionResponse) = m4_243 in
                            0
            )
            else
                {212}let skCli_245: bitstring = fail-any in
                {213}let pkCli_246: bitstring = pub(skCli_245) in
                {214}let v_247: bool = (Sess = A) in
                (
                    {215}if v_247 then
                    (
                        {216}let skSess_248: bitstring = skA in
                        {217}let pkSess_249: bitstring = pub(skSess_248) in
                        {218}let K_250: bitstring = Skey(skCli_245,skSess_248) in
                        {219}new Nc_251: bitstring;
                        {220}let m1_252: bitstring = (pkCli_246,Nc_251,CreateSessionRequest) in
                        {221}out(c, (senc(m1_252,K_250),sign(h(m1_252),skCli_245)));
                        {222}in(c, (em2_253: bitstring,sigM2_254: bitstring));
                        {223}let m2_255: bitstring = sdec(em2_253,K_250) in
                        {224}if (verify(h(m2_255),sigM2_254,pkSess_249) <> true) then
                            0
                        else
                            {225}let (=pkSess_249,SSC_256: bitstring,Ns_257: bitstring) = m2_255 in
                            {226}new CSC_258: bitstring;
                            {227}event beginCli(Cli,Sess,(Login(skCli_245),Passwd(skCli_245)));
                            {228}let m3_259: bitstring = (CSC_258,Login(skCli_245),Passwd(skCli_245)) in
                            {229}out(c, (senc(m3_259,K_250),sign(h(m3_259),skCli_245)));
                            {230}in(c, (em4_260: bitstring,sigM4_261: bitstring));
                            {231}new Ns2_262: bitstring;
                            {232}let m4_263: bitstring = sdec(em4_260,K_250) in
                            {233}if (verify(h(m4_263),sigM4_261,pkSess_249) <> true) then
                                0
                            else
                                {234}let (Ns2_264: bitstring,=ActivateSessionResponse) = m4_263 in
                                0
                    )
                    else
                        {235}let v_265: bool = (Sess = B) in
                        (
                            {236}if v_265 then
                            (
                                {237}let skSess_266: bitstring = skB in
                                {238}let pkSess_267: bitstring = pub(skSess_266) in
                                {239}let K_268: bitstring = Skey(skCli_245,skSess_266) in
                                {240}new Nc_269: bitstring;
                                {241}let m1_270: bitstring = (pkCli_246,Nc_269,CreateSessionRequest) in
                                {242}out(c, (senc(m1_270,K_268),sign(h(m1_270),skCli_245)));
                                {243}in(c, (em2_271: bitstring,sigM2_272: bitstring));
                                {244}let m2_273: bitstring = sdec(em2_271,K_268) in
                                {245}if (verify(h(m2_273),sigM2_272,pkSess_267) <> true) then
                                    0
                                else
                                    {246}let (=pkSess_267,SSC_274: bitstring,Ns_275: bitstring) = m2_273 in
                                    {247}new CSC_276: bitstring;
                                    {248}event beginCli(Cli,Sess,(Login(skCli_245),Passwd(skCli_245)));
                                    {249}let m3_277: bitstring = (CSC_276,Login(skCli_245),Passwd(skCli_245)) in
                                    {250}out(c, (senc(m3_277,K_268),sign(h(m3_277),skCli_245)));
                                    {251}in(c, (em4_278: bitstring,sigM4_279: bitstring));
                                    {252}new Ns2_280: bitstring;
                                    {253}let m4_281: bitstring = sdec(em4_278,K_268) in
                                    {254}if (verify(h(m4_281),sigM4_279,pkSess_267) <> true) then
                                        0
                                    else
                                        {255}let (Ns2_282: bitstring,=ActivateSessionResponse) = m4_281 in
                                        0
                            )
                            else
                                {256}let skSess_283: bitstring = sk(Sess) in
                                {257}let pkSess_284: bitstring = pub(skSess_283) in
                                {258}let K_285: bitstring = Skey(skCli_245,skSess_283) in
                                {259}new Nc_286: bitstring;
                                {260}let m1_287: bitstring = (pkCli_246,Nc_286,CreateSessionRequest) in
                                {261}out(c, (senc(m1_287,K_285),sign(h(m1_287),skCli_245)));
                                {262}in(c, (em2_288: bitstring,sigM2_289: bitstring));
                                {263}let m2_290: bitstring = sdec(em2_288,K_285) in
                                {264}if (verify(h(m2_290),sigM2_289,pkSess_284) <> true) then
                                    0
                                else
                                    {265}let (=pkSess_284,SSC_291: bitstring,Ns_292: bitstring) = m2_290 in
                                    {266}new CSC_293: bitstring;
                                    {267}event beginCli(Cli,Sess,(Login(skCli_245),Passwd(skCli_245)));
                                    {268}let m3_294: bitstring = (CSC_293,Login(skCli_245),Passwd(skCli_245)) in
                                    {269}out(c, (senc(m3_294,K_285),sign(h(m3_294),skCli_245)));
                                    {270}in(c, (em4_295: bitstring,sigM4_296: bitstring));
                                    {271}new Ns2_297: bitstring;
                                    {272}let m4_298: bitstring = sdec(em4_295,K_285) in
                                    {273}if (verify(h(m4_298),sigM4_296,pkSess_284) <> true) then
                                        0
                                    else
                                        {274}let (Ns2_299: bitstring,=ActivateSessionResponse) = m4_298 in
                                        0
                        )
                        else
                            {275}let skSess_300: bitstring = fail-any in
                            {276}let pkSess_301: bitstring = pub(skSess_300) in
                            {277}let K_302: bitstring = Skey(skCli_245,skSess_300) in
                            {278}new Nc_303: bitstring;
                            {279}let m1_304: bitstring = (pkCli_246,Nc_303,CreateSessionRequest) in
                            {280}out(c, (senc(m1_304,K_302),sign(h(m1_304),skCli_245)));
                            {281}in(c, (em2_305: bitstring,sigM2_306: bitstring));
                            {282}let m2_307: bitstring = sdec(em2_305,K_302) in
                            {283}if (verify(h(m2_307),sigM2_306,pkSess_301) <> true) then
                                0
                            else
                                {284}let (=pkSess_301,SSC_308: bitstring,Ns_309: bitstring) = m2_307 in
                                {285}new CSC_310: bitstring;
                                {286}event beginCli(Cli,Sess,(Login(skCli_245),Passwd(skCli_245)));
                                {287}let m3_311: bitstring = (CSC_310,Login(skCli_245),Passwd(skCli_245)) in
                                {288}out(c, (senc(m3_311,K_302),sign(h(m3_311),skCli_245)));
                                {289}in(c, (em4_312: bitstring,sigM4_313: bitstring));
                                {290}new Ns2_314: bitstring;
                                {291}let m4_315: bitstring = sdec(em4_312,K_302) in
                                {292}if (verify(h(m4_315),sigM4_313,pkSess_301) <> true) then
                                    0
                                else
                                    {293}let (Ns2_316: bitstring,=ActivateSessionResponse) = m4_315 in
                                    0
                )
                else
                    {294}let skSess_317: bitstring = fail-any in
                    {295}let pkSess_318: bitstring = pub(skSess_317) in
                    {296}let K_319: bitstring = Skey(skCli_245,skSess_317) in
                    {297}new Nc_320: bitstring;
                    {298}let m1_321: bitstring = (pkCli_246,Nc_320,CreateSessionRequest) in
                    {299}out(c, (senc(m1_321,K_319),sign(h(m1_321),skCli_245)));
                    {300}in(c, (em2_322: bitstring,sigM2_323: bitstring));
                    {301}let m2_324: bitstring = sdec(em2_322,K_319) in
                    {302}if (verify(h(m2_324),sigM2_323,pkSess_318) <> true) then
                        0
                    else
                        {303}let (=pkSess_318,SSC_325: bitstring,Ns_326: bitstring) = m2_324 in
                        {304}new CSC_327: bitstring;
                        {305}event beginCli(Cli,Sess,(Login(skCli_245),Passwd(skCli_245)));
                        {306}let m3_328: bitstring = (CSC_327,Login(skCli_245),Passwd(skCli_245)) in
                        {307}out(c, (senc(m3_328,K_319),sign(h(m3_328),skCli_245)));
                        {308}in(c, (em4_329: bitstring,sigM4_330: bitstring));
                        {309}new Ns2_331: bitstring;
                        {310}let m4_332: bitstring = sdec(em4_329,K_319) in
                        {311}if (verify(h(m4_332),sigM4_330,pkSess_318) <> true) then
                            0
                        else
                            {312}let (Ns2_333: bitstring,=ActivateSessionResponse) = m4_332 in
                            0
    )
    else
        {313}let skCli_334: bitstring = fail-any in
        {314}let pkCli_335: bitstring = pub(skCli_334) in
        {315}let v_336: bool = (Sess = A) in
        (
            {316}if v_336 then
            (
                {317}let skSess_337: bitstring = skA in
                {318}let pkSess_338: bitstring = pub(skSess_337) in
                {319}let K_339: bitstring = Skey(skCli_334,skSess_337) in
                {320}new Nc_340: bitstring;
                {321}let m1_341: bitstring = (pkCli_335,Nc_340,CreateSessionRequest) in
                {322}out(c, (senc(m1_341,K_339),sign(h(m1_341),skCli_334)));
                {323}in(c, (em2_342: bitstring,sigM2_343: bitstring));
                {324}let m2_344: bitstring = sdec(em2_342,K_339) in
                {325}if (verify(h(m2_344),sigM2_343,pkSess_338) <> true) then
                    0
                else
                    {326}let (=pkSess_338,SSC_345: bitstring,Ns_346: bitstring) = m2_344 in
                    {327}new CSC_347: bitstring;
                    {328}event beginCli(Cli,Sess,(Login(skCli_334),Passwd(skCli_334)));
                    {329}let m3_348: bitstring = (CSC_347,Login(skCli_334),Passwd(skCli_334)) in
                    {330}out(c, (senc(m3_348,K_339),sign(h(m3_348),skCli_334)));
                    {331}in(c, (em4_349: bitstring,sigM4_350: bitstring));
                    {332}new Ns2_351: bitstring;
                    {333}let m4_352: bitstring = sdec(em4_349,K_339) in
                    {334}if (verify(h(m4_352),sigM4_350,pkSess_338) <> true) then
                        0
                    else
                        {335}let (Ns2_353: bitstring,=ActivateSessionResponse) = m4_352 in
                        0
            )
            else
                {336}let v_354: bool = (Sess = B) in
                (
                    {337}if v_354 then
                    (
                        {338}let skSess_355: bitstring = skB in
                        {339}let pkSess_356: bitstring = pub(skSess_355) in
                        {340}let K_357: bitstring = Skey(skCli_334,skSess_355) in
                        {341}new Nc_358: bitstring;
                        {342}let m1_359: bitstring = (pkCli_335,Nc_358,CreateSessionRequest) in
                        {343}out(c, (senc(m1_359,K_357),sign(h(m1_359),skCli_334)));
                        {344}in(c, (em2_360: bitstring,sigM2_361: bitstring));
                        {345}let m2_362: bitstring = sdec(em2_360,K_357) in
                        {346}if (verify(h(m2_362),sigM2_361,pkSess_356) <> true) then
                            0
                        else
                            {347}let (=pkSess_356,SSC_363: bitstring,Ns_364: bitstring) = m2_362 in
                            {348}new CSC_365: bitstring;
                            {349}event beginCli(Cli,Sess,(Login(skCli_334),Passwd(skCli_334)));
                            {350}let m3_366: bitstring = (CSC_365,Login(skCli_334),Passwd(skCli_334)) in
                            {351}out(c, (senc(m3_366,K_357),sign(h(m3_366),skCli_334)));
                            {352}in(c, (em4_367: bitstring,sigM4_368: bitstring));
                            {353}new Ns2_369: bitstring;
                            {354}let m4_370: bitstring = sdec(em4_367,K_357) in
                            {355}if (verify(h(m4_370),sigM4_368,pkSess_356) <> true) then
                                0
                            else
                                {356}let (Ns2_371: bitstring,=ActivateSessionResponse) = m4_370 in
                                0
                    )
                    else
                        {357}let skSess_372: bitstring = sk(Sess) in
                        {358}let pkSess_373: bitstring = pub(skSess_372) in
                        {359}let K_374: bitstring = Skey(skCli_334,skSess_372) in
                        {360}new Nc_375: bitstring;
                        {361}let m1_376: bitstring = (pkCli_335,Nc_375,CreateSessionRequest) in
                        {362}out(c, (senc(m1_376,K_374),sign(h(m1_376),skCli_334)));
                        {363}in(c, (em2_377: bitstring,sigM2_378: bitstring));
                        {364}let m2_379: bitstring = sdec(em2_377,K_374) in
                        {365}if (verify(h(m2_379),sigM2_378,pkSess_373) <> true) then
                            0
                        else
                            {366}let (=pkSess_373,SSC_380: bitstring,Ns_381: bitstring) = m2_379 in
                            {367}new CSC_382: bitstring;
                            {368}event beginCli(Cli,Sess,(Login(skCli_334),Passwd(skCli_334)));
                            {369}let m3_383: bitstring = (CSC_382,Login(skCli_334),Passwd(skCli_334)) in
                            {370}out(c, (senc(m3_383,K_374),sign(h(m3_383),skCli_334)));
                            {371}in(c, (em4_384: bitstring,sigM4_385: bitstring));
                            {372}new Ns2_386: bitstring;
                            {373}let m4_387: bitstring = sdec(em4_384,K_374) in
                            {374}if (verify(h(m4_387),sigM4_385,pkSess_373) <> true) then
                                0
                            else
                                {375}let (Ns2_388: bitstring,=ActivateSessionResponse) = m4_387 in
                                0
                )
                else
                    {376}let skSess_389: bitstring = fail-any in
                    {377}let pkSess_390: bitstring = pub(skSess_389) in
                    {378}let K_391: bitstring = Skey(skCli_334,skSess_389) in
                    {379}new Nc_392: bitstring;
                    {380}let m1_393: bitstring = (pkCli_335,Nc_392,CreateSessionRequest) in
                    {381}out(c, (senc(m1_393,K_391),sign(h(m1_393),skCli_334)));
                    {382}in(c, (em2_394: bitstring,sigM2_395: bitstring));
                    {383}let m2_396: bitstring = sdec(em2_394,K_391) in
                    {384}if (verify(h(m2_396),sigM2_395,pkSess_390) <> true) then
                        0
                    else
                        {385}let (=pkSess_390,SSC_397: bitstring,Ns_398: bitstring) = m2_396 in
                        {386}new CSC_399: bitstring;
                        {387}event beginCli(Cli,Sess,(Login(skCli_334),Passwd(skCli_334)));
                        {388}let m3_400: bitstring = (CSC_399,Login(skCli_334),Passwd(skCli_334)) in
                        {389}out(c, (senc(m3_400,K_391),sign(h(m3_400),skCli_334)));
                        {390}in(c, (em4_401: bitstring,sigM4_402: bitstring));
                        {391}new Ns2_403: bitstring;
                        {392}let m4_404: bitstring = sdec(em4_401,K_391) in
                        {393}if (verify(h(m4_404),sigM4_402,pkSess_390) <> true) then
                            0
                        else
                            {394}let (Ns2_405: bitstring,=ActivateSessionResponse) = m4_404 in
                            0
        )
        else
            {395}let skSess_406: bitstring = fail-any in
            {396}let pkSess_407: bitstring = pub(skSess_406) in
            {397}let K_408: bitstring = Skey(skCli_334,skSess_406) in
            {398}new Nc_409: bitstring;
            {399}let m1_410: bitstring = (pkCli_335,Nc_409,CreateSessionRequest) in
            {400}out(c, (senc(m1_410,K_408),sign(h(m1_410),skCli_334)));
            {401}in(c, (em2_411: bitstring,sigM2_412: bitstring));
            {402}let m2_413: bitstring = sdec(em2_411,K_408) in
            {403}if (verify(h(m2_413),sigM2_412,pkSess_407) <> true) then
                0
            else
                {404}let (=pkSess_407,SSC_414: bitstring,Ns_415: bitstring) = m2_413 in
                {405}new CSC_416: bitstring;
                {406}event beginCli(Cli,Sess,(Login(skCli_334),Passwd(skCli_334)));
                {407}let m3_417: bitstring = (CSC_416,Login(skCli_334),Passwd(skCli_334)) in
                {408}out(c, (senc(m3_417,K_408),sign(h(m3_417),skCli_334)));
                {409}in(c, (em4_418: bitstring,sigM4_419: bitstring));
                {410}new Ns2_420: bitstring;
                {411}let m4_421: bitstring = sdec(em4_418,K_408) in
                {412}if (verify(h(m4_421),sigM4_419,pkSess_407) <> true) then
                    0
                else
                    {413}let (Ns2_422: bitstring,=ActivateSessionResponse) = m4_421 in
                    0
) | (
    {414}!
    {415}in(c, (Cli_423: host,Sess_424: host));
    {416}let v_425: bool = (Cli_423 = A) in
    (
        {417}if v_425 then
        (
            {418}let skCli_426: bitstring = skA in
            {419}let pkCli_427: bitstring = pub(skCli_426) in
            {420}let v_428: bool = (Sess_424 = A) in
            (
                {421}if v_428 then
                (
                    {422}let skSess_429: bitstring = skA in
                    {423}let pkSess_430: bitstring = pub(skSess_429) in
                    {424}let K_431: bitstring = Skey(skCli_426,skSess_429) in
                    {425}in(c, (em1: bitstring,sigM1: bitstring));
                    {426}new Nc_432: bitstring;
                    {427}let m1_433: bitstring = sdec(em1,K_431) in
                    {428}if (verify(h(m1_433),sigM1,pkCli_427) <> true) then
                        0
                    else
                        {429}let (=pkCli_427,Nc_434: bitstring,=CreateSessionRequest) = m1_433 in
                        {430}new SSC_435: bitstring;
                        {431}new Ns_436: bitstring;
                        {432}let m2_437: bitstring = (pkSess_430,SSC_435,Ns_436) in
                        {433}out(c, (senc(m2_437,K_431),sign(h(m2_437),skSess_429)));
                        {434}in(c, (em3: bitstring,sigM3: bitstring));
                        {435}let m3_438: bitstring = sdec(em3,K_431) in
                        {436}if (verify(h(m3_438),sigM3,pkCli_427) <> true) then
                            0
                        else
                            {437}let (CSC_439: bitstring,=Login(skCli_426),=Passwd(skCli_426)) = m3_438 in
                            {438}event endSrv(Cli_423,Sess_424,(Login(skCli_426),Passwd(skCli_426)));
                            {439}new Ns2_440: bitstring;
                            {440}let m4_441: bitstring = (Ns2_440,ActivateSessionResponse) in
                            {441}out(c, (senc(m4_441,K_431),sign(h(m4_441),skSess_429)))
                )
                else
                    {442}let =true = (Sess_424 = B) in
                    (
                        {443}let skSess_442: bitstring = skB in
                        {444}let pkSess_443: bitstring = pub(skSess_442) in
                        {445}let K_444: bitstring = Skey(skCli_426,skSess_442) in
                        {446}in(c, (em1_445: bitstring,sigM1_446: bitstring));
                        {447}new Nc_447: bitstring;
                        {448}let m1_448: bitstring = sdec(em1_445,K_444) in
                        {449}if (verify(h(m1_448),sigM1_446,pkCli_427) <> true) then
                            0
                        else
                            {450}let (=pkCli_427,Nc_449: bitstring,=CreateSessionRequest) = m1_448 in
                            {451}new SSC_450: bitstring;
                            {452}new Ns_451: bitstring;
                            {453}let m2_452: bitstring = (pkSess_443,SSC_450,Ns_451) in
                            {454}out(c, (senc(m2_452,K_444),sign(h(m2_452),skSess_442)));
                            {455}in(c, (em3_453: bitstring,sigM3_454: bitstring));
                            {456}let m3_455: bitstring = sdec(em3_453,K_444) in
                            {457}if (verify(h(m3_455),sigM3_454,pkCli_427) <> true) then
                                0
                            else
                                {458}let (CSC_456: bitstring,=Login(skCli_426),=Passwd(skCli_426)) = m3_455 in
                                {459}event endSrv(Cli_423,Sess_424,(Login(skCli_426),Passwd(skCli_426)));
                                {460}new Ns2_457: bitstring;
                                {461}let m4_458: bitstring = (Ns2_457,ActivateSessionResponse) in
                                {462}out(c, (senc(m4_458,K_444),sign(h(m4_458),skSess_442)))
                    )
                    else
                        {463}let skSess_459: bitstring = fail-any in
                        {464}let pkSess_460: bitstring = pub(skSess_459) in
                        {465}let K_461: bitstring = Skey(skCli_426,skSess_459) in
                        {466}in(c, (em1_462: bitstring,sigM1_463: bitstring));
                        {467}new Nc_464: bitstring;
                        {468}let m1_465: bitstring = sdec(em1_462,K_461) in
                        {469}if (verify(h(m1_465),sigM1_463,pkCli_427) <> true) then
                            0
                        else
                            {470}let (=pkCli_427,Nc_466: bitstring,=CreateSessionRequest) = m1_465 in
                            {471}new SSC_467: bitstring;
                            {472}new Ns_468: bitstring;
                            {473}let m2_469: bitstring = (pkSess_460,SSC_467,Ns_468) in
                            {474}out(c, (senc(m2_469,K_461),sign(h(m2_469),skSess_459)));
                            {475}in(c, (em3_470: bitstring,sigM3_471: bitstring));
                            {476}let m3_472: bitstring = sdec(em3_470,K_461) in
                            {477}if (verify(h(m3_472),sigM3_471,pkCli_427) <> true) then
                                0
                            else
                                {478}let (CSC_473: bitstring,=Login(skCli_426),=Passwd(skCli_426)) = m3_472 in
                                {479}event endSrv(Cli_423,Sess_424,(Login(skCli_426),Passwd(skCli_426)));
                                {480}new Ns2_474: bitstring;
                                {481}let m4_475: bitstring = (Ns2_474,ActivateSessionResponse) in
                                {482}out(c, (senc(m4_475,K_461),sign(h(m4_475),skSess_459)))
            )
            else
                {483}let skSess_476: bitstring = fail-any in
                {484}let pkSess_477: bitstring = pub(skSess_476) in
                {485}let K_478: bitstring = Skey(skCli_426,skSess_476) in
                {486}in(c, (em1_479: bitstring,sigM1_480: bitstring));
                {487}new Nc_481: bitstring;
                {488}let m1_482: bitstring = sdec(em1_479,K_478) in
                {489}if (verify(h(m1_482),sigM1_480,pkCli_427) <> true) then
                    0
                else
                    {490}let (=pkCli_427,Nc_483: bitstring,=CreateSessionRequest) = m1_482 in
                    {491}new SSC_484: bitstring;
                    {492}new Ns_485: bitstring;
                    {493}let m2_486: bitstring = (pkSess_477,SSC_484,Ns_485) in
                    {494}out(c, (senc(m2_486,K_478),sign(h(m2_486),skSess_476)));
                    {495}in(c, (em3_487: bitstring,sigM3_488: bitstring));
                    {496}let m3_489: bitstring = sdec(em3_487,K_478) in
                    {497}if (verify(h(m3_489),sigM3_488,pkCli_427) <> true) then
                        0
                    else
                        {498}let (CSC_490: bitstring,=Login(skCli_426),=Passwd(skCli_426)) = m3_489 in
                        {499}event endSrv(Cli_423,Sess_424,(Login(skCli_426),Passwd(skCli_426)));
                        {500}new Ns2_491: bitstring;
                        {501}let m4_492: bitstring = (Ns2_491,ActivateSessionResponse) in
                        {502}out(c, (senc(m4_492,K_478),sign(h(m4_492),skSess_476)))
        )
        else
            {503}let v_493: bool = (Cli_423 = B) in
            (
                {504}if v_493 then
                (
                    {505}let skCli_494: bitstring = skB in
                    {506}let pkCli_495: bitstring = pub(skCli_494) in
                    {507}let v_496: bool = (Sess_424 = A) in
                    (
                        {508}if v_496 then
                        (
                            {509}let skSess_497: bitstring = skA in
                            {510}let pkSess_498: bitstring = pub(skSess_497) in
                            {511}let K_499: bitstring = Skey(skCli_494,skSess_497) in
                            {512}in(c, (em1_500: bitstring,sigM1_501: bitstring));
                            {513}new Nc_502: bitstring;
                            {514}let m1_503: bitstring = sdec(em1_500,K_499) in
                            {515}if (verify(h(m1_503),sigM1_501,pkCli_495) <> true) then
                                0
                            else
                                {516}let (=pkCli_495,Nc_504: bitstring,=CreateSessionRequest) = m1_503 in
                                {517}new SSC_505: bitstring;
                                {518}new Ns_506: bitstring;
                                {519}let m2_507: bitstring = (pkSess_498,SSC_505,Ns_506) in
                                {520}out(c, (senc(m2_507,K_499),sign(h(m2_507),skSess_497)));
                                {521}in(c, (em3_508: bitstring,sigM3_509: bitstring));
                                {522}let m3_510: bitstring = sdec(em3_508,K_499) in
                                {523}if (verify(h(m3_510),sigM3_509,pkCli_495) <> true) then
                                    0
                                else
                                    {524}let (CSC_511: bitstring,=Login(skCli_494),=Passwd(skCli_494)) = m3_510 in
                                    {525}event endSrv(Cli_423,Sess_424,(Login(skCli_494),Passwd(skCli_494)));
                                    {526}new Ns2_512: bitstring;
                                    {527}let m4_513: bitstring = (Ns2_512,ActivateSessionResponse) in
                                    {528}out(c, (senc(m4_513,K_499),sign(h(m4_513),skSess_497)))
                        )
                        else
                            {529}let =true = (Sess_424 = B) in
                            (
                                {530}let skSess_514: bitstring = skB in
                                {531}let pkSess_515: bitstring = pub(skSess_514) in
                                {532}let K_516: bitstring = Skey(skCli_494,skSess_514) in
                                {533}in(c, (em1_517: bitstring,sigM1_518: bitstring));
                                {534}new Nc_519: bitstring;
                                {535}let m1_520: bitstring = sdec(em1_517,K_516) in
                                {536}if (verify(h(m1_520),sigM1_518,pkCli_495) <> true) then
                                    0
                                else
                                    {537}let (=pkCli_495,Nc_521: bitstring,=CreateSessionRequest) = m1_520 in
                                    {538}new SSC_522: bitstring;
                                    {539}new Ns_523: bitstring;
                                    {540}let m2_524: bitstring = (pkSess_515,SSC_522,Ns_523) in
                                    {541}out(c, (senc(m2_524,K_516),sign(h(m2_524),skSess_514)));
                                    {542}in(c, (em3_525: bitstring,sigM3_526: bitstring));
                                    {543}let m3_527: bitstring = sdec(em3_525,K_516) in
                                    {544}if (verify(h(m3_527),sigM3_526,pkCli_495) <> true) then
                                        0
                                    else
                                        {545}let (CSC_528: bitstring,=Login(skCli_494),=Passwd(skCli_494)) = m3_527 in
                                        {546}event endSrv(Cli_423,Sess_424,(Login(skCli_494),Passwd(skCli_494)));
                                        {547}new Ns2_529: bitstring;
                                        {548}let m4_530: bitstring = (Ns2_529,ActivateSessionResponse) in
                                        {549}out(c, (senc(m4_530,K_516),sign(h(m4_530),skSess_514)))
                            )
                            else
                                {550}let skSess_531: bitstring = fail-any in
                                {551}let pkSess_532: bitstring = pub(skSess_531) in
                                {552}let K_533: bitstring = Skey(skCli_494,skSess_531) in
                                {553}in(c, (em1_534: bitstring,sigM1_535: bitstring));
                                {554}new Nc_536: bitstring;
                                {555}let m1_537: bitstring = sdec(em1_534,K_533) in
                                {556}if (verify(h(m1_537),sigM1_535,pkCli_495) <> true) then
                                    0
                                else
                                    {557}let (=pkCli_495,Nc_538: bitstring,=CreateSessionRequest) = m1_537 in
                                    {558}new SSC_539: bitstring;
                                    {559}new Ns_540: bitstring;
                                    {560}let m2_541: bitstring = (pkSess_532,SSC_539,Ns_540) in
                                    {561}out(c, (senc(m2_541,K_533),sign(h(m2_541),skSess_531)));
                                    {562}in(c, (em3_542: bitstring,sigM3_543: bitstring));
                                    {563}let m3_544: bitstring = sdec(em3_542,K_533) in
                                    {564}if (verify(h(m3_544),sigM3_543,pkCli_495) <> true) then
                                        0
                                    else
                                        {565}let (CSC_545: bitstring,=Login(skCli_494),=Passwd(skCli_494)) = m3_544 in
                                        {566}event endSrv(Cli_423,Sess_424,(Login(skCli_494),Passwd(skCli_494)));
                                        {567}new Ns2_546: bitstring;
                                        {568}let m4_547: bitstring = (Ns2_546,ActivateSessionResponse) in
                                        {569}out(c, (senc(m4_547,K_533),sign(h(m4_547),skSess_531)))
                    )
                    else
                        {570}let skSess_548: bitstring = fail-any in
                        {571}let pkSess_549: bitstring = pub(skSess_548) in
                        {572}let K_550: bitstring = Skey(skCli_494,skSess_548) in
                        {573}in(c, (em1_551: bitstring,sigM1_552: bitstring));
                        {574}new Nc_553: bitstring;
                        {575}let m1_554: bitstring = sdec(em1_551,K_550) in
                        {576}if (verify(h(m1_554),sigM1_552,pkCli_495) <> true) then
                            0
                        else
                            {577}let (=pkCli_495,Nc_555: bitstring,=CreateSessionRequest) = m1_554 in
                            {578}new SSC_556: bitstring;
                            {579}new Ns_557: bitstring;
                            {580}let m2_558: bitstring = (pkSess_549,SSC_556,Ns_557) in
                            {581}out(c, (senc(m2_558,K_550),sign(h(m2_558),skSess_548)));
                            {582}in(c, (em3_559: bitstring,sigM3_560: bitstring));
                            {583}let m3_561: bitstring = sdec(em3_559,K_550) in
                            {584}if (verify(h(m3_561),sigM3_560,pkCli_495) <> true) then
                                0
                            else
                                {585}let (CSC_562: bitstring,=Login(skCli_494),=Passwd(skCli_494)) = m3_561 in
                                {586}event endSrv(Cli_423,Sess_424,(Login(skCli_494),Passwd(skCli_494)));
                                {587}new Ns2_563: bitstring;
                                {588}let m4_564: bitstring = (Ns2_563,ActivateSessionResponse) in
                                {589}out(c, (senc(m4_564,K_550),sign(h(m4_564),skSess_548)))
                )
                else
                    {590}let skCli_565: bitstring = sk(Cli_423) in
                    {591}let pkCli_566: bitstring = pub(skCli_565) in
                    {592}let v_567: bool = (Sess_424 = A) in
                    (
                        {593}if v_567 then
                        (
                            {594}let skSess_568: bitstring = skA in
                            {595}let pkSess_569: bitstring = pub(skSess_568) in
                            {596}let K_570: bitstring = Skey(skCli_565,skSess_568) in
                            {597}in(c, (em1_571: bitstring,sigM1_572: bitstring));
                            {598}new Nc_573: bitstring;
                            {599}let m1_574: bitstring = sdec(em1_571,K_570) in
                            {600}if (verify(h(m1_574),sigM1_572,pkCli_566) <> true) then
                                0
                            else
                                {601}let (=pkCli_566,Nc_575: bitstring,=CreateSessionRequest) = m1_574 in
                                {602}new SSC_576: bitstring;
                                {603}new Ns_577: bitstring;
                                {604}let m2_578: bitstring = (pkSess_569,SSC_576,Ns_577) in
                                {605}out(c, (senc(m2_578,K_570),sign(h(m2_578),skSess_568)));
                                {606}in(c, (em3_579: bitstring,sigM3_580: bitstring));
                                {607}let m3_581: bitstring = sdec(em3_579,K_570) in
                                {608}if (verify(h(m3_581),sigM3_580,pkCli_566) <> true) then
                                    0
                                else
                                    {609}let (CSC_582: bitstring,=Login(skCli_565),=Passwd(skCli_565)) = m3_581 in
                                    {610}event endSrv(Cli_423,Sess_424,(Login(skCli_565),Passwd(skCli_565)));
                                    {611}new Ns2_583: bitstring;
                                    {612}let m4_584: bitstring = (Ns2_583,ActivateSessionResponse) in
                                    {613}out(c, (senc(m4_584,K_570),sign(h(m4_584),skSess_568)))
                        )
                        else
                            {614}let =true = (Sess_424 = B) in
                            (
                                {615}let skSess_585: bitstring = skB in
                                {616}let pkSess_586: bitstring = pub(skSess_585) in
                                {617}let K_587: bitstring = Skey(skCli_565,skSess_585) in
                                {618}in(c, (em1_588: bitstring,sigM1_589: bitstring));
                                {619}new Nc_590: bitstring;
                                {620}let m1_591: bitstring = sdec(em1_588,K_587) in
                                {621}if (verify(h(m1_591),sigM1_589,pkCli_566) <> true) then
                                    0
                                else
                                    {622}let (=pkCli_566,Nc_592: bitstring,=CreateSessionRequest) = m1_591 in
                                    {623}new SSC_593: bitstring;
                                    {624}new Ns_594: bitstring;
                                    {625}let m2_595: bitstring = (pkSess_586,SSC_593,Ns_594) in
                                    {626}out(c, (senc(m2_595,K_587),sign(h(m2_595),skSess_585)));
                                    {627}in(c, (em3_596: bitstring,sigM3_597: bitstring));
                                    {628}let m3_598: bitstring = sdec(em3_596,K_587) in
                                    {629}if (verify(h(m3_598),sigM3_597,pkCli_566) <> true) then
                                        0
                                    else
                                        {630}let (CSC_599: bitstring,=Login(skCli_565),=Passwd(skCli_565)) = m3_598 in
                                        {631}event endSrv(Cli_423,Sess_424,(Login(skCli_565),Passwd(skCli_565)));
                                        {632}new Ns2_600: bitstring;
                                        {633}let m4_601: bitstring = (Ns2_600,ActivateSessionResponse) in
                                        {634}out(c, (senc(m4_601,K_587),sign(h(m4_601),skSess_585)))
                            )
                            else
                                {635}let skSess_602: bitstring = fail-any in
                                {636}let pkSess_603: bitstring = pub(skSess_602) in
                                {637}let K_604: bitstring = Skey(skCli_565,skSess_602) in
                                {638}in(c, (em1_605: bitstring,sigM1_606: bitstring));
                                {639}new Nc_607: bitstring;
                                {640}let m1_608: bitstring = sdec(em1_605,K_604) in
                                {641}if (verify(h(m1_608),sigM1_606,pkCli_566) <> true) then
                                    0
                                else
                                    {642}let (=pkCli_566,Nc_609: bitstring,=CreateSessionRequest) = m1_608 in
                                    {643}new SSC_610: bitstring;
                                    {644}new Ns_611: bitstring;
                                    {645}let m2_612: bitstring = (pkSess_603,SSC_610,Ns_611) in
                                    {646}out(c, (senc(m2_612,K_604),sign(h(m2_612),skSess_602)));
                                    {647}in(c, (em3_613: bitstring,sigM3_614: bitstring));
                                    {648}let m3_615: bitstring = sdec(em3_613,K_604) in
                                    {649}if (verify(h(m3_615),sigM3_614,pkCli_566) <> true) then
                                        0
                                    else
                                        {650}let (CSC_616: bitstring,=Login(skCli_565),=Passwd(skCli_565)) = m3_615 in
                                        {651}event endSrv(Cli_423,Sess_424,(Login(skCli_565),Passwd(skCli_565)));
                                        {652}new Ns2_617: bitstring;
                                        {653}let m4_618: bitstring = (Ns2_617,ActivateSessionResponse) in
                                        {654}out(c, (senc(m4_618,K_604),sign(h(m4_618),skSess_602)))
                    )
                    else
                        {655}let skSess_619: bitstring = fail-any in
                        {656}let pkSess_620: bitstring = pub(skSess_619) in
                        {657}let K_621: bitstring = Skey(skCli_565,skSess_619) in
                        {658}in(c, (em1_622: bitstring,sigM1_623: bitstring));
                        {659}new Nc_624: bitstring;
                        {660}let m1_625: bitstring = sdec(em1_622,K_621) in
                        {661}if (verify(h(m1_625),sigM1_623,pkCli_566) <> true) then
                            0
                        else
                            {662}let (=pkCli_566,Nc_626: bitstring,=CreateSessionRequest) = m1_625 in
                            {663}new SSC_627: bitstring;
                            {664}new Ns_628: bitstring;
                            {665}let m2_629: bitstring = (pkSess_620,SSC_627,Ns_628) in
                            {666}out(c, (senc(m2_629,K_621),sign(h(m2_629),skSess_619)));
                            {667}in(c, (em3_630: bitstring,sigM3_631: bitstring));
                            {668}let m3_632: bitstring = sdec(em3_630,K_621) in
                            {669}if (verify(h(m3_632),sigM3_631,pkCli_566) <> true) then
                                0
                            else
                                {670}let (CSC_633: bitstring,=Login(skCli_565),=Passwd(skCli_565)) = m3_632 in
                                {671}event endSrv(Cli_423,Sess_424,(Login(skCli_565),Passwd(skCli_565)));
                                {672}new Ns2_634: bitstring;
                                {673}let m4_635: bitstring = (Ns2_634,ActivateSessionResponse) in
                                {674}out(c, (senc(m4_635,K_621),sign(h(m4_635),skSess_619)))
            )
            else
                {675}let skCli_636: bitstring = fail-any in
                {676}let pkCli_637: bitstring = pub(skCli_636) in
                {677}let v_638: bool = (Sess_424 = A) in
                (
                    {678}if v_638 then
                    (
                        {679}let skSess_639: bitstring = skA in
                        {680}let pkSess_640: bitstring = pub(skSess_639) in
                        {681}let K_641: bitstring = Skey(skCli_636,skSess_639) in
                        {682}in(c, (em1_642: bitstring,sigM1_643: bitstring));
                        {683}new Nc_644: bitstring;
                        {684}let m1_645: bitstring = sdec(em1_642,K_641) in
                        {685}if (verify(h(m1_645),sigM1_643,pkCli_637) <> true) then
                            0
                        else
                            {686}let (=pkCli_637,Nc_646: bitstring,=CreateSessionRequest) = m1_645 in
                            {687}new SSC_647: bitstring;
                            {688}new Ns_648: bitstring;
                            {689}let m2_649: bitstring = (pkSess_640,SSC_647,Ns_648) in
                            {690}out(c, (senc(m2_649,K_641),sign(h(m2_649),skSess_639)));
                            {691}in(c, (em3_650: bitstring,sigM3_651: bitstring));
                            {692}let m3_652: bitstring = sdec(em3_650,K_641) in
                            {693}if (verify(h(m3_652),sigM3_651,pkCli_637) <> true) then
                                0
                            else
                                {694}let (CSC_653: bitstring,=Login(skCli_636),=Passwd(skCli_636)) = m3_652 in
                                {695}event endSrv(Cli_423,Sess_424,(Login(skCli_636),Passwd(skCli_636)));
                                {696}new Ns2_654: bitstring;
                                {697}let m4_655: bitstring = (Ns2_654,ActivateSessionResponse) in
                                {698}out(c, (senc(m4_655,K_641),sign(h(m4_655),skSess_639)))
                    )
                    else
                        {699}let =true = (Sess_424 = B) in
                        (
                            {700}let skSess_656: bitstring = skB in
                            {701}let pkSess_657: bitstring = pub(skSess_656) in
                            {702}let K_658: bitstring = Skey(skCli_636,skSess_656) in
                            {703}in(c, (em1_659: bitstring,sigM1_660: bitstring));
                            {704}new Nc_661: bitstring;
                            {705}let m1_662: bitstring = sdec(em1_659,K_658) in
                            {706}if (verify(h(m1_662),sigM1_660,pkCli_637) <> true) then
                                0
                            else
                                {707}let (=pkCli_637,Nc_663: bitstring,=CreateSessionRequest) = m1_662 in
                                {708}new SSC_664: bitstring;
                                {709}new Ns_665: bitstring;
                                {710}let m2_666: bitstring = (pkSess_657,SSC_664,Ns_665) in
                                {711}out(c, (senc(m2_666,K_658),sign(h(m2_666),skSess_656)));
                                {712}in(c, (em3_667: bitstring,sigM3_668: bitstring));
                                {713}let m3_669: bitstring = sdec(em3_667,K_658) in
                                {714}if (verify(h(m3_669),sigM3_668,pkCli_637) <> true) then
                                    0
                                else
                                    {715}let (CSC_670: bitstring,=Login(skCli_636),=Passwd(skCli_636)) = m3_669 in
                                    {716}event endSrv(Cli_423,Sess_424,(Login(skCli_636),Passwd(skCli_636)));
                                    {717}new Ns2_671: bitstring;
                                    {718}let m4_672: bitstring = (Ns2_671,ActivateSessionResponse) in
                                    {719}out(c, (senc(m4_672,K_658),sign(h(m4_672),skSess_656)))
                        )
                        else
                            {720}let skSess_673: bitstring = fail-any in
                            {721}let pkSess_674: bitstring = pub(skSess_673) in
                            {722}let K_675: bitstring = Skey(skCli_636,skSess_673) in
                            {723}in(c, (em1_676: bitstring,sigM1_677: bitstring));
                            {724}new Nc_678: bitstring;
                            {725}let m1_679: bitstring = sdec(em1_676,K_675) in
                            {726}if (verify(h(m1_679),sigM1_677,pkCli_637) <> true) then
                                0
                            else
                                {727}let (=pkCli_637,Nc_680: bitstring,=CreateSessionRequest) = m1_679 in
                                {728}new SSC_681: bitstring;
                                {729}new Ns_682: bitstring;
                                {730}let m2_683: bitstring = (pkSess_674,SSC_681,Ns_682) in
                                {731}out(c, (senc(m2_683,K_675),sign(h(m2_683),skSess_673)));
                                {732}in(c, (em3_684: bitstring,sigM3_685: bitstring));
                                {733}let m3_686: bitstring = sdec(em3_684,K_675) in
                                {734}if (verify(h(m3_686),sigM3_685,pkCli_637) <> true) then
                                    0
                                else
                                    {735}let (CSC_687: bitstring,=Login(skCli_636),=Passwd(skCli_636)) = m3_686 in
                                    {736}event endSrv(Cli_423,Sess_424,(Login(skCli_636),Passwd(skCli_636)));
                                    {737}new Ns2_688: bitstring;
                                    {738}let m4_689: bitstring = (Ns2_688,ActivateSessionResponse) in
                                    {739}out(c, (senc(m4_689,K_675),sign(h(m4_689),skSess_673)))
                )
                else
                    {740}let skSess_690: bitstring = fail-any in
                    {741}let pkSess_691: bitstring = pub(skSess_690) in
                    {742}let K_692: bitstring = Skey(skCli_636,skSess_690) in
                    {743}in(c, (em1_693: bitstring,sigM1_694: bitstring));
                    {744}new Nc_695: bitstring;
                    {745}let m1_696: bitstring = sdec(em1_693,K_692) in
                    {746}if (verify(h(m1_696),sigM1_694,pkCli_637) <> true) then
                        0
                    else
                        {747}let (=pkCli_637,Nc_697: bitstring,=CreateSessionRequest) = m1_696 in
                        {748}new SSC_698: bitstring;
                        {749}new Ns_699: bitstring;
                        {750}let m2_700: bitstring = (pkSess_691,SSC_698,Ns_699) in
                        {751}out(c, (senc(m2_700,K_692),sign(h(m2_700),skSess_690)));
                        {752}in(c, (em3_701: bitstring,sigM3_702: bitstring));
                        {753}let m3_703: bitstring = sdec(em3_701,K_692) in
                        {754}if (verify(h(m3_703),sigM3_702,pkCli_637) <> true) then
                            0
                        else
                            {755}let (CSC_704: bitstring,=Login(skCli_636),=Passwd(skCli_636)) = m3_703 in
                            {756}event endSrv(Cli_423,Sess_424,(Login(skCli_636),Passwd(skCli_636)));
                            {757}new Ns2_705: bitstring;
                            {758}let m4_706: bitstring = (Ns2_705,ActivateSessionResponse) in
                            {759}out(c, (senc(m4_706,K_692),sign(h(m4_706),skSess_690)))
    )
    else
        {760}let skCli_707: bitstring = fail-any in
        {761}let pkCli_708: bitstring = pub(skCli_707) in
        {762}let v_709: bool = (Sess_424 = A) in
        (
            {763}if v_709 then
            (
                {764}let skSess_710: bitstring = skA in
                {765}let pkSess_711: bitstring = pub(skSess_710) in
                {766}let K_712: bitstring = Skey(skCli_707,skSess_710) in
                {767}in(c, (em1_713: bitstring,sigM1_714: bitstring));
                {768}new Nc_715: bitstring;
                {769}let m1_716: bitstring = sdec(em1_713,K_712) in
                {770}if (verify(h(m1_716),sigM1_714,pkCli_708) <> true) then
                    0
                else
                    {771}let (=pkCli_708,Nc_717: bitstring,=CreateSessionRequest) = m1_716 in
                    {772}new SSC_718: bitstring;
                    {773}new Ns_719: bitstring;
                    {774}let m2_720: bitstring = (pkSess_711,SSC_718,Ns_719) in
                    {775}out(c, (senc(m2_720,K_712),sign(h(m2_720),skSess_710)));
                    {776}in(c, (em3_721: bitstring,sigM3_722: bitstring));
                    {777}let m3_723: bitstring = sdec(em3_721,K_712) in
                    {778}if (verify(h(m3_723),sigM3_722,pkCli_708) <> true) then
                        0
                    else
                        {779}let (CSC_724: bitstring,=Login(skCli_707),=Passwd(skCli_707)) = m3_723 in
                        {780}event endSrv(Cli_423,Sess_424,(Login(skCli_707),Passwd(skCli_707)));
                        {781}new Ns2_725: bitstring;
                        {782}let m4_726: bitstring = (Ns2_725,ActivateSessionResponse) in
                        {783}out(c, (senc(m4_726,K_712),sign(h(m4_726),skSess_710)))
            )
            else
                {784}let =true = (Sess_424 = B) in
                (
                    {785}let skSess_727: bitstring = skB in
                    {786}let pkSess_728: bitstring = pub(skSess_727) in
                    {787}let K_729: bitstring = Skey(skCli_707,skSess_727) in
                    {788}in(c, (em1_730: bitstring,sigM1_731: bitstring));
                    {789}new Nc_732: bitstring;
                    {790}let m1_733: bitstring = sdec(em1_730,K_729) in
                    {791}if (verify(h(m1_733),sigM1_731,pkCli_708) <> true) then
                        0
                    else
                        {792}let (=pkCli_708,Nc_734: bitstring,=CreateSessionRequest) = m1_733 in
                        {793}new SSC_735: bitstring;
                        {794}new Ns_736: bitstring;
                        {795}let m2_737: bitstring = (pkSess_728,SSC_735,Ns_736) in
                        {796}out(c, (senc(m2_737,K_729),sign(h(m2_737),skSess_727)));
                        {797}in(c, (em3_738: bitstring,sigM3_739: bitstring));
                        {798}let m3_740: bitstring = sdec(em3_738,K_729) in
                        {799}if (verify(h(m3_740),sigM3_739,pkCli_708) <> true) then
                            0
                        else
                            {800}let (CSC_741: bitstring,=Login(skCli_707),=Passwd(skCli_707)) = m3_740 in
                            {801}event endSrv(Cli_423,Sess_424,(Login(skCli_707),Passwd(skCli_707)));
                            {802}new Ns2_742: bitstring;
                            {803}let m4_743: bitstring = (Ns2_742,ActivateSessionResponse) in
                            {804}out(c, (senc(m4_743,K_729),sign(h(m4_743),skSess_727)))
                )
                else
                    {805}let skSess_744: bitstring = fail-any in
                    {806}let pkSess_745: bitstring = pub(skSess_744) in
                    {807}let K_746: bitstring = Skey(skCli_707,skSess_744) in
                    {808}in(c, (em1_747: bitstring,sigM1_748: bitstring));
                    {809}new Nc_749: bitstring;
                    {810}let m1_750: bitstring = sdec(em1_747,K_746) in
                    {811}if (verify(h(m1_750),sigM1_748,pkCli_708) <> true) then
                        0
                    else
                        {812}let (=pkCli_708,Nc_751: bitstring,=CreateSessionRequest) = m1_750 in
                        {813}new SSC_752: bitstring;
                        {814}new Ns_753: bitstring;
                        {815}let m2_754: bitstring = (pkSess_745,SSC_752,Ns_753) in
                        {816}out(c, (senc(m2_754,K_746),sign(h(m2_754),skSess_744)));
                        {817}in(c, (em3_755: bitstring,sigM3_756: bitstring));
                        {818}let m3_757: bitstring = sdec(em3_755,K_746) in
                        {819}if (verify(h(m3_757),sigM3_756,pkCli_708) <> true) then
                            0
                        else
                            {820}let (CSC_758: bitstring,=Login(skCli_707),=Passwd(skCli_707)) = m3_757 in
                            {821}event endSrv(Cli_423,Sess_424,(Login(skCli_707),Passwd(skCli_707)));
                            {822}new Ns2_759: bitstring;
                            {823}let m4_760: bitstring = (Ns2_759,ActivateSessionResponse) in
                            {824}out(c, (senc(m4_760,K_746),sign(h(m4_760),skSess_744)))
        )
        else
            {825}let skSess_761: bitstring = fail-any in
            {826}let pkSess_762: bitstring = pub(skSess_761) in
            {827}let K_763: bitstring = Skey(skCli_707,skSess_761) in
            {828}in(c, (em1_764: bitstring,sigM1_765: bitstring));
            {829}new Nc_766: bitstring;
            {830}let m1_767: bitstring = sdec(em1_764,K_763) in
            {831}if (verify(h(m1_767),sigM1_765,pkCli_708) <> true) then
                0
            else
                {832}let (=pkCli_708,Nc_768: bitstring,=CreateSessionRequest) = m1_767 in
                {833}new SSC_769: bitstring;
                {834}new Ns_770: bitstring;
                {835}let m2_771: bitstring = (pkSess_762,SSC_769,Ns_770) in
                {836}out(c, (senc(m2_771,K_763),sign(h(m2_771),skSess_761)));
                {837}in(c, (em3_772: bitstring,sigM3_773: bitstring));
                {838}let m3_774: bitstring = sdec(em3_772,K_763) in
                {839}if (verify(h(m3_774),sigM3_773,pkCli_708) <> true) then
                    0
                else
                    {840}let (CSC_775: bitstring,=Login(skCli_707),=Passwd(skCli_707)) = m3_774 in
                    {841}event endSrv(Cli_423,Sess_424,(Login(skCli_707),Passwd(skCli_707)));
                    {842}new Ns2_776: bitstring;
                    {843}let m4_777: bitstring = (Ns2_776,ActivateSessionResponse) in
                    {844}out(c, (senc(m4_777,K_763),sign(h(m4_777),skSess_761)))
) | (
    {845}!
    {846}in(c, (X: host,Y: host));
    {847}let v_778: bool = (X = A) in
    (
        {848}if v_778 then
        (
            {849}let skX: bitstring = skA in
            {850}let v_779: bool = (Y = A) in
            (
                {851}if v_779 then
                (
                    {852}let skY: bitstring = skA in
                    {853}if ((X,Y) = (A,B)) then
                        0
                    else
                        {854}if ((X,Y) = (B,A)) then
                            0
                        else
                            {855}out(c, Skey(skX,skY))
                )
                else
                    {856}let v_780: bool = (Y = B) in
                    (
                        {857}if v_780 then
                        (
                            {858}let skY_781: bitstring = skB in
                            {859}if ((X,Y) = (A,B)) then
                                0
                            else
                                {860}if ((X,Y) = (B,A)) then
                                    0
                                else
                                    {861}out(c, Skey(skX,skY_781))
                        )
                        else
                            {862}let skY_782: bitstring = sk(Y) in
                            {863}if ((X,Y) = (A,B)) then
                                0
                            else
                                {864}if ((X,Y) = (B,A)) then
                                    0
                                else
                                    {865}out(c, Skey(skX,skY_782))
                    )
                    else
                        {866}let skY_783: bitstring = fail-any in
                        {867}if ((X,Y) = (A,B)) then
                            0
                        else
                            {868}if ((X,Y) = (B,A)) then
                                0
                            else
                                {869}out(c, Skey(skX,skY_783))
            )
            else
                {870}let skY_784: bitstring = fail-any in
                {871}if ((X,Y) = (A,B)) then
                    0
                else
                    {872}if ((X,Y) = (B,A)) then
                        0
                    else
                        {873}out(c, Skey(skX,skY_784))
        )
        else
            {874}let v_785: bool = (X = B) in
            (
                {875}if v_785 then
                (
                    {876}let skX_786: bitstring = skB in
                    {877}let v_787: bool = (Y = A) in
                    (
                        {878}if v_787 then
                        (
                            {879}let skY_788: bitstring = skA in
                            {880}if ((X,Y) = (A,B)) then
                                0
                            else
                                {881}if ((X,Y) = (B,A)) then
                                    0
                                else
                                    {882}out(c, Skey(skX_786,skY_788))
                        )
                        else
                            {883}let v_789: bool = (Y = B) in
                            (
                                {884}if v_789 then
                                (
                                    {885}let skY_790: bitstring = skB in
                                    {886}if ((X,Y) = (A,B)) then
                                        0
                                    else
                                        {887}if ((X,Y) = (B,A)) then
                                            0
                                        else
                                            {888}out(c, Skey(skX_786,skY_790))
                                )
                                else
                                    {889}let skY_791: bitstring = sk(Y) in
                                    {890}if ((X,Y) = (A,B)) then
                                        0
                                    else
                                        {891}if ((X,Y) = (B,A)) then
                                            0
                                        else
                                            {892}out(c, Skey(skX_786,skY_791))
                            )
                            else
                                {893}let skY_792: bitstring = fail-any in
                                {894}if ((X,Y) = (A,B)) then
                                    0
                                else
                                    {895}if ((X,Y) = (B,A)) then
                                        0
                                    else
                                        {896}out(c, Skey(skX_786,skY_792))
                    )
                    else
                        {897}let skY_793: bitstring = fail-any in
                        {898}if ((X,Y) = (A,B)) then
                            0
                        else
                            {899}if ((X,Y) = (B,A)) then
                                0
                            else
                                {900}out(c, Skey(skX_786,skY_793))
                )
                else
                    {901}let skX_794: bitstring = sk(X) in
                    {902}let v_795: bool = (Y = A) in
                    (
                        {903}if v_795 then
                        (
                            {904}let skY_796: bitstring = skA in
                            {905}if ((X,Y) = (A,B)) then
                                0
                            else
                                {906}if ((X,Y) = (B,A)) then
                                    0
                                else
                                    {907}out(c, Skey(skX_794,skY_796))
                        )
                        else
                            {908}let v_797: bool = (Y = B) in
                            (
                                {909}if v_797 then
                                (
                                    {910}let skY_798: bitstring = skB in
                                    {911}if ((X,Y) = (A,B)) then
                                        0
                                    else
                                        {912}if ((X,Y) = (B,A)) then
                                            0
                                        else
                                            {913}out(c, Skey(skX_794,skY_798))
                                )
                                else
                                    {914}let skY_799: bitstring = sk(Y) in
                                    {915}if ((X,Y) = (A,B)) then
                                        0
                                    else
                                        {916}if ((X,Y) = (B,A)) then
                                            0
                                        else
                                            {917}out(c, Skey(skX_794,skY_799))
                            )
                            else
                                {918}let skY_800: bitstring = fail-any in
                                {919}if ((X,Y) = (A,B)) then
                                    0
                                else
                                    {920}if ((X,Y) = (B,A)) then
                                        0
                                    else
                                        {921}out(c, Skey(skX_794,skY_800))
                    )
                    else
                        {922}let skY_801: bitstring = fail-any in
                        {923}if ((X,Y) = (A,B)) then
                            0
                        else
                            {924}if ((X,Y) = (B,A)) then
                                0
                            else
                                {925}out(c, Skey(skX_794,skY_801))
            )
            else
                {926}let skX_802: bitstring = fail-any in
                {927}let v_803: bool = (Y = A) in
                (
                    {928}if v_803 then
                    (
                        {929}let skY_804: bitstring = skA in
                        {930}if ((X,Y) = (A,B)) then
                            0
                        else
                            {931}if ((X,Y) = (B,A)) then
                                0
                            else
                                {932}out(c, Skey(skX_802,skY_804))
                    )
                    else
                        {933}let v_805: bool = (Y = B) in
                        (
                            {934}if v_805 then
                            (
                                {935}let skY_806: bitstring = skB in
                                {936}if ((X,Y) = (A,B)) then
                                    0
                                else
                                    {937}if ((X,Y) = (B,A)) then
                                        0
                                    else
                                        {938}out(c, Skey(skX_802,skY_806))
                            )
                            else
                                {939}let skY_807: bitstring = sk(Y) in
                                {940}if ((X,Y) = (A,B)) then
                                    0
                                else
                                    {941}if ((X,Y) = (B,A)) then
                                        0
                                    else
                                        {942}out(c, Skey(skX_802,skY_807))
                        )
                        else
                            {943}let skY_808: bitstring = fail-any in
                            {944}if ((X,Y) = (A,B)) then
                                0
                            else
                                {945}if ((X,Y) = (B,A)) then
                                    0
                                else
                                    {946}out(c, Skey(skX_802,skY_808))
                )
                else
                    {947}let skY_809: bitstring = fail-any in
                    {948}if ((X,Y) = (A,B)) then
                        0
                    else
                        {949}if ((X,Y) = (B,A)) then
                            0
                        else
                            {950}out(c, Skey(skX_802,skY_809))
    )
    else
        {951}let skX_810: bitstring = fail-any in
        {952}let v_811: bool = (Y = A) in
        (
            {953}if v_811 then
            (
                {954}let skY_812: bitstring = skA in
                {955}if ((X,Y) = (A,B)) then
                    0
                else
                    {956}if ((X,Y) = (B,A)) then
                        0
                    else
                        {957}out(c, Skey(skX_810,skY_812))
            )
            else
                {958}let v_813: bool = (Y = B) in
                (
                    {959}if v_813 then
                    (
                        {960}let skY_814: bitstring = skB in
                        {961}if ((X,Y) = (A,B)) then
                            0
                        else
                            {962}if ((X,Y) = (B,A)) then
                                0
                            else
                                {963}out(c, Skey(skX_810,skY_814))
                    )
                    else
                        {964}let skY_815: bitstring = sk(Y) in
                        {965}if ((X,Y) = (A,B)) then
                            0
                        else
                            {966}if ((X,Y) = (B,A)) then
                                0
                            else
                                {967}out(c, Skey(skX_810,skY_815))
                )
                else
                    {968}let skY_816: bitstring = fail-any in
                    {969}if ((X,Y) = (A,B)) then
                        0
                    else
                        {970}if ((X,Y) = (B,A)) then
                            0
                        else
                            {971}out(c, Skey(skX_810,skY_816))
        )
        else
            {972}let skY_817: bitstring = fail-any in
            {973}if ((X,Y) = (A,B)) then
                0
            else
                {974}if ((X,Y) = (B,A)) then
                    0
                else
                    {975}out(c, Skey(skX_810,skY_817))
)

-- Query event(endSrv(X_818,Y_819,N)) ==> event(beginCli(X_818,Y_819,N))
Completing...
200 rules inserted. The rule base contains 145 rules. 92 rules in the queue.
400 rules inserted. The rule base contains 209 rules. 110 rules in the queue.
600 rules inserted. The rule base contains 246 rules. 84 rules in the queue.
800 rules inserted. The rule base contains 333 rules. 87 rules in the queue.
1000 rules inserted. The rule base contains 414 rules. 134 rules in the queue.
1200 rules inserted. The rule base contains 498 rules. 92 rules in the queue.
1400 rules inserted. The rule base contains 565 rules. 60 rules in the queue.
1600 rules inserted. The rule base contains 658 rules. 32 rules in the queue.
Starting query event(endSrv(X_818,Y_819,N)) ==> event(beginCli(X_818,Y_819,N))
goal reachable: Sess_23208 <> B[] && Sess_23208 <> A[] && begin(beginCli(B[],Sess_23208,(Login(skB[]),Passwd(skB[])))) && attacker(Sess_23208) -> end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))))
Abbreviations:
CSC_23380 = CSC_204[sigM2_200 = sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357)),em2_199 = senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))),Sess = Sess_23357,Cli = B[],!1 = @sid_23360]
CSC_23381 = CSC_204[sigM2_200 = sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357)),em2_199 = senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))),Sess = Sess_23357,Cli = B[],!1 = @sid_23279]
CSC_23382 = CSC_204[sigM2_200 = sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357)),em2_199 = senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))),Sess = Sess_23357,Cli = B[],!1 = @sid_23243]
Nc_23383 = Nc_180[Sess = B[],Cli = B[],!1 = @sid_23297]

1. The attacker initially knows B[].
attacker(B[]).

2. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

3. The message (B[],B[]) that the attacker may have by 2 may be received at input {6}.
So the message (senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])) may be sent to the attacker at output {141}.
attacker((senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[]))).

4. By 3, the attacker may know (senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[]).
attacker(sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])).

5. By 3, the attacker may know (senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])).
attacker(senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[]))).

6. By 5, the attacker may know senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])).
By 4, the attacker may know sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[]).
Using the function 2-tuple the attacker may obtain (senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])).
attacker((senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[]))).

7. We assume as hypothesis that
attacker(Sess_23357).

8. By 1, the attacker may know B[].
By 7, the attacker may know Sess_23357.
Using the function 2-tuple the attacker may obtain (B[],Sess_23357).
attacker((B[],Sess_23357)).

9. By 7, the attacker may know Sess_23357.
Using the function sk the attacker may obtain sk(Sess_23357).
attacker(sk(Sess_23357)).

10. The attacker has some term Ns_23359.
attacker(Ns_23359).

11. The attacker has some term SSC_23358.
attacker(SSC_23358).

12. By 9, the attacker may know sk(Sess_23357).
Using the function pub the attacker may obtain pub(sk(Sess_23357)).
attacker(pub(sk(Sess_23357))).

13. By 12, the attacker may know pub(sk(Sess_23357)).
By 11, the attacker may know SSC_23358.
By 10, the attacker may know Ns_23359.
Using the function 3-tuple the attacker may obtain (pub(sk(Sess_23357)),SSC_23358,Ns_23359).
attacker((pub(sk(Sess_23357)),SSC_23358,Ns_23359)).

14. By 13, the attacker may know (pub(sk(Sess_23357)),SSC_23358,Ns_23359).
Using the function h the attacker may obtain h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)).
attacker(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359))).

15. By 14, the attacker may know h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)).
By 9, the attacker may know sk(Sess_23357).
Using the function sign the attacker may obtain sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357)).
attacker(sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357))).

16. The message (B[],Sess_23357) that the attacker may have by 8 may be received at input {846}.
We have Sess_23357 <> B[] & Sess_23357 <> A[].
So the message Skey(skB[],sk(Sess_23357)) may be sent to the attacker at output {892}.
attacker(Skey(skB[],sk(Sess_23357))).

17. By 13, the attacker may know (pub(sk(Sess_23357)),SSC_23358,Ns_23359).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function senc the attacker may obtain senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))).
attacker(senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357)))).

18. By 17, the attacker may know senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))).
By 15, the attacker may know sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357)).
Using the function 2-tuple the attacker may obtain (senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357))).
attacker((senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357)))).

19. The message (B[],Sess_23357) that the attacker may have by 8 may be received at input {6}.
The message (senc((pub(sk(Sess_23357)),SSC_23358,Ns_23359),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23358,Ns_23359)),sk(Sess_23357))) that the attacker may have by 18 may be received at input {161}.
The event beginCli(B[],Sess_23357,(Login(skB[]),Passwd(skB[]))) may be executed at {166}.
We have Sess_23357 <> B[] & Sess_23357 <> A[].
So the message (senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {168}.
attacker((senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[]))).

20. By 19, the attacker may know (senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[]).
attacker(sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])).

21. The message (B[],B[]) that the attacker may have by 2 may be received at input {846}.
So the message Skey(skB[],skB[]) may be sent to the attacker at output {888}.
attacker(Skey(skB[],skB[])).

22. The attacker has some term Ns_23242.
attacker(Ns_23242).

23. The attacker has some term SSC_23241.
attacker(SSC_23241).

24. By 12, the attacker may know pub(sk(Sess_23357)).
By 23, the attacker may know SSC_23241.
By 22, the attacker may know Ns_23242.
Using the function 3-tuple the attacker may obtain (pub(sk(Sess_23357)),SSC_23241,Ns_23242).
attacker((pub(sk(Sess_23357)),SSC_23241,Ns_23242)).

25. By 24, the attacker may know (pub(sk(Sess_23357)),SSC_23241,Ns_23242).
Using the function h the attacker may obtain h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)).
attacker(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242))).

26. By 25, the attacker may know h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)).
By 9, the attacker may know sk(Sess_23357).
Using the function sign the attacker may obtain sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357)).
attacker(sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357))).

27. By 24, the attacker may know (pub(sk(Sess_23357)),SSC_23241,Ns_23242).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function senc the attacker may obtain senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))).
attacker(senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357)))).

28. By 27, the attacker may know senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))).
By 26, the attacker may know sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357)).
Using the function 2-tuple the attacker may obtain (senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357))).
attacker((senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357)))).

29. The message (B[],Sess_23357) that the attacker may have by 8 may be received at input {6}.
The message (senc((pub(sk(Sess_23357)),SSC_23241,Ns_23242),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23241,Ns_23242)),sk(Sess_23357))) that the attacker may have by 28 may be received at input {161}.
The event beginCli(B[],Sess_23357,(Login(skB[]),Passwd(skB[]))) may be executed at {166}.
We have Sess_23357 <> B[] & Sess_23357 <> A[].
So the message (senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23382,Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {168}.
attacker((senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23382,Login(skB[]),Passwd(skB[]))),skB[]))).

30. By 29, the attacker may know (senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23382,Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
attacker(senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357)))).

31. By 30, the attacker may know senc((CSC_23382,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function sdec the attacker may obtain (CSC_23382,Login(skB[]),Passwd(skB[])).
attacker((CSC_23382,Login(skB[]),Passwd(skB[]))).

32. By 31, the attacker may know (CSC_23382,Login(skB[]),Passwd(skB[])).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

33. The attacker has some term Ns_23278.
attacker(Ns_23278).

34. The attacker has some term SSC_23277.
attacker(SSC_23277).

35. By 12, the attacker may know pub(sk(Sess_23357)).
By 34, the attacker may know SSC_23277.
By 33, the attacker may know Ns_23278.
Using the function 3-tuple the attacker may obtain (pub(sk(Sess_23357)),SSC_23277,Ns_23278).
attacker((pub(sk(Sess_23357)),SSC_23277,Ns_23278)).

36. By 35, the attacker may know (pub(sk(Sess_23357)),SSC_23277,Ns_23278).
Using the function h the attacker may obtain h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)).
attacker(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278))).

37. By 36, the attacker may know h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)).
By 9, the attacker may know sk(Sess_23357).
Using the function sign the attacker may obtain sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357)).
attacker(sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357))).

38. By 35, the attacker may know (pub(sk(Sess_23357)),SSC_23277,Ns_23278).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function senc the attacker may obtain senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))).
attacker(senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357)))).

39. By 38, the attacker may know senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))).
By 37, the attacker may know sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357)).
Using the function 2-tuple the attacker may obtain (senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357))).
attacker((senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357)))).

40. The message (B[],Sess_23357) that the attacker may have by 8 may be received at input {6}.
The message (senc((pub(sk(Sess_23357)),SSC_23277,Ns_23278),Skey(skB[],sk(Sess_23357))),sign(h((pub(sk(Sess_23357)),SSC_23277,Ns_23278)),sk(Sess_23357))) that the attacker may have by 39 may be received at input {161}.
The event beginCli(B[],Sess_23357,(Login(skB[]),Passwd(skB[]))) may be executed at {166}.
We have Sess_23357 <> B[] & Sess_23357 <> A[].
So the message (senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23381,Login(skB[]),Passwd(skB[]))),skB[])) may be sent to the attacker at output {168}.
attacker((senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23381,Login(skB[]),Passwd(skB[]))),skB[]))).

41. By 40, the attacker may know (senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23381,Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
attacker(senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357)))).

42. By 41, the attacker may know senc((CSC_23381,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function sdec the attacker may obtain (CSC_23381,Login(skB[]),Passwd(skB[])).
attacker((CSC_23381,Login(skB[]),Passwd(skB[]))).

43. By 42, the attacker may know (CSC_23381,Login(skB[]),Passwd(skB[])).
Using the function 2-proj-3-tuple the attacker may obtain Login(skB[]).
attacker(Login(skB[])).

44. By 19, the attacker may know (senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
attacker(senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357)))).

45. By 44, the attacker may know senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],sk(Sess_23357))).
By 16, the attacker may know Skey(skB[],sk(Sess_23357)).
Using the function sdec the attacker may obtain (CSC_23380,Login(skB[]),Passwd(skB[])).
attacker((CSC_23380,Login(skB[]),Passwd(skB[]))).

46. By 45, the attacker may know (CSC_23380,Login(skB[]),Passwd(skB[])).
Using the function 1-proj-3-tuple the attacker may obtain CSC_23380.
attacker(CSC_23380).

47. By 46, the attacker may know CSC_23380.
By 43, the attacker may know Login(skB[]).
By 32, the attacker may know Passwd(skB[]).
Using the function 3-tuple the attacker may obtain (CSC_23380,Login(skB[]),Passwd(skB[])).
attacker((CSC_23380,Login(skB[]),Passwd(skB[]))).

48. By 47, the attacker may know (CSC_23380,Login(skB[]),Passwd(skB[])).
By 21, the attacker may know Skey(skB[],skB[]).
Using the function senc the attacker may obtain senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[])).
attacker(senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[]))).

49. By 48, the attacker may know senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[])).
By 20, the attacker may know sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[]).
Using the function 2-tuple the attacker may obtain (senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[])),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])).
attacker((senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[])),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[]))).

50. The message (B[],B[]) that the attacker may have by 2 may be received at input {415}.
The message (senc((pub(skB[]),Nc_23383,CreateSessionRequest),Skey(skB[],skB[])),sign(h((pub(skB[]),Nc_23383,CreateSessionRequest)),skB[])) that the attacker may have by 6 may be received at input {533}.
The message (senc((CSC_23380,Login(skB[]),Passwd(skB[])),Skey(skB[],skB[])),sign(h((CSC_23380,Login(skB[]),Passwd(skB[]))),skB[])) that the attacker may have by 49 may be received at input {542}.
So event endSrv(B[],B[],(Login(skB[]),Passwd(skB[]))) may be executed at {546}.
end(endSrv(B[],B[],(Login(skB[]),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,a)) at {6} in copy a_23389

new Nc_197 creating Nc_27083 at {158} in copy a_23389

out(c, (senc((pub(skB),Nc_27083,CreateSessionRequest),Skey(skB,sk(a))),sign(h((pub(skB),Nc_27083,CreateSessionRequest)),skB))) at {160} in copy a_23389

in(c, (B,a)) at {6} in copy a_23392

new Nc_197 creating Nc_27967 at {158} in copy a_23392

out(c, (senc((pub(skB),Nc_27967,CreateSessionRequest),Skey(skB,sk(a))),sign(h((pub(skB),Nc_27967,CreateSessionRequest)),skB))) at {160} in copy a_23392

in(c, (B,a)) at {6} in copy a_23386

new Nc_197 creating Nc_28851 at {158} in copy a_23386

out(c, (senc((pub(skB),Nc_28851,CreateSessionRequest),Skey(skB,sk(a))),sign(h((pub(skB),Nc_28851,CreateSessionRequest)),skB))) at {160} in copy a_23386

in(c, (B,B)) at {6} in copy a_23395

new Nc_180 creating Nc_23400 at {139} in copy a_23395

out(c, (senc((pub(skB),Nc_23400,CreateSessionRequest),Skey(skB,skB)),sign(h((pub(skB),Nc_23400,CreateSessionRequest)),skB))) at {141} in copy a_23395

in(c, (B,B)) at {415} in copy a_23396

in(c, (senc((pub(skB),Nc_23400,CreateSessionRequest),Skey(skB,skB)),sign(h((pub(skB),Nc_23400,CreateSessionRequest)),skB))) at {533} in copy a_23396

new Nc_519 creating Nc_30566 at {534} in copy a_23396

new SSC_522 creating SSC_30588 at {538} in copy a_23396

new Ns_523 creating Ns_30589 at {539} in copy a_23396

out(c, (senc((pub(skB),SSC_30588,Ns_30589),Skey(skB,skB)),sign(h((pub(skB),SSC_30588,Ns_30589)),skB))) at {541} in copy a_23396

in(c, (B,B)) at {846} in copy a_23393

out(c, Skey(skB,skB)) at {888} in copy a_23393

in(c, (B,a)) at {846} in copy a_23394

out(c, Skey(skB,sk(a))) at {892} in copy a_23394

in(c, (senc((pub(sk(a)),a_23387,a_23388),Skey(skB,sk(a))),sign(h((pub(sk(a)),a_23387,a_23388)),sk(a)))) at {161} in copy a_23389

new CSC_204 creating CSC_23398 at {165} in copy a_23389

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {166} in copy a_23389

out(c, (senc((CSC_23398,Login(skB),Passwd(skB)),Skey(skB,sk(a))),sign(h((CSC_23398,Login(skB),Passwd(skB))),skB))) at {168} in copy a_23389

in(c, (senc((pub(sk(a)),a_23390,a_23391),Skey(skB,sk(a))),sign(h((pub(sk(a)),a_23390,a_23391)),sk(a)))) at {161} in copy a_23392

new CSC_204 creating CSC_23399 at {165} in copy a_23392

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {166} in copy a_23392

out(c, (senc((CSC_23399,Login(skB),Passwd(skB)),Skey(skB,sk(a))),sign(h((CSC_23399,Login(skB),Passwd(skB))),skB))) at {168} in copy a_23392

in(c, (senc((pub(sk(a)),a_23384,a_23385),Skey(skB,sk(a))),sign(h((pub(sk(a)),a_23384,a_23385)),sk(a)))) at {161} in copy a_23386

new CSC_204 creating CSC_23397 at {165} in copy a_23386

event(beginCli(B,a,(Login(skB),Passwd(skB)))) at {166} in copy a_23386

out(c, (senc((CSC_23397,Login(skB),Passwd(skB)),Skey(skB,sk(a))),sign(h((CSC_23397,Login(skB),Passwd(skB))),skB))) at {168} in copy a_23386

in(c, (senc((CSC_23397,Login(skB),Passwd(skB)),Skey(skB,skB)),sign(h((CSC_23397,Login(skB),Passwd(skB))),skB))) at {542} in copy a_23396

event(endSrv(B,B,(Login(skB),Passwd(skB)))) at {546} in copy a_23396

The event endSrv(B,B,(Login(skB),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X_818,Y_819,N)) ==> event(beginCli(X_818,Y_819,N)) is false.
-- Query not attacker(Skey(skB[],skA[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 197 rules. 88 rules in the queue.
600 rules inserted. The rule base contains 247 rules. 101 rules in the queue.
800 rules inserted. The rule base contains 327 rules. 100 rules in the queue.
1000 rules inserted. The rule base contains 411 rules. 98 rules in the queue.
1200 rules inserted. The rule base contains 487 rules. 70 rules in the queue.
1400 rules inserted. The rule base contains 571 rules. 26 rules in the queue.
Starting query not attacker(Skey(skB[],skA[]))
RESULT not attacker(Skey(skB[],skA[])) is true.
-- Query not attacker(Skey(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 197 rules. 88 rules in the queue.
600 rules inserted. The rule base contains 247 rules. 101 rules in the queue.
800 rules inserted. The rule base contains 327 rules. 100 rules in the queue.
1000 rules inserted. The rule base contains 411 rules. 98 rules in the queue.
1200 rules inserted. The rule base contains 487 rules. 70 rules in the queue.
1400 rules inserted. The rule base contains 571 rules. 26 rules in the queue.
Starting query not attacker(Skey(skA[],skB[]))
RESULT not attacker(Skey(skA[],skB[])) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 197 rules. 88 rules in the queue.
600 rules inserted. The rule base contains 247 rules. 101 rules in the queue.
800 rules inserted. The rule base contains 327 rules. 100 rules in the queue.
1000 rules inserted. The rule base contains 411 rules. 98 rules in the queue.
1200 rules inserted. The rule base contains 487 rules. 70 rules in the queue.
1400 rules inserted. The rule base contains 571 rules. 26 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
Nc_72690 = Nc[Sess = A[],Cli = A[],!1 = @sid_72673]
CSC_72691 = CSC[sigM2 = sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[]),em2 = senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),Sess = A[],Cli = A[],!1 = @sid_72682]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The message (A[],A[]) that the attacker may have by 2 may be received at input {846}.
So the message Skey(skA[],skA[]) may be sent to the attacker at output {855}.
attacker(Skey(skA[],skA[])).

4. The message (A[],A[]) that the attacker may have by 2 may be received at input {6}.
So the message (senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])) may be sent to the attacker at output {18}.
attacker((senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[]))).

5. By 4, the attacker may know (senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[]).
attacker(sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])).

6. By 4, the attacker may know (senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])).
attacker(senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[]))).

7. By 6, the attacker may know senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])).
By 5, the attacker may know sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[]).
Using the function 2-tuple the attacker may obtain (senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])).
attacker((senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[]))).

8. The message (A[],A[]) that the attacker may have by 2 may be received at input {6}.
The message (senc((pub(skA[]),Nc_72690,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_72690,CreateSessionRequest)),skA[])) that the attacker may have by 7 may be received at input {19}.
So the message (senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_72691,Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {26}.
attacker((senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_72691,Login(skA[]),Passwd(skA[]))),skA[]))).

9. By 8, the attacker may know (senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_72691,Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
attacker(senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[]))).

10. By 9, the attacker may know senc((CSC_72691,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
By 3, the attacker may know Skey(skA[],skA[]).
Using the function sdec the attacker may obtain (CSC_72691,Login(skA[]),Passwd(skA[])).
attacker((CSC_72691,Login(skA[]),Passwd(skA[]))).

11. By 10, the attacker may know (CSC_72691,Login(skA[]),Passwd(skA[])).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,A)) at {6} in copy a_72692

new Nc creating Nc_72695 at {16} in copy a_72692

out(c, (senc((pub(skA),Nc_72695,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_72695,CreateSessionRequest)),skA))) at {18} in copy a_72692

in(c, (A,A)) at {6} in copy a_72693

new Nc creating Nc_76122 at {16} in copy a_72693

out(c, (senc((pub(skA),Nc_76122,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_76122,CreateSessionRequest)),skA))) at {18} in copy a_72693

in(c, (senc((pub(skA),Nc_72695,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_72695,CreateSessionRequest)),skA))) at {19} in copy a_72693

new CSC creating CSC_72696 at {23} in copy a_72693

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {24} in copy a_72693

out(c, (senc((CSC_72696,Login(skA),Passwd(skA)),Skey(skA,skA)),sign(h((CSC_72696,Login(skA),Passwd(skA))),skA))) at {26} in copy a_72693

in(c, (A,A)) at {846} in copy a_72694

out(c, Skey(skA,skA)) at {855} in copy a_72694

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 141 rules. 84 rules in the queue.
400 rules inserted. The rule base contains 197 rules. 88 rules in the queue.
600 rules inserted. The rule base contains 247 rules. 101 rules in the queue.
800 rules inserted. The rule base contains 327 rules. 100 rules in the queue.
1000 rules inserted. The rule base contains 411 rules. 98 rules in the queue.
1200 rules inserted. The rule base contains 487 rules. 70 rules in the queue.
1400 rules inserted. The rule base contains 571 rules. 26 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))
Abbreviations:
Nc_90194 = Nc[Sess = A[],Cli = A[],!1 = @sid_90177]
CSC_90195 = CSC[sigM2 = sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[]),em2 = senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),Sess = A[],Cli = A[],!1 = @sid_90186]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The message (A[],A[]) that the attacker may have by 2 may be received at input {846}.
So the message Skey(skA[],skA[]) may be sent to the attacker at output {855}.
attacker(Skey(skA[],skA[])).

4. The message (A[],A[]) that the attacker may have by 2 may be received at input {6}.
So the message (senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])) may be sent to the attacker at output {18}.
attacker((senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[]))).

5. By 4, the attacker may know (senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[]).
attacker(sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])).

6. By 4, the attacker may know (senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])).
attacker(senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[]))).

7. By 6, the attacker may know senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])).
By 5, the attacker may know sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[]).
Using the function 2-tuple the attacker may obtain (senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])).
attacker((senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[]))).

8. The message (A[],A[]) that the attacker may have by 2 may be received at input {6}.
The message (senc((pub(skA[]),Nc_90194,CreateSessionRequest),Skey(skA[],skA[])),sign(h((pub(skA[]),Nc_90194,CreateSessionRequest)),skA[])) that the attacker may have by 7 may be received at input {19}.
So the message (senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_90195,Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {26}.
attacker((senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_90195,Login(skA[]),Passwd(skA[]))),skA[]))).

9. By 8, the attacker may know (senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])),sign(h((CSC_90195,Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
attacker(senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[]))).

10. By 9, the attacker may know senc((CSC_90195,Login(skA[]),Passwd(skA[])),Skey(skA[],skA[])).
By 3, the attacker may know Skey(skA[],skA[]).
Using the function sdec the attacker may obtain (CSC_90195,Login(skA[]),Passwd(skA[])).
attacker((CSC_90195,Login(skA[]),Passwd(skA[]))).

11. By 10, the attacker may know (CSC_90195,Login(skA[]),Passwd(skA[])).
Using the function 2-proj-3-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,A)) at {6} in copy a_90196

new Nc creating Nc_90199 at {16} in copy a_90196

out(c, (senc((pub(skA),Nc_90199,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_90199,CreateSessionRequest)),skA))) at {18} in copy a_90196

in(c, (A,A)) at {6} in copy a_90197

new Nc creating Nc_93626 at {16} in copy a_90197

out(c, (senc((pub(skA),Nc_93626,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_93626,CreateSessionRequest)),skA))) at {18} in copy a_90197

in(c, (senc((pub(skA),Nc_90199,CreateSessionRequest),Skey(skA,skA)),sign(h((pub(skA),Nc_90199,CreateSessionRequest)),skA))) at {19} in copy a_90197

new CSC creating CSC_90200 at {23} in copy a_90197

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {24} in copy a_90197

out(c, (senc((CSC_90200,Login(skA),Passwd(skA)),Skey(skA,skA)),sign(h((CSC_90200,Login(skA),Passwd(skA))),skA))) at {26} in copy a_90197

in(c, (A,A)) at {846} in copy a_90198

out(c, Skey(skA,skA)) at {855} in copy a_90198

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
