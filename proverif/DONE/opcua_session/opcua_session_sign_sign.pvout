Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
(
    {5}!
    {6}in(c, (Cli: host,Sess: host));
    {7}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {8}let pkCli: bitstring = pub(skCli) in
    {9}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {10}let pkSess: bitstring = pub(skSess) in
    {11}let K: bitstring = Skey(skCli,skSess) in
    {12}new Nc: bitstring;
    {13}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {14}out(c, (m1,sign(h(m1),skCli)));
    {15}in(c, (m2: bitstring,sigM2: bitstring));
    {16}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {17}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {18}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {19}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {20}out(c, (m3,sign(h(m3),skCli)));
        {21}in(c, (m4: bitstring,sigM4: bitstring));
        {22}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {23}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            0
) | (
    {24}!
    {25}in(c, (Cli_59: host,Sess_60: host));
    {26}let skCli_61: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {27}let pkCli_62: bitstring = pub(skCli_61) in
    {28}let skSess_63: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {29}let pkSess_64: bitstring = pub(skSess_63) in
    {30}let K_65: bitstring = Skey(skCli_61,skSess_63) in
    {31}in(c, (m1_66: bitstring,sigM1: bitstring));
    {32}if (verify(h(m1_66),sigM1,pkCli_62) <> true) then
        0
    else
        {33}let (=CreateSessionRequest,=pkCli_62,Nc_67: bitstring) = m1_66 in
        {34}new Ns_68: bitstring;
        {35}let m2_69: bitstring = (CreateSessionResponse,pkSess_64,Ns_68) in
        {36}out(c, (m2_69,sign(h(m2_69),skSess_63)));
        {37}in(c, (m3_70: bitstring,sigM3: bitstring));
        {38}if (verify(h(m3_70),sigM3,pkCli_62) <> true) then
            0
        else
            {39}let (=ActivateSessionRequest,=pkCli_62,=Login(skCli_61),=Passwd(skCli_61)) = m3_70 in
            {40}event endSrv(Cli_59,Sess_60,(Login(skCli_61),Passwd(skCli_61)));
            {41}new Ns2_71: bitstring;
            {42}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {43}out(c, (m4_72,sign(h(m4_72),skSess_63)))
) | (
    {44}!
    {45}in(c, (X: host,Y: host));
    {46}let skX: bitstring = (if (X = A) then skA else (if (X = B) then skB else sk(X))) in
    {47}let skY: bitstring = (if (Y = A) then skA else (if (Y = B) then skB else sk(Y))) in
    {48}if ((X,Y) = (A,B)) then
        0
    else
        {49}if ((X,Y) = (B,A)) then
            0
        else
            {50}out(c, Skey(skX,skY))
)

-- Query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
Completing...
200 rules inserted. The rule base contains 102 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 134 rules. 50 rules in the queue.
600 rules inserted. The rule base contains 178 rules. 72 rules in the queue.
800 rules inserted. The rule base contains 194 rules. 78 rules in the queue.
1000 rules inserted. The rule base contains 204 rules. 148 rules in the queue.
1200 rules inserted. The rule base contains 210 rules. 130 rules in the queue.
1400 rules inserted. The rule base contains 280 rules. 60 rules in the queue.
1600 rules inserted. The rule base contains 251 rules. 49 rules in the queue.
Starting query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
Abbreviations:
Nc_17748 = Nc[Sess = B[],Cli = B[],!1 = @sid_17705]
Ns_17749 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc_17748),Sess_60 = B[],Cli_59 = B[],!1 = @sid_17716]
Nc_17750 = Nc[Sess = B[],Cli = A[],!1 = @sid_17665]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker initially knows B[].
attacker(B[]).

4. By 1, the attacker may know A[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

5. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[]))).

6. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])).

7. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_17750).
attacker((CreateSessionRequest,pub(skA[]),Nc_17750)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17750).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17750.
attacker(Nc_17750).

9. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

10. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

11. By 10, the attacker may know CreateSessionRequest.
By 9, the attacker may know pub(skA[]).
By 8, the attacker may know Nc_17750.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_17750).
attacker((CreateSessionRequest,pub(skA[]),Nc_17750)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17750).
By 6, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[]))).

13. By 3, the attacker may know B[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

14. The message (B[],B[]) that the attacker may have by 13 may be received at input {6}.
So the message ((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[]))).

15. By 14, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[]).
attacker(sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])).

16. By 14, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_17748).
attacker((CreateSessionRequest,pub(skB[]),Nc_17748)).

17. By 16, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_17748).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17748.
attacker(Nc_17748).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. By 10, the attacker may know CreateSessionRequest.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Nc_17748.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_17748).
attacker((CreateSessionRequest,pub(skB[]),Nc_17748)).

20. By 19, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_17748).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])).
attacker(((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[]))).

21. The message (B[],B[]) that the attacker may have by 13 may be received at input {25}.
The message ((CreateSessionRequest,pub(skB[]),Nc_17748),sign(h((CreateSessionRequest,pub(skB[]),Nc_17748)),skB[])) that the attacker may have by 20 may be received at input {31}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])) may be sent to the attacker at output {36}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[]))).

22. By 21, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])).

23. By 21, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_17749).
attacker((CreateSessionResponse,pub(skB[]),Ns_17749)).

24. By 23, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_17749).
Using the function 3-proj-3-tuple the attacker may obtain Ns_17749.
attacker(Ns_17749).

25. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

26. By 25, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 24, the attacker may know Ns_17749.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_17749).
attacker((CreateSessionResponse,pub(skB[]),Ns_17749)).

27. By 26, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_17749).
By 22, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[]))).

28. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
The message ((CreateSessionResponse,pub(skB[]),Ns_17749),sign(h((CreateSessionResponse,pub(skB[]),Ns_17749)),skB[])) that the attacker may have by 27 may be received at input {15}.
The event beginCli(A[],B[],(Login(skA[]),Passwd(skA[]))) may be executed at {18}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

29. By 28, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
attacker(sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).

30. By 28, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

31. By 30, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).

32. By 30, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).

33. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

34. By 33, the attacker may know ActivateSessionRequest.
By 9, the attacker may know pub(skA[]).
By 32, the attacker may know Login(skA[]).
By 31, the attacker may know Passwd(skA[]).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

35. By 34, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
By 29, the attacker may know sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
Using the function 2-tuple the attacker may obtain ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

36. The message (A[],A[]) that the attacker may have by 2 may be received at input {25}.
The message ((CreateSessionRequest,pub(skA[]),Nc_17750),sign(h((CreateSessionRequest,pub(skA[]),Nc_17750)),skA[])) that the attacker may have by 12 may be received at input {31}.
The message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) that the attacker may have by 35 may be received at input {37}.
So event endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))) may be executed at {40}.
end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,B)) at {6} in copy a

new Nc creating Nc_17755 at {12} in copy a

out(c, ((CreateSessionRequest,pub(skB),Nc_17755),sign(h((CreateSessionRequest,pub(skB),Nc_17755)),skB))) at {14} in copy a

in(c, (A,B)) at {6} in copy a_17752

new Nc creating Nc_18084 at {12} in copy a_17752

out(c, ((CreateSessionRequest,pub(skA),Nc_18084),sign(h((CreateSessionRequest,pub(skA),Nc_18084)),skA))) at {14} in copy a_17752

in(c, (A,B)) at {6} in copy a_17753

new Nc creating Nc_17757 at {12} in copy a_17753

out(c, ((CreateSessionRequest,pub(skA),Nc_17757),sign(h((CreateSessionRequest,pub(skA),Nc_17757)),skA))) at {14} in copy a_17753

in(c, (B,B)) at {25} in copy a_17751

in(c, ((CreateSessionRequest,pub(skB),Nc_17755),sign(h((CreateSessionRequest,pub(skB),Nc_17755)),skB))) at {31} in copy a_17751

new Ns_68 creating Ns_17756 at {34} in copy a_17751

out(c, ((CreateSessionResponse,pub(skB),Ns_17756),sign(h((CreateSessionResponse,pub(skB),Ns_17756)),skB))) at {36} in copy a_17751

in(c, ((CreateSessionResponse,pub(skB),Ns_17756),sign(h((CreateSessionResponse,pub(skB),Ns_17756)),skB))) at {15} in copy a_17752

event(beginCli(A,B,(Login(skA),Passwd(skA)))) at {18} in copy a_17752

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_17752

in(c, (A,A)) at {25} in copy a_17754

in(c, ((CreateSessionRequest,pub(skA),Nc_17757),sign(h((CreateSessionRequest,pub(skA),Nc_17757)),skA))) at {31} in copy a_17754

new Ns_68 creating Ns_18414 at {34} in copy a_17754

out(c, ((CreateSessionResponse,pub(skA),Ns_18414),sign(h((CreateSessionResponse,pub(skA),Ns_18414)),skA))) at {36} in copy a_17754

in(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {37} in copy a_17754

event(endSrv(A,A,(Login(skA),Passwd(skA)))) at {40} in copy a_17754

The event endSrv(A,A,(Login(skA),Passwd(skA))) is executed.
A trace has been found.
RESULT event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N)) is false.
-- Query not attacker(Skey(skB[],skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 110 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 120 rules. 48 rules in the queue.
Starting query not attacker(Skey(skB[],skA[]))
RESULT not attacker(Skey(skB[],skA[])) is true.
-- Query not attacker(Skey(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 110 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 120 rules. 48 rules in the queue.
Starting query not attacker(Skey(skA[],skB[]))
RESULT not attacker(Skey(skA[],skB[])) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 110 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 120 rules. 48 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker has some term Sess_42682.
attacker(Sess_42682).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_42682.
Using the function 2-tuple the attacker may obtain (A[],Sess_42682).
attacker((A[],Sess_42682)).

4. By 1, the attacker may know Sess_42682.
Using the function sk the attacker may obtain sk(Sess_42682).
attacker(sk(Sess_42682)).

5. The attacker has some term Ns_42683.
attacker(Ns_42683).

6. By 4, the attacker may know sk(Sess_42682).
Using the function pub the attacker may obtain pub(sk(Sess_42682)).
attacker(pub(sk(Sess_42682))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_42682)).
By 5, the attacker may know Ns_42683.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683).
attacker((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)).
attacker(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)).
By 4, the attacker may know sk(Sess_42682).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683),sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682))).
attacker(((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683),sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682)))).

12. The message (A[],Sess_42682) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683),sign(h((CreateSessionResponse,pub(sk(Sess_42682)),Ns_42683)),sk(Sess_42682))) that the attacker may have by 11 may be received at input {15}.
We have Sess_42682 <> B[] & Sess_42682 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_42691)) at {6} in copy a_42693

new Nc creating Nc_42872 at {12} in copy a_42693

out(c, ((CreateSessionRequest,pub(skA),Nc_42872),sign(h((CreateSessionRequest,pub(skA),Nc_42872)),skA))) at {14} in copy a_42693

in(c, ((CreateSessionResponse,pub(sk(a_42691)),a_42692),sign(h((CreateSessionResponse,pub(sk(a_42691)),a_42692)),sk(a_42691)))) at {15} in copy a_42693

event(beginCli(A,a_42691,(Login(skA),Passwd(skA)))) at {18} in copy a_42693

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_42693

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 110 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 120 rules. 48 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker has some term Sess_50995.
attacker(Sess_50995).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_50995.
Using the function 2-tuple the attacker may obtain (A[],Sess_50995).
attacker((A[],Sess_50995)).

4. By 1, the attacker may know Sess_50995.
Using the function sk the attacker may obtain sk(Sess_50995).
attacker(sk(Sess_50995)).

5. The attacker has some term Ns_50996.
attacker(Ns_50996).

6. By 4, the attacker may know sk(Sess_50995).
Using the function pub the attacker may obtain pub(sk(Sess_50995)).
attacker(pub(sk(Sess_50995))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_50995)).
By 5, the attacker may know Ns_50996.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996).
attacker((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)).
attacker(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)).
By 4, the attacker may know sk(Sess_50995).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996),sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995))).
attacker(((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996),sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995)))).

12. The message (A[],Sess_50995) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996),sign(h((CreateSessionResponse,pub(sk(Sess_50995)),Ns_50996)),sk(Sess_50995))) that the attacker may have by 11 may be received at input {15}.
We have Sess_50995 <> B[] & Sess_50995 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_51004)) at {6} in copy a_51006

new Nc creating Nc_51185 at {12} in copy a_51006

out(c, ((CreateSessionRequest,pub(skA),Nc_51185),sign(h((CreateSessionRequest,pub(skA),Nc_51185)),skA))) at {14} in copy a_51006

in(c, ((CreateSessionResponse,pub(sk(a_51004)),a_51005),sign(h((CreateSessionResponse,pub(sk(a_51004)),a_51005)),sk(a_51004)))) at {15} in copy a_51006

event(beginCli(A,a_51004,(Login(skA),Passwd(skA)))) at {18} in copy a_51006

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_51006

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
