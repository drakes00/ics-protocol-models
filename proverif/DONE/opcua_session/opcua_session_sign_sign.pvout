Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
(
    {5}!
    {6}in(c, (Cli: host,Sess: host));
    {7}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {8}let pkCli: bitstring = pub(skCli) in
    {9}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {10}let pkSess: bitstring = pub(skSess) in
    {11}let K: bitstring = Skey(skCli,skSess) in
    {12}new Nc: bitstring;
    {13}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {14}out(c, (m1,sign(h(m1),skCli)));
    {15}in(c, (m2: bitstring,sigM2: bitstring));
    {16}if (verify(h(m2),sigM2,pkSess) <> true) then
        0
    else
        {17}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
        {18}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
        {19}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
        {20}out(c, (m3,sign(h(m3),skCli)));
        {21}in(c, (m4: bitstring,sigM4: bitstring));
        {22}if (verify(h(m4),sigM4,pkSess) <> true) then
            0
        else
            {23}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
            0
) | (
    {24}!
    {25}in(c, (Cli_59: host,Sess_60: host));
    {26}let skCli_61: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {27}let pkCli_62: bitstring = pub(skCli_61) in
    {28}let skSess_63: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {29}let pkSess_64: bitstring = pub(skSess_63) in
    {30}let K_65: bitstring = Skey(skCli_61,skSess_63) in
    {31}in(c, (m1_66: bitstring,sigM1: bitstring));
    {32}if (verify(h(m1_66),sigM1,pkCli_62) <> true) then
        0
    else
        {33}let (=CreateSessionRequest,=pkCli_62,Nc_67: bitstring) = m1_66 in
        {34}new Ns_68: bitstring;
        {35}let m2_69: bitstring = (CreateSessionResponse,pkSess_64,Ns_68) in
        {36}out(c, (m2_69,sign(h(m2_69),skSess_63)));
        {37}in(c, (m3_70: bitstring,sigM3: bitstring));
        {38}if (verify(h(m3_70),sigM3,pkCli_62) <> true) then
            0
        else
            {39}let (=ActivateSessionRequest,=pkCli_62,=Login(skCli_61),=Passwd(skCli_61)) = m3_70 in
            {40}event endSrv(Cli_59,Sess_60,(Login(skCli_61),Passwd(skCli_61)));
            {41}new Ns2_71: bitstring;
            {42}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {43}out(c, (m4_72,sign(h(m4_72),skSess_63)))
) | (
    {44}!
    {45}in(c, (X: host,Y: host));
    {46}if (X = Y) then
        0
    else
        {47}let skX: bitstring = (if (X = A) then skA else (if (X = B) then skB else sk(X))) in
        {48}let skY: bitstring = (if (Y = A) then skA else (if (Y = B) then skB else sk(Y))) in
        {49}if ((X,Y) = (A,B)) then
            0
        else
            {50}if ((X,Y) = (B,A)) then
                0
            else
                {51}out(c, Skey(skX,skY))
)

-- Query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
Completing...
200 rules inserted. The rule base contains 100 rules. 72 rules in the queue.
400 rules inserted. The rule base contains 136 rules. 46 rules in the queue.
600 rules inserted. The rule base contains 176 rules. 72 rules in the queue.
800 rules inserted. The rule base contains 192 rules. 78 rules in the queue.
1000 rules inserted. The rule base contains 202 rules. 148 rules in the queue.
1200 rules inserted. The rule base contains 208 rules. 130 rules in the queue.
1400 rules inserted. The rule base contains 278 rules. 60 rules in the queue.
1600 rules inserted. The rule base contains 253 rules. 45 rules in the queue.
Starting query event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N))
goal reachable: begin(beginCli(A[],B[],(Login(skA[]),Passwd(skA[])))) -> end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))))
Abbreviations:
Nc_17584 = Nc[Sess = B[],Cli = B[],!1 = @sid_17541]
Ns_17585 = Ns_68[sigM1 = sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[]),m1_66 = (CreateSessionRequest,pub(skB[]),Nc_17584),Sess_60 = B[],Cli_59 = B[],!1 = @sid_17552]
Nc_17586 = Nc[Sess = B[],Cli = A[],!1 = @sid_17501]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker initially knows B[].
attacker(B[]).

4. By 1, the attacker may know A[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

5. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[]))).

6. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[]).
attacker(sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])).

7. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_17586).
attacker((CreateSessionRequest,pub(skA[]),Nc_17586)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17586).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17586.
attacker(Nc_17586).

9. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

10. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

11. By 10, the attacker may know CreateSessionRequest.
By 9, the attacker may know pub(skA[]).
By 8, the attacker may know Nc_17586.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_17586).
attacker((CreateSessionRequest,pub(skA[]),Nc_17586)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17586).
By 6, the attacker may know sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])).
attacker(((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[]))).

13. By 3, the attacker may know B[].
By 3, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

14. The message (B[],B[]) that the attacker may have by 13 may be received at input {6}.
So the message ((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])) may be sent to the attacker at output {14}.
attacker(((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[]))).

15. By 14, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[]).
attacker(sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])).

16. By 14, the attacker may know ((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_17584).
attacker((CreateSessionRequest,pub(skB[]),Nc_17584)).

17. By 16, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_17584).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17584.
attacker(Nc_17584).

18. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

19. By 10, the attacker may know CreateSessionRequest.
By 18, the attacker may know pub(skB[]).
By 17, the attacker may know Nc_17584.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_17584).
attacker((CreateSessionRequest,pub(skB[]),Nc_17584)).

20. By 19, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_17584).
By 15, the attacker may know sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])).
attacker(((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[]))).

21. The message (B[],B[]) that the attacker may have by 13 may be received at input {25}.
The message ((CreateSessionRequest,pub(skB[]),Nc_17584),sign(h((CreateSessionRequest,pub(skB[]),Nc_17584)),skB[])) that the attacker may have by 20 may be received at input {31}.
So the message ((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])) may be sent to the attacker at output {36}.
attacker(((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[]))).

22. By 21, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[]).
attacker(sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])).

23. By 21, the attacker may know ((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_17585).
attacker((CreateSessionResponse,pub(skB[]),Ns_17585)).

24. By 23, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_17585).
Using the function 3-proj-3-tuple the attacker may obtain Ns_17585.
attacker(Ns_17585).

25. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

26. By 25, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skB[]).
By 24, the attacker may know Ns_17585.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Ns_17585).
attacker((CreateSessionResponse,pub(skB[]),Ns_17585)).

27. By 26, the attacker may know (CreateSessionResponse,pub(skB[]),Ns_17585).
By 22, the attacker may know sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[]).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])).
attacker(((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[]))).

28. The message (A[],B[]) that the attacker may have by 4 may be received at input {6}.
The message ((CreateSessionResponse,pub(skB[]),Ns_17585),sign(h((CreateSessionResponse,pub(skB[]),Ns_17585)),skB[])) that the attacker may have by 27 may be received at input {15}.
The event beginCli(A[],B[],(Login(skA[]),Passwd(skA[]))) may be executed at {18}.
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

29. By 28, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 2-proj-2-tuple the attacker may obtain sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
attacker(sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).

30. By 28, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

31. By 30, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).

32. By 30, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).

33. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

34. By 33, the attacker may know ActivateSessionRequest.
By 9, the attacker may know pub(skA[]).
By 32, the attacker may know Login(skA[]).
By 31, the attacker may know Passwd(skA[]).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

35. By 34, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
By 29, the attacker may know sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]).
Using the function 2-tuple the attacker may obtain ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

36. The message (A[],A[]) that the attacker may have by 2 may be received at input {25}.
The message ((CreateSessionRequest,pub(skA[]),Nc_17586),sign(h((CreateSessionRequest,pub(skA[]),Nc_17586)),skA[])) that the attacker may have by 12 may be received at input {31}.
The message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) that the attacker may have by 35 may be received at input {37}.
So event endSrv(A[],A[],(Login(skA[]),Passwd(skA[]))) may be executed at {40}.
end(endSrv(A[],A[],(Login(skA[]),Passwd(skA[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (B,B)) at {6} in copy a

new Nc creating Nc_17591 at {12} in copy a

out(c, ((CreateSessionRequest,pub(skB),Nc_17591),sign(h((CreateSessionRequest,pub(skB),Nc_17591)),skB))) at {14} in copy a

in(c, (A,B)) at {6} in copy a_17588

new Nc creating Nc_17920 at {12} in copy a_17588

out(c, ((CreateSessionRequest,pub(skA),Nc_17920),sign(h((CreateSessionRequest,pub(skA),Nc_17920)),skA))) at {14} in copy a_17588

in(c, (A,B)) at {6} in copy a_17589

new Nc creating Nc_17593 at {12} in copy a_17589

out(c, ((CreateSessionRequest,pub(skA),Nc_17593),sign(h((CreateSessionRequest,pub(skA),Nc_17593)),skA))) at {14} in copy a_17589

in(c, (B,B)) at {25} in copy a_17587

in(c, ((CreateSessionRequest,pub(skB),Nc_17591),sign(h((CreateSessionRequest,pub(skB),Nc_17591)),skB))) at {31} in copy a_17587

new Ns_68 creating Ns_17592 at {34} in copy a_17587

out(c, ((CreateSessionResponse,pub(skB),Ns_17592),sign(h((CreateSessionResponse,pub(skB),Ns_17592)),skB))) at {36} in copy a_17587

in(c, ((CreateSessionResponse,pub(skB),Ns_17592),sign(h((CreateSessionResponse,pub(skB),Ns_17592)),skB))) at {15} in copy a_17588

event(beginCli(A,B,(Login(skA),Passwd(skA)))) at {18} in copy a_17588

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_17588

in(c, (A,A)) at {25} in copy a_17590

in(c, ((CreateSessionRequest,pub(skA),Nc_17593),sign(h((CreateSessionRequest,pub(skA),Nc_17593)),skA))) at {31} in copy a_17590

new Ns_68 creating Ns_18250 at {34} in copy a_17590

out(c, ((CreateSessionResponse,pub(skA),Ns_18250),sign(h((CreateSessionResponse,pub(skA),Ns_18250)),skA))) at {36} in copy a_17590

in(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {37} in copy a_17590

event(endSrv(A,A,(Login(skA),Passwd(skA)))) at {40} in copy a_17590

The event endSrv(A,A,(Login(skA),Passwd(skA))) is executed.
A trace has been found.
RESULT event(endSrv(X_73,Y_74,N)) ==> event(beginCli(X_73,Y_74,N)) is false.
-- Query not attacker(Skey(skB[],skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 78 rules in the queue.
400 rules inserted. The rule base contains 108 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 118 rules. 48 rules in the queue.
Starting query not attacker(Skey(skB[],skA[]))
RESULT not attacker(Skey(skB[],skA[])) is true.
-- Query not attacker(Skey(skA[],skB[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 78 rules in the queue.
400 rules inserted. The rule base contains 108 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 118 rules. 48 rules in the queue.
Starting query not attacker(Skey(skA[],skB[]))
RESULT not attacker(Skey(skA[],skB[])) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 78 rules in the queue.
400 rules inserted. The rule base contains 108 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 118 rules. 48 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker has some term Sess_42026.
attacker(Sess_42026).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_42026.
Using the function 2-tuple the attacker may obtain (A[],Sess_42026).
attacker((A[],Sess_42026)).

4. By 1, the attacker may know Sess_42026.
Using the function sk the attacker may obtain sk(Sess_42026).
attacker(sk(Sess_42026)).

5. The attacker has some term Ns_42027.
attacker(Ns_42027).

6. By 4, the attacker may know sk(Sess_42026).
Using the function pub the attacker may obtain pub(sk(Sess_42026)).
attacker(pub(sk(Sess_42026))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_42026)).
By 5, the attacker may know Ns_42027.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027).
attacker((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)).
attacker(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)).
By 4, the attacker may know sk(Sess_42026).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027),sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026))).
attacker(((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027),sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026)))).

12. The message (A[],Sess_42026) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027),sign(h((CreateSessionResponse,pub(sk(Sess_42026)),Ns_42027)),sk(Sess_42026))) that the attacker may have by 11 may be received at input {15}.
We have Sess_42026 <> B[] & Sess_42026 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_42035)) at {6} in copy a_42037

new Nc creating Nc_42216 at {12} in copy a_42037

out(c, ((CreateSessionRequest,pub(skA),Nc_42216),sign(h((CreateSessionRequest,pub(skA),Nc_42216)),skA))) at {14} in copy a_42037

in(c, ((CreateSessionResponse,pub(sk(a_42035)),a_42036),sign(h((CreateSessionResponse,pub(sk(a_42035)),a_42036)),sk(a_42035)))) at {15} in copy a_42037

event(beginCli(A,a_42035,(Login(skA),Passwd(skA)))) at {18} in copy a_42037

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_42037

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 98 rules. 78 rules in the queue.
400 rules inserted. The rule base contains 108 rules. 34 rules in the queue.
600 rules inserted. The rule base contains 118 rules. 48 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker has some term Sess_50175.
attacker(Sess_50175).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know Sess_50175.
Using the function 2-tuple the attacker may obtain (A[],Sess_50175).
attacker((A[],Sess_50175)).

4. By 1, the attacker may know Sess_50175.
Using the function sk the attacker may obtain sk(Sess_50175).
attacker(sk(Sess_50175)).

5. The attacker has some term Ns_50176.
attacker(Ns_50176).

6. By 4, the attacker may know sk(Sess_50175).
Using the function pub the attacker may obtain pub(sk(Sess_50175)).
attacker(pub(sk(Sess_50175))).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(sk(Sess_50175)).
By 5, the attacker may know Ns_50176.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176).
attacker((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)).

9. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176).
Using the function h the attacker may obtain h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)).
attacker(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176))).

10. By 9, the attacker may know h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)).
By 4, the attacker may know sk(Sess_50175).
Using the function sign the attacker may obtain sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175)).
attacker(sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175))).

11. By 8, the attacker may know (CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176).
By 10, the attacker may know sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175)).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176),sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175))).
attacker(((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176),sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175)))).

12. The message (A[],Sess_50175) that the attacker may have by 3 may be received at input {6}.
The message ((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176),sign(h((CreateSessionResponse,pub(sk(Sess_50175)),Ns_50176)),sk(Sess_50175))) that the attacker may have by 11 may be received at input {15}.
We have Sess_50175 <> B[] & Sess_50175 <> A[].
So the message ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])) may be sent to the attacker at output {20}.
attacker(((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[]))).

13. By 12, the attacker may know ((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])),sign(h((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))),skA[])).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

14. By 13, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

in(c, (A,a_50184)) at {6} in copy a_50186

new Nc creating Nc_50365 at {12} in copy a_50186

out(c, ((CreateSessionRequest,pub(skA),Nc_50365),sign(h((CreateSessionRequest,pub(skA),Nc_50365)),skA))) at {14} in copy a_50186

in(c, ((CreateSessionResponse,pub(sk(a_50184)),a_50185),sign(h((CreateSessionResponse,pub(sk(a_50184)),a_50185)),sk(a_50184)))) at {15} in copy a_50186

event(beginCli(A,a_50184,(Login(skA),Passwd(skA)))) at {18} in copy a_50186

out(c, ((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA)),sign(h((ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))),skA))) at {20} in copy a_50186

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
