Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {9}let pkCli: bitstring = pub(skCli) in
    {10}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {11}let pkSess: bitstring = pub(skSess) in
    {12}new K: bitstring;
    {13}out(ch, (Cli,Sess,K));
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, m1);
    {19}in(c, m2: bitstring);
    {20}let (=CreateSessionResponse,=pkSess,Ns: bitstring) = m2 in
    {21}event beginCli(Cli,Sess,(Login(skCli),Passwd(skCli)));
    {22}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(skCli),Passwd(skCli)) in
    {23}out(c, m3);
    {24}in(c, m4: bitstring);
    {25}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    {26}if ((Sess = A) || (Sess = B)) then
    {27}event endCli(Sess,Cli,Ns)
) | (
    {28}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {29}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {30}let pkCli_63: bitstring = pub(skCli_62) in
    {31}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {32}let pkSess_65: bitstring = pub(skSess_64) in
    {33}in(c, (m1_66: bitstring,sigM1: bitstring));
    {34}if (verify(h(m1_66),sigM1,pkCli_63) <> true) then
        0
    else
        {35}let (=CreateSessionRequest,=pkCli_63,Nc_67: bitstring) = m1_66 in
        {36}new Ns_68: bitstring;
        {37}event beginSrv(Sess_60,Cli_59,Ns_68);
        {38}let m2_69: bitstring = (CreateSessionResponse,pkSess_65,Ns_68) in
        {39}out(c, (m2_69,sign(h(m2_69),skSess_64)));
        {40}in(c, (m3_70: bitstring,sigM3: bitstring));
        {41}if (verify(h(m3_70),sigM3,pkCli_63) <> true) then
            0
        else
            {42}let (=ActivateSessionRequest,=pkCli_63,=Login(skCli_62),=Passwd(skCli_62)) = m3_70 in
            {43}new Ns2_71: bitstring;
            {44}let m4_72: bitstring = (ActivateSessionResponse,Ns2_71) in
            {45}out(c, (m4_72,sign(h(m4_72),skSess_64)));
            {46}if ((Cli_59 = A) || (Cli_59 = B)) then
            {47}event endSrv(Cli_59,Sess_60,(Login(skCli_62),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 96 rules. 36 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: attacker(N_6498) -> end(endCli(A[],B[],N_6498))

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. We assume as hypothesis that
attacker(N_6517).

5. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

6. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

7. By 6, the attacker may know CreateSessionResponse.
By 5, the attacker may know pub(skA[]).
By 4, the attacker may know N_6517.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),N_6517).
attacker((CreateSessionResponse,pub(skA[]),N_6517)).

8. The attacker has some term Ns2_6512.
attacker(Ns2_6512).

9. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

10. By 9, the attacker may know ActivateSessionResponse.
By 8, the attacker may know Ns2_6512.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_6512).
attacker((ActivateSessionResponse,Ns2_6512)).

11. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),N_6517) that the attacker may have by 7 may be received at input {19}.
The message (ActivateSessionResponse,Ns2_6512) that the attacker may have by 10 may be received at input {24}.
So event endCli(A[],B[],N_6517) may be executed at {27}.
end(endCli(A[],B[],N_6517)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_6602 at {6} in copy a_6519

in(c, (B,A)) at {7} in copy a_6519

new K creating K_6673 at {12} in copy a_6519

out(ch_6602, (B,A,K_6673)) at {13} in copy a_6519 received at {28} in copy a_6519

out(c, CreateSessionRequest) at {15} in copy a_6519

new Nc creating Nc_6763 at {16} in copy a_6519

out(c, (CreateSessionRequest,pub(skB),Nc_6763)) at {18} in copy a_6519

in(c, (CreateSessionResponse,pub(skA),a)) at {19} in copy a_6519

event(beginCli(B,A,(Login(skB),Passwd(skB)))) at {21} in copy a_6519

out(c, (ActivateSessionRequest,pub(skB),Login(skB),Passwd(skB))) at {23} in copy a_6519

in(c, (ActivateSessionResponse,a_6518)) at {24} in copy a_6519

event(endCli(A,B,a)) at {27} in copy a_6519

The event endCli(A,B,a) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_6791,Y_6792,N_6793)) ==> event(beginCli(X_6791,Y_6792,N_6793))
Completing...
200 rules inserted. The rule base contains 112 rules. 44 rules in the queue.
400 rules inserted. The rule base contains 160 rules. 60 rules in the queue.
600 rules inserted. The rule base contains 190 rules. 30 rules in the queue.
Starting query event(endSrv(X_6791,Y_6792,N_6793)) ==> event(beginCli(X_6791,Y_6792,N_6793))
RESULT event(endSrv(X_6791,Y_6792,N_6793)) ==> event(beginCli(X_6791,Y_6792,N_6793)) is true.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 94 rules. 34 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_19927.
attacker(Ns_19927).

4. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

5. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

6. By 5, the attacker may know CreateSessionResponse.
By 4, the attacker may know pub(skA[]).
By 3, the attacker may know Ns_19927.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Ns_19927).
attacker((CreateSessionResponse,pub(skA[]),Ns_19927)).

7. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Ns_19927) that the attacker may have by 6 may be received at input {19}.
So the message (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

8. By 7, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_20018 at {6} in copy a_19934

in(c, (A,A)) at {7} in copy a_19934

new K creating K_20089 at {12} in copy a_19934

out(ch_20018, (A,A,K_20089)) at {13} in copy a_19934 received at {28} in copy a_19934

out(c, CreateSessionRequest) at {15} in copy a_19934

new Nc creating Nc_20179 at {16} in copy a_19934

out(c, (CreateSessionRequest,pub(skA),Nc_20179)) at {18} in copy a_19934

in(c, (CreateSessionResponse,pub(skA),a_19933)) at {19} in copy a_19934

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_19934

out(c, (ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_19934

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
-- Query not attacker(Login(skA[]))
Completing...
200 rules inserted. The rule base contains 94 rules. 34 rules in the queue.
Starting query not attacker(Login(skA[]))
goal reachable: attacker(Login(skA[]))

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_25546.
attacker(Ns_25546).

4. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

5. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

6. By 5, the attacker may know CreateSessionResponse.
By 4, the attacker may know pub(skA[]).
By 3, the attacker may know Ns_25546.
Using the function 3-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Ns_25546).
attacker((CreateSessionResponse,pub(skA[]),Ns_25546)).

7. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Ns_25546) that the attacker may have by 6 may be received at input {19}.
So the message (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[]))).

8. By 7, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(skA[]),Passwd(skA[])).
Using the function 3-proj-4-tuple the attacker may obtain Login(skA[]).
attacker(Login(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_25637 at {6} in copy a_25553

in(c, (A,A)) at {7} in copy a_25553

new K creating K_25708 at {12} in copy a_25553

out(ch_25637, (A,A,K_25708)) at {13} in copy a_25553 received at {28} in copy a_25553

out(c, CreateSessionRequest) at {15} in copy a_25553

new Nc creating Nc_25798 at {16} in copy a_25553

out(c, (CreateSessionRequest,pub(skA),Nc_25798)) at {18} in copy a_25553

in(c, (CreateSessionResponse,pub(skA),a_25552)) at {19} in copy a_25553

event(beginCli(A,A,(Login(skA),Passwd(skA)))) at {21} in copy a_25553

out(c, (ActivateSessionRequest,pub(skA),Login(skA),Passwd(skA))) at {23} in copy a_25553

The attacker has the message Login(skA).
A trace has been found.
RESULT not attacker(Login(skA[])) is false.
