Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}new skI: bitstring;
{6}let pkI: bitstring = pub(skI) in
{7}out(c, (pkI,skI));
{8}out(c, Skey(pkI,pkA));
{9}out(c, Skey(pkI,pkB));
{10}out(c, Skey(pkA,pkI));
{11}out(c, Skey(pkB,pkI));
(
    {12}!
    {13}in(c, (Cli: host,Sess: host));
    {14}let v_80: bool = (Cli = A) in
    (
        {15}if v_80 then
        (
            {16}let skCli: bitstring = skA in
            {17}let pkCli: bitstring = pub(skCli) in
            {18}let v_81: bool = (Sess = A) in
            (
                {19}if v_81 then
                (
                    {20}let skSess: bitstring = skA in
                    {21}let pkSess: bitstring = pub(skSess) in
                    {22}let K: bitstring = Skey(pkCli,pkSess) in
                    {23}let m1: bitstring = CreateSessionRequest in
                    {24}out(c, m1);
                    {25}in(c, m2: bitstring);
                    {26}let (SSC: bitstring,Ns2: bitstring) = m2 in
                    {27}new CSC: bitstring;
                    {28}event beginCli(Cli,Sess,(Login(pkCli,pkSess),Passwd(pkCli,pkSess)));
                    {29}let m3: bitstring = (CSC,Login(pkCli,pkSess),Passwd(pkCli,pkSess)) in
                    {30}out(c, m3);
                    {31}in(c, m4: bitstring);
                    {32}if (m4 <> ActivateSessionResponse) then
                    0
                )
                else
                    {33}let v_82: bool = (Sess = B) in
                    (
                        {34}if v_82 then
                        (
                            {35}let skSess_83: bitstring = skB in
                            {36}let pkSess_84: bitstring = pub(skSess_83) in
                            {37}let K_85: bitstring = Skey(pkCli,pkSess_84) in
                            {38}let m1_86: bitstring = CreateSessionRequest in
                            {39}out(c, m1_86);
                            {40}in(c, m2_87: bitstring);
                            {41}let (SSC_88: bitstring,Ns2_89: bitstring) = m2_87 in
                            {42}new CSC_90: bitstring;
                            {43}event beginCli(Cli,Sess,(Login(pkCli,pkSess_84),Passwd(pkCli,pkSess_84)));
                            {44}let m3_91: bitstring = (CSC_90,Login(pkCli,pkSess_84),Passwd(pkCli,pkSess_84)) in
                            {45}out(c, m3_91);
                            {46}in(c, m4_92: bitstring);
                            {47}if (m4_92 <> ActivateSessionResponse) then
                            0
                        )
                        else
                            {48}let skSess_93: bitstring = skI in
                            {49}let pkSess_94: bitstring = pub(skSess_93) in
                            {50}let K_95: bitstring = Skey(pkCli,pkSess_94) in
                            {51}let m1_96: bitstring = CreateSessionRequest in
                            {52}out(c, m1_96);
                            {53}in(c, m2_97: bitstring);
                            {54}let (SSC_98: bitstring,Ns2_99: bitstring) = m2_97 in
                            {55}new CSC_100: bitstring;
                            {56}event beginCli(Cli,Sess,(Login(pkCli,pkSess_94),Passwd(pkCli,pkSess_94)));
                            {57}let m3_101: bitstring = (CSC_100,Login(pkCli,pkSess_94),Passwd(pkCli,pkSess_94)) in
                            {58}out(c, m3_101);
                            {59}in(c, m4_102: bitstring);
                            {60}if (m4_102 <> ActivateSessionResponse) then
                            0
                    )
                    else
                        {61}let skSess_103: bitstring = fail-any in
                        {62}let pkSess_104: bitstring = pub(skSess_103) in
                        {63}let K_105: bitstring = Skey(pkCli,pkSess_104) in
                        {64}let m1_106: bitstring = CreateSessionRequest in
                        {65}out(c, m1_106);
                        {66}in(c, m2_107: bitstring);
                        {67}let (SSC_108: bitstring,Ns2_109: bitstring) = m2_107 in
                        {68}new CSC_110: bitstring;
                        {69}event beginCli(Cli,Sess,(Login(pkCli,pkSess_104),Passwd(pkCli,pkSess_104)));
                        {70}let m3_111: bitstring = (CSC_110,Login(pkCli,pkSess_104),Passwd(pkCli,pkSess_104)) in
                        {71}out(c, m3_111);
                        {72}in(c, m4_112: bitstring);
                        {73}if (m4_112 <> ActivateSessionResponse) then
                        0
            )
            else
                {74}let skSess_113: bitstring = fail-any in
                {75}let pkSess_114: bitstring = pub(skSess_113) in
                {76}let K_115: bitstring = Skey(pkCli,pkSess_114) in
                {77}let m1_116: bitstring = CreateSessionRequest in
                {78}out(c, m1_116);
                {79}in(c, m2_117: bitstring);
                {80}let (SSC_118: bitstring,Ns2_119: bitstring) = m2_117 in
                {81}new CSC_120: bitstring;
                {82}event beginCli(Cli,Sess,(Login(pkCli,pkSess_114),Passwd(pkCli,pkSess_114)));
                {83}let m3_121: bitstring = (CSC_120,Login(pkCli,pkSess_114),Passwd(pkCli,pkSess_114)) in
                {84}out(c, m3_121);
                {85}in(c, m4_122: bitstring);
                {86}if (m4_122 <> ActivateSessionResponse) then
                0
        )
        else
            {87}let v_123: bool = (Cli = B) in
            (
                {88}if v_123 then
                (
                    {89}let skCli_124: bitstring = skB in
                    {90}let pkCli_125: bitstring = pub(skCli_124) in
                    {91}let v_126: bool = (Sess = A) in
                    (
                        {92}if v_126 then
                        (
                            {93}let skSess_127: bitstring = skA in
                            {94}let pkSess_128: bitstring = pub(skSess_127) in
                            {95}let K_129: bitstring = Skey(pkCli_125,pkSess_128) in
                            {96}let m1_130: bitstring = CreateSessionRequest in
                            {97}out(c, m1_130);
                            {98}in(c, m2_131: bitstring);
                            {99}let (SSC_132: bitstring,Ns2_133: bitstring) = m2_131 in
                            {100}new CSC_134: bitstring;
                            {101}event beginCli(Cli,Sess,(Login(pkCli_125,pkSess_128),Passwd(pkCli_125,pkSess_128)));
                            {102}let m3_135: bitstring = (CSC_134,Login(pkCli_125,pkSess_128),Passwd(pkCli_125,pkSess_128)) in
                            {103}out(c, m3_135);
                            {104}in(c, m4_136: bitstring);
                            {105}if (m4_136 <> ActivateSessionResponse) then
                            0
                        )
                        else
                            {106}let v_137: bool = (Sess = B) in
                            (
                                {107}if v_137 then
                                (
                                    {108}let skSess_138: bitstring = skB in
                                    {109}let pkSess_139: bitstring = pub(skSess_138) in
                                    {110}let K_140: bitstring = Skey(pkCli_125,pkSess_139) in
                                    {111}let m1_141: bitstring = CreateSessionRequest in
                                    {112}out(c, m1_141);
                                    {113}in(c, m2_142: bitstring);
                                    {114}let (SSC_143: bitstring,Ns2_144: bitstring) = m2_142 in
                                    {115}new CSC_145: bitstring;
                                    {116}event beginCli(Cli,Sess,(Login(pkCli_125,pkSess_139),Passwd(pkCli_125,pkSess_139)));
                                    {117}let m3_146: bitstring = (CSC_145,Login(pkCli_125,pkSess_139),Passwd(pkCli_125,pkSess_139)) in
                                    {118}out(c, m3_146);
                                    {119}in(c, m4_147: bitstring);
                                    {120}if (m4_147 <> ActivateSessionResponse) then
                                    0
                                )
                                else
                                    {121}let skSess_148: bitstring = skI in
                                    {122}let pkSess_149: bitstring = pub(skSess_148) in
                                    {123}let K_150: bitstring = Skey(pkCli_125,pkSess_149) in
                                    {124}let m1_151: bitstring = CreateSessionRequest in
                                    {125}out(c, m1_151);
                                    {126}in(c, m2_152: bitstring);
                                    {127}let (SSC_153: bitstring,Ns2_154: bitstring) = m2_152 in
                                    {128}new CSC_155: bitstring;
                                    {129}event beginCli(Cli,Sess,(Login(pkCli_125,pkSess_149),Passwd(pkCli_125,pkSess_149)));
                                    {130}let m3_156: bitstring = (CSC_155,Login(pkCli_125,pkSess_149),Passwd(pkCli_125,pkSess_149)) in
                                    {131}out(c, m3_156);
                                    {132}in(c, m4_157: bitstring);
                                    {133}if (m4_157 <> ActivateSessionResponse) then
                                    0
                            )
                            else
                                {134}let skSess_158: bitstring = fail-any in
                                {135}let pkSess_159: bitstring = pub(skSess_158) in
                                {136}let K_160: bitstring = Skey(pkCli_125,pkSess_159) in
                                {137}let m1_161: bitstring = CreateSessionRequest in
                                {138}out(c, m1_161);
                                {139}in(c, m2_162: bitstring);
                                {140}let (SSC_163: bitstring,Ns2_164: bitstring) = m2_162 in
                                {141}new CSC_165: bitstring;
                                {142}event beginCli(Cli,Sess,(Login(pkCli_125,pkSess_159),Passwd(pkCli_125,pkSess_159)));
                                {143}let m3_166: bitstring = (CSC_165,Login(pkCli_125,pkSess_159),Passwd(pkCli_125,pkSess_159)) in
                                {144}out(c, m3_166);
                                {145}in(c, m4_167: bitstring);
                                {146}if (m4_167 <> ActivateSessionResponse) then
                                0
                    )
                    else
                        {147}let skSess_168: bitstring = fail-any in
                        {148}let pkSess_169: bitstring = pub(skSess_168) in
                        {149}let K_170: bitstring = Skey(pkCli_125,pkSess_169) in
                        {150}let m1_171: bitstring = CreateSessionRequest in
                        {151}out(c, m1_171);
                        {152}in(c, m2_172: bitstring);
                        {153}let (SSC_173: bitstring,Ns2_174: bitstring) = m2_172 in
                        {154}new CSC_175: bitstring;
                        {155}event beginCli(Cli,Sess,(Login(pkCli_125,pkSess_169),Passwd(pkCli_125,pkSess_169)));
                        {156}let m3_176: bitstring = (CSC_175,Login(pkCli_125,pkSess_169),Passwd(pkCli_125,pkSess_169)) in
                        {157}out(c, m3_176);
                        {158}in(c, m4_177: bitstring);
                        {159}if (m4_177 <> ActivateSessionResponse) then
                        0
                )
                else
                    {160}let skCli_178: bitstring = skI in
                    {161}let pkCli_179: bitstring = pub(skCli_178) in
                    {162}let v_180: bool = (Sess = A) in
                    (
                        {163}if v_180 then
                        (
                            {164}let skSess_181: bitstring = skA in
                            {165}let pkSess_182: bitstring = pub(skSess_181) in
                            {166}let K_183: bitstring = Skey(pkCli_179,pkSess_182) in
                            {167}let m1_184: bitstring = CreateSessionRequest in
                            {168}out(c, m1_184);
                            {169}in(c, m2_185: bitstring);
                            {170}let (SSC_186: bitstring,Ns2_187: bitstring) = m2_185 in
                            {171}new CSC_188: bitstring;
                            {172}event beginCli(Cli,Sess,(Login(pkCli_179,pkSess_182),Passwd(pkCli_179,pkSess_182)));
                            {173}let m3_189: bitstring = (CSC_188,Login(pkCli_179,pkSess_182),Passwd(pkCli_179,pkSess_182)) in
                            {174}out(c, m3_189);
                            {175}in(c, m4_190: bitstring);
                            {176}if (m4_190 <> ActivateSessionResponse) then
                            0
                        )
                        else
                            {177}let v_191: bool = (Sess = B) in
                            (
                                {178}if v_191 then
                                (
                                    {179}let skSess_192: bitstring = skB in
                                    {180}let pkSess_193: bitstring = pub(skSess_192) in
                                    {181}let K_194: bitstring = Skey(pkCli_179,pkSess_193) in
                                    {182}let m1_195: bitstring = CreateSessionRequest in
                                    {183}out(c, m1_195);
                                    {184}in(c, m2_196: bitstring);
                                    {185}let (SSC_197: bitstring,Ns2_198: bitstring) = m2_196 in
                                    {186}new CSC_199: bitstring;
                                    {187}event beginCli(Cli,Sess,(Login(pkCli_179,pkSess_193),Passwd(pkCli_179,pkSess_193)));
                                    {188}let m3_200: bitstring = (CSC_199,Login(pkCli_179,pkSess_193),Passwd(pkCli_179,pkSess_193)) in
                                    {189}out(c, m3_200);
                                    {190}in(c, m4_201: bitstring);
                                    {191}if (m4_201 <> ActivateSessionResponse) then
                                    0
                                )
                                else
                                    {192}let skSess_202: bitstring = skI in
                                    {193}let pkSess_203: bitstring = pub(skSess_202) in
                                    {194}let K_204: bitstring = Skey(pkCli_179,pkSess_203) in
                                    {195}let m1_205: bitstring = CreateSessionRequest in
                                    {196}out(c, m1_205);
                                    {197}in(c, m2_206: bitstring);
                                    {198}let (SSC_207: bitstring,Ns2_208: bitstring) = m2_206 in
                                    {199}new CSC_209: bitstring;
                                    {200}event beginCli(Cli,Sess,(Login(pkCli_179,pkSess_203),Passwd(pkCli_179,pkSess_203)));
                                    {201}let m3_210: bitstring = (CSC_209,Login(pkCli_179,pkSess_203),Passwd(pkCli_179,pkSess_203)) in
                                    {202}out(c, m3_210);
                                    {203}in(c, m4_211: bitstring);
                                    {204}if (m4_211 <> ActivateSessionResponse) then
                                    0
                            )
                            else
                                {205}let skSess_212: bitstring = fail-any in
                                {206}let pkSess_213: bitstring = pub(skSess_212) in
                                {207}let K_214: bitstring = Skey(pkCli_179,pkSess_213) in
                                {208}let m1_215: bitstring = CreateSessionRequest in
                                {209}out(c, m1_215);
                                {210}in(c, m2_216: bitstring);
                                {211}let (SSC_217: bitstring,Ns2_218: bitstring) = m2_216 in
                                {212}new CSC_219: bitstring;
                                {213}event beginCli(Cli,Sess,(Login(pkCli_179,pkSess_213),Passwd(pkCli_179,pkSess_213)));
                                {214}let m3_220: bitstring = (CSC_219,Login(pkCli_179,pkSess_213),Passwd(pkCli_179,pkSess_213)) in
                                {215}out(c, m3_220);
                                {216}in(c, m4_221: bitstring);
                                {217}if (m4_221 <> ActivateSessionResponse) then
                                0
                    )
                    else
                        {218}let skSess_222: bitstring = fail-any in
                        {219}let pkSess_223: bitstring = pub(skSess_222) in
                        {220}let K_224: bitstring = Skey(pkCli_179,pkSess_223) in
                        {221}let m1_225: bitstring = CreateSessionRequest in
                        {222}out(c, m1_225);
                        {223}in(c, m2_226: bitstring);
                        {224}let (SSC_227: bitstring,Ns2_228: bitstring) = m2_226 in
                        {225}new CSC_229: bitstring;
                        {226}event beginCli(Cli,Sess,(Login(pkCli_179,pkSess_223),Passwd(pkCli_179,pkSess_223)));
                        {227}let m3_230: bitstring = (CSC_229,Login(pkCli_179,pkSess_223),Passwd(pkCli_179,pkSess_223)) in
                        {228}out(c, m3_230);
                        {229}in(c, m4_231: bitstring);
                        {230}if (m4_231 <> ActivateSessionResponse) then
                        0
            )
            else
                {231}let skCli_232: bitstring = fail-any in
                {232}let pkCli_233: bitstring = pub(skCli_232) in
                {233}let v_234: bool = (Sess = A) in
                (
                    {234}if v_234 then
                    (
                        {235}let skSess_235: bitstring = skA in
                        {236}let pkSess_236: bitstring = pub(skSess_235) in
                        {237}let K_237: bitstring = Skey(pkCli_233,pkSess_236) in
                        {238}let m1_238: bitstring = CreateSessionRequest in
                        {239}out(c, m1_238);
                        {240}in(c, m2_239: bitstring);
                        {241}let (SSC_240: bitstring,Ns2_241: bitstring) = m2_239 in
                        {242}new CSC_242: bitstring;
                        {243}event beginCli(Cli,Sess,(Login(pkCli_233,pkSess_236),Passwd(pkCli_233,pkSess_236)));
                        {244}let m3_243: bitstring = (CSC_242,Login(pkCli_233,pkSess_236),Passwd(pkCli_233,pkSess_236)) in
                        {245}out(c, m3_243);
                        {246}in(c, m4_244: bitstring);
                        {247}if (m4_244 <> ActivateSessionResponse) then
                        0
                    )
                    else
                        {248}let v_245: bool = (Sess = B) in
                        (
                            {249}if v_245 then
                            (
                                {250}let skSess_246: bitstring = skB in
                                {251}let pkSess_247: bitstring = pub(skSess_246) in
                                {252}let K_248: bitstring = Skey(pkCli_233,pkSess_247) in
                                {253}let m1_249: bitstring = CreateSessionRequest in
                                {254}out(c, m1_249);
                                {255}in(c, m2_250: bitstring);
                                {256}let (SSC_251: bitstring,Ns2_252: bitstring) = m2_250 in
                                {257}new CSC_253: bitstring;
                                {258}event beginCli(Cli,Sess,(Login(pkCli_233,pkSess_247),Passwd(pkCli_233,pkSess_247)));
                                {259}let m3_254: bitstring = (CSC_253,Login(pkCli_233,pkSess_247),Passwd(pkCli_233,pkSess_247)) in
                                {260}out(c, m3_254);
                                {261}in(c, m4_255: bitstring);
                                {262}if (m4_255 <> ActivateSessionResponse) then
                                0
                            )
                            else
                                {263}let skSess_256: bitstring = skI in
                                {264}let pkSess_257: bitstring = pub(skSess_256) in
                                {265}let K_258: bitstring = Skey(pkCli_233,pkSess_257) in
                                {266}let m1_259: bitstring = CreateSessionRequest in
                                {267}out(c, m1_259);
                                {268}in(c, m2_260: bitstring);
                                {269}let (SSC_261: bitstring,Ns2_262: bitstring) = m2_260 in
                                {270}new CSC_263: bitstring;
                                {271}event beginCli(Cli,Sess,(Login(pkCli_233,pkSess_257),Passwd(pkCli_233,pkSess_257)));
                                {272}let m3_264: bitstring = (CSC_263,Login(pkCli_233,pkSess_257),Passwd(pkCli_233,pkSess_257)) in
                                {273}out(c, m3_264);
                                {274}in(c, m4_265: bitstring);
                                {275}if (m4_265 <> ActivateSessionResponse) then
                                0
                        )
                        else
                            {276}let skSess_266: bitstring = fail-any in
                            {277}let pkSess_267: bitstring = pub(skSess_266) in
                            {278}let K_268: bitstring = Skey(pkCli_233,pkSess_267) in
                            {279}let m1_269: bitstring = CreateSessionRequest in
                            {280}out(c, m1_269);
                            {281}in(c, m2_270: bitstring);
                            {282}let (SSC_271: bitstring,Ns2_272: bitstring) = m2_270 in
                            {283}new CSC_273: bitstring;
                            {284}event beginCli(Cli,Sess,(Login(pkCli_233,pkSess_267),Passwd(pkCli_233,pkSess_267)));
                            {285}let m3_274: bitstring = (CSC_273,Login(pkCli_233,pkSess_267),Passwd(pkCli_233,pkSess_267)) in
                            {286}out(c, m3_274);
                            {287}in(c, m4_275: bitstring);
                            {288}if (m4_275 <> ActivateSessionResponse) then
                            0
                )
                else
                    {289}let skSess_276: bitstring = fail-any in
                    {290}let pkSess_277: bitstring = pub(skSess_276) in
                    {291}let K_278: bitstring = Skey(pkCli_233,pkSess_277) in
                    {292}let m1_279: bitstring = CreateSessionRequest in
                    {293}out(c, m1_279);
                    {294}in(c, m2_280: bitstring);
                    {295}let (SSC_281: bitstring,Ns2_282: bitstring) = m2_280 in
                    {296}new CSC_283: bitstring;
                    {297}event beginCli(Cli,Sess,(Login(pkCli_233,pkSess_277),Passwd(pkCli_233,pkSess_277)));
                    {298}let m3_284: bitstring = (CSC_283,Login(pkCli_233,pkSess_277),Passwd(pkCli_233,pkSess_277)) in
                    {299}out(c, m3_284);
                    {300}in(c, m4_285: bitstring);
                    {301}if (m4_285 <> ActivateSessionResponse) then
                    0
    )
    else
        {302}let skCli_286: bitstring = fail-any in
        {303}let pkCli_287: bitstring = pub(skCli_286) in
        {304}let v_288: bool = (Sess = A) in
        (
            {305}if v_288 then
            (
                {306}let skSess_289: bitstring = skA in
                {307}let pkSess_290: bitstring = pub(skSess_289) in
                {308}let K_291: bitstring = Skey(pkCli_287,pkSess_290) in
                {309}let m1_292: bitstring = CreateSessionRequest in
                {310}out(c, m1_292);
                {311}in(c, m2_293: bitstring);
                {312}let (SSC_294: bitstring,Ns2_295: bitstring) = m2_293 in
                {313}new CSC_296: bitstring;
                {314}event beginCli(Cli,Sess,(Login(pkCli_287,pkSess_290),Passwd(pkCli_287,pkSess_290)));
                {315}let m3_297: bitstring = (CSC_296,Login(pkCli_287,pkSess_290),Passwd(pkCli_287,pkSess_290)) in
                {316}out(c, m3_297);
                {317}in(c, m4_298: bitstring);
                {318}if (m4_298 <> ActivateSessionResponse) then
                0
            )
            else
                {319}let v_299: bool = (Sess = B) in
                (
                    {320}if v_299 then
                    (
                        {321}let skSess_300: bitstring = skB in
                        {322}let pkSess_301: bitstring = pub(skSess_300) in
                        {323}let K_302: bitstring = Skey(pkCli_287,pkSess_301) in
                        {324}let m1_303: bitstring = CreateSessionRequest in
                        {325}out(c, m1_303);
                        {326}in(c, m2_304: bitstring);
                        {327}let (SSC_305: bitstring,Ns2_306: bitstring) = m2_304 in
                        {328}new CSC_307: bitstring;
                        {329}event beginCli(Cli,Sess,(Login(pkCli_287,pkSess_301),Passwd(pkCli_287,pkSess_301)));
                        {330}let m3_308: bitstring = (CSC_307,Login(pkCli_287,pkSess_301),Passwd(pkCli_287,pkSess_301)) in
                        {331}out(c, m3_308);
                        {332}in(c, m4_309: bitstring);
                        {333}if (m4_309 <> ActivateSessionResponse) then
                        0
                    )
                    else
                        {334}let skSess_310: bitstring = skI in
                        {335}let pkSess_311: bitstring = pub(skSess_310) in
                        {336}let K_312: bitstring = Skey(pkCli_287,pkSess_311) in
                        {337}let m1_313: bitstring = CreateSessionRequest in
                        {338}out(c, m1_313);
                        {339}in(c, m2_314: bitstring);
                        {340}let (SSC_315: bitstring,Ns2_316: bitstring) = m2_314 in
                        {341}new CSC_317: bitstring;
                        {342}event beginCli(Cli,Sess,(Login(pkCli_287,pkSess_311),Passwd(pkCli_287,pkSess_311)));
                        {343}let m3_318: bitstring = (CSC_317,Login(pkCli_287,pkSess_311),Passwd(pkCli_287,pkSess_311)) in
                        {344}out(c, m3_318);
                        {345}in(c, m4_319: bitstring);
                        {346}if (m4_319 <> ActivateSessionResponse) then
                        0
                )
                else
                    {347}let skSess_320: bitstring = fail-any in
                    {348}let pkSess_321: bitstring = pub(skSess_320) in
                    {349}let K_322: bitstring = Skey(pkCli_287,pkSess_321) in
                    {350}let m1_323: bitstring = CreateSessionRequest in
                    {351}out(c, m1_323);
                    {352}in(c, m2_324: bitstring);
                    {353}let (SSC_325: bitstring,Ns2_326: bitstring) = m2_324 in
                    {354}new CSC_327: bitstring;
                    {355}event beginCli(Cli,Sess,(Login(pkCli_287,pkSess_321),Passwd(pkCli_287,pkSess_321)));
                    {356}let m3_328: bitstring = (CSC_327,Login(pkCli_287,pkSess_321),Passwd(pkCli_287,pkSess_321)) in
                    {357}out(c, m3_328);
                    {358}in(c, m4_329: bitstring);
                    {359}if (m4_329 <> ActivateSessionResponse) then
                    0
        )
        else
            {360}let skSess_330: bitstring = fail-any in
            {361}let pkSess_331: bitstring = pub(skSess_330) in
            {362}let K_332: bitstring = Skey(pkCli_287,pkSess_331) in
            {363}let m1_333: bitstring = CreateSessionRequest in
            {364}out(c, m1_333);
            {365}in(c, m2_334: bitstring);
            {366}let (SSC_335: bitstring,Ns2_336: bitstring) = m2_334 in
            {367}new CSC_337: bitstring;
            {368}event beginCli(Cli,Sess,(Login(pkCli_287,pkSess_331),Passwd(pkCli_287,pkSess_331)));
            {369}let m3_338: bitstring = (CSC_337,Login(pkCli_287,pkSess_331),Passwd(pkCli_287,pkSess_331)) in
            {370}out(c, m3_338);
            {371}in(c, m4_339: bitstring);
            {372}if (m4_339 <> ActivateSessionResponse) then
            0
) | (
    {373}!
    {374}in(c, (Cli_340: host,Sess_341: host));
    {375}let v_342: bool = (Cli_340 = A) in
    (
        {376}if v_342 then
        (
            {377}let skCli_343: bitstring = skA in
            {378}let pkCli_344: bitstring = pub(skCli_343) in
            {379}let v_345: bool = (Sess_341 = A) in
            (
                {380}if v_345 then
                (
                    {381}let skSess_346: bitstring = skA in
                    {382}let pkSess_347: bitstring = pub(skSess_346) in
                    {383}let K_348: bitstring = Skey(pkCli_344,pkSess_347) in
                    {384}in(c, m1_349: bitstring);
                    {385}if (m1_349 <> CreateSessionRequest) then
                        0
                    else
                        {386}new SSC_350: bitstring;
                        {387}new Ns2_351: bitstring;
                        {388}let m2_352: bitstring = (SSC_350,Ns2_351) in
                        {389}out(c, m2_352);
                        {390}in(c, m3_353: bitstring);
                        {391}let (=Login(pkCli_344,pkSess_347),=Passwd(pkCli_344,pkSess_347)) = m3_353 in
                        {392}event endSrv(Cli_340,Sess_341,(Login(pkCli_344,pkSess_347),Passwd(pkCli_344,pkSess_347)));
                        {393}let m4_354: bitstring = ActivateSessionResponse in
                        {394}out(c, m4_354)
                )
                else
                    {395}let v_355: bool = (Sess_341 = B) in
                    (
                        {396}if v_355 then
                        (
                            {397}let skSess_356: bitstring = skB in
                            {398}let pkSess_357: bitstring = pub(skSess_356) in
                            {399}let K_358: bitstring = Skey(pkCli_344,pkSess_357) in
                            {400}in(c, m1_359: bitstring);
                            {401}if (m1_359 <> CreateSessionRequest) then
                                0
                            else
                                {402}new SSC_360: bitstring;
                                {403}new Ns2_361: bitstring;
                                {404}let m2_362: bitstring = (SSC_360,Ns2_361) in
                                {405}out(c, m2_362);
                                {406}in(c, m3_363: bitstring);
                                {407}let (=Login(pkCli_344,pkSess_357),=Passwd(pkCli_344,pkSess_357)) = m3_363 in
                                {408}event endSrv(Cli_340,Sess_341,(Login(pkCli_344,pkSess_357),Passwd(pkCli_344,pkSess_357)));
                                {409}let m4_364: bitstring = ActivateSessionResponse in
                                {410}out(c, m4_364)
                        )
                        else
                            {411}let skSess_365: bitstring = skI in
                            {412}let pkSess_366: bitstring = pub(skSess_365) in
                            {413}let K_367: bitstring = Skey(pkCli_344,pkSess_366) in
                            {414}in(c, m1_368: bitstring);
                            {415}if (m1_368 <> CreateSessionRequest) then
                                0
                            else
                                {416}new SSC_369: bitstring;
                                {417}new Ns2_370: bitstring;
                                {418}let m2_371: bitstring = (SSC_369,Ns2_370) in
                                {419}out(c, m2_371);
                                {420}in(c, m3_372: bitstring);
                                {421}let (=Login(pkCli_344,pkSess_366),=Passwd(pkCli_344,pkSess_366)) = m3_372 in
                                {422}event endSrv(Cli_340,Sess_341,(Login(pkCli_344,pkSess_366),Passwd(pkCli_344,pkSess_366)));
                                {423}let m4_373: bitstring = ActivateSessionResponse in
                                {424}out(c, m4_373)
                    )
                    else
                        {425}let skSess_374: bitstring = fail-any in
                        {426}let pkSess_375: bitstring = pub(skSess_374) in
                        {427}let K_376: bitstring = Skey(pkCli_344,pkSess_375) in
                        {428}in(c, m1_377: bitstring);
                        {429}if (m1_377 <> CreateSessionRequest) then
                            0
                        else
                            {430}new SSC_378: bitstring;
                            {431}new Ns2_379: bitstring;
                            {432}let m2_380: bitstring = (SSC_378,Ns2_379) in
                            {433}out(c, m2_380);
                            {434}in(c, m3_381: bitstring);
                            {435}let (=Login(pkCli_344,pkSess_375),=Passwd(pkCli_344,pkSess_375)) = m3_381 in
                            {436}event endSrv(Cli_340,Sess_341,(Login(pkCli_344,pkSess_375),Passwd(pkCli_344,pkSess_375)));
                            {437}let m4_382: bitstring = ActivateSessionResponse in
                            {438}out(c, m4_382)
            )
            else
                {439}let skSess_383: bitstring = fail-any in
                {440}let pkSess_384: bitstring = pub(skSess_383) in
                {441}let K_385: bitstring = Skey(pkCli_344,pkSess_384) in
                {442}in(c, m1_386: bitstring);
                {443}if (m1_386 <> CreateSessionRequest) then
                    0
                else
                    {444}new SSC_387: bitstring;
                    {445}new Ns2_388: bitstring;
                    {446}let m2_389: bitstring = (SSC_387,Ns2_388) in
                    {447}out(c, m2_389);
                    {448}in(c, m3_390: bitstring);
                    {449}let (=Login(pkCli_344,pkSess_384),=Passwd(pkCli_344,pkSess_384)) = m3_390 in
                    {450}event endSrv(Cli_340,Sess_341,(Login(pkCli_344,pkSess_384),Passwd(pkCli_344,pkSess_384)));
                    {451}let m4_391: bitstring = ActivateSessionResponse in
                    {452}out(c, m4_391)
        )
        else
            {453}let v_392: bool = (Cli_340 = B) in
            (
                {454}if v_392 then
                (
                    {455}let skCli_393: bitstring = skB in
                    {456}let pkCli_394: bitstring = pub(skCli_393) in
                    {457}let v_395: bool = (Sess_341 = A) in
                    (
                        {458}if v_395 then
                        (
                            {459}let skSess_396: bitstring = skA in
                            {460}let pkSess_397: bitstring = pub(skSess_396) in
                            {461}let K_398: bitstring = Skey(pkCli_394,pkSess_397) in
                            {462}in(c, m1_399: bitstring);
                            {463}if (m1_399 <> CreateSessionRequest) then
                                0
                            else
                                {464}new SSC_400: bitstring;
                                {465}new Ns2_401: bitstring;
                                {466}let m2_402: bitstring = (SSC_400,Ns2_401) in
                                {467}out(c, m2_402);
                                {468}in(c, m3_403: bitstring);
                                {469}let (=Login(pkCli_394,pkSess_397),=Passwd(pkCli_394,pkSess_397)) = m3_403 in
                                {470}event endSrv(Cli_340,Sess_341,(Login(pkCli_394,pkSess_397),Passwd(pkCli_394,pkSess_397)));
                                {471}let m4_404: bitstring = ActivateSessionResponse in
                                {472}out(c, m4_404)
                        )
                        else
                            {473}let v_405: bool = (Sess_341 = B) in
                            (
                                {474}if v_405 then
                                (
                                    {475}let skSess_406: bitstring = skB in
                                    {476}let pkSess_407: bitstring = pub(skSess_406) in
                                    {477}let K_408: bitstring = Skey(pkCli_394,pkSess_407) in
                                    {478}in(c, m1_409: bitstring);
                                    {479}if (m1_409 <> CreateSessionRequest) then
                                        0
                                    else
                                        {480}new SSC_410: bitstring;
                                        {481}new Ns2_411: bitstring;
                                        {482}let m2_412: bitstring = (SSC_410,Ns2_411) in
                                        {483}out(c, m2_412);
                                        {484}in(c, m3_413: bitstring);
                                        {485}let (=Login(pkCli_394,pkSess_407),=Passwd(pkCli_394,pkSess_407)) = m3_413 in
                                        {486}event endSrv(Cli_340,Sess_341,(Login(pkCli_394,pkSess_407),Passwd(pkCli_394,pkSess_407)));
                                        {487}let m4_414: bitstring = ActivateSessionResponse in
                                        {488}out(c, m4_414)
                                )
                                else
                                    {489}let skSess_415: bitstring = skI in
                                    {490}let pkSess_416: bitstring = pub(skSess_415) in
                                    {491}let K_417: bitstring = Skey(pkCli_394,pkSess_416) in
                                    {492}in(c, m1_418: bitstring);
                                    {493}if (m1_418 <> CreateSessionRequest) then
                                        0
                                    else
                                        {494}new SSC_419: bitstring;
                                        {495}new Ns2_420: bitstring;
                                        {496}let m2_421: bitstring = (SSC_419,Ns2_420) in
                                        {497}out(c, m2_421);
                                        {498}in(c, m3_422: bitstring);
                                        {499}let (=Login(pkCli_394,pkSess_416),=Passwd(pkCli_394,pkSess_416)) = m3_422 in
                                        {500}event endSrv(Cli_340,Sess_341,(Login(pkCli_394,pkSess_416),Passwd(pkCli_394,pkSess_416)));
                                        {501}let m4_423: bitstring = ActivateSessionResponse in
                                        {502}out(c, m4_423)
                            )
                            else
                                {503}let skSess_424: bitstring = fail-any in
                                {504}let pkSess_425: bitstring = pub(skSess_424) in
                                {505}let K_426: bitstring = Skey(pkCli_394,pkSess_425) in
                                {506}in(c, m1_427: bitstring);
                                {507}if (m1_427 <> CreateSessionRequest) then
                                    0
                                else
                                    {508}new SSC_428: bitstring;
                                    {509}new Ns2_429: bitstring;
                                    {510}let m2_430: bitstring = (SSC_428,Ns2_429) in
                                    {511}out(c, m2_430);
                                    {512}in(c, m3_431: bitstring);
                                    {513}let (=Login(pkCli_394,pkSess_425),=Passwd(pkCli_394,pkSess_425)) = m3_431 in
                                    {514}event endSrv(Cli_340,Sess_341,(Login(pkCli_394,pkSess_425),Passwd(pkCli_394,pkSess_425)));
                                    {515}let m4_432: bitstring = ActivateSessionResponse in
                                    {516}out(c, m4_432)
                    )
                    else
                        {517}let skSess_433: bitstring = fail-any in
                        {518}let pkSess_434: bitstring = pub(skSess_433) in
                        {519}let K_435: bitstring = Skey(pkCli_394,pkSess_434) in
                        {520}in(c, m1_436: bitstring);
                        {521}if (m1_436 <> CreateSessionRequest) then
                            0
                        else
                            {522}new SSC_437: bitstring;
                            {523}new Ns2_438: bitstring;
                            {524}let m2_439: bitstring = (SSC_437,Ns2_438) in
                            {525}out(c, m2_439);
                            {526}in(c, m3_440: bitstring);
                            {527}let (=Login(pkCli_394,pkSess_434),=Passwd(pkCli_394,pkSess_434)) = m3_440 in
                            {528}event endSrv(Cli_340,Sess_341,(Login(pkCli_394,pkSess_434),Passwd(pkCli_394,pkSess_434)));
                            {529}let m4_441: bitstring = ActivateSessionResponse in
                            {530}out(c, m4_441)
                )
                else
                    {531}let skCli_442: bitstring = skI in
                    {532}let pkCli_443: bitstring = pub(skCli_442) in
                    {533}let v_444: bool = (Sess_341 = A) in
                    (
                        {534}if v_444 then
                        (
                            {535}let skSess_445: bitstring = skA in
                            {536}let pkSess_446: bitstring = pub(skSess_445) in
                            {537}let K_447: bitstring = Skey(pkCli_443,pkSess_446) in
                            {538}in(c, m1_448: bitstring);
                            {539}if (m1_448 <> CreateSessionRequest) then
                                0
                            else
                                {540}new SSC_449: bitstring;
                                {541}new Ns2_450: bitstring;
                                {542}let m2_451: bitstring = (SSC_449,Ns2_450) in
                                {543}out(c, m2_451);
                                {544}in(c, m3_452: bitstring);
                                {545}let (=Login(pkCli_443,pkSess_446),=Passwd(pkCli_443,pkSess_446)) = m3_452 in
                                {546}event endSrv(Cli_340,Sess_341,(Login(pkCli_443,pkSess_446),Passwd(pkCli_443,pkSess_446)));
                                {547}let m4_453: bitstring = ActivateSessionResponse in
                                {548}out(c, m4_453)
                        )
                        else
                            {549}let v_454: bool = (Sess_341 = B) in
                            (
                                {550}if v_454 then
                                (
                                    {551}let skSess_455: bitstring = skB in
                                    {552}let pkSess_456: bitstring = pub(skSess_455) in
                                    {553}let K_457: bitstring = Skey(pkCli_443,pkSess_456) in
                                    {554}in(c, m1_458: bitstring);
                                    {555}if (m1_458 <> CreateSessionRequest) then
                                        0
                                    else
                                        {556}new SSC_459: bitstring;
                                        {557}new Ns2_460: bitstring;
                                        {558}let m2_461: bitstring = (SSC_459,Ns2_460) in
                                        {559}out(c, m2_461);
                                        {560}in(c, m3_462: bitstring);
                                        {561}let (=Login(pkCli_443,pkSess_456),=Passwd(pkCli_443,pkSess_456)) = m3_462 in
                                        {562}event endSrv(Cli_340,Sess_341,(Login(pkCli_443,pkSess_456),Passwd(pkCli_443,pkSess_456)));
                                        {563}let m4_463: bitstring = ActivateSessionResponse in
                                        {564}out(c, m4_463)
                                )
                                else
                                    {565}let skSess_464: bitstring = skI in
                                    {566}let pkSess_465: bitstring = pub(skSess_464) in
                                    {567}let K_466: bitstring = Skey(pkCli_443,pkSess_465) in
                                    {568}in(c, m1_467: bitstring);
                                    {569}if (m1_467 <> CreateSessionRequest) then
                                        0
                                    else
                                        {570}new SSC_468: bitstring;
                                        {571}new Ns2_469: bitstring;
                                        {572}let m2_470: bitstring = (SSC_468,Ns2_469) in
                                        {573}out(c, m2_470);
                                        {574}in(c, m3_471: bitstring);
                                        {575}let (=Login(pkCli_443,pkSess_465),=Passwd(pkCli_443,pkSess_465)) = m3_471 in
                                        {576}event endSrv(Cli_340,Sess_341,(Login(pkCli_443,pkSess_465),Passwd(pkCli_443,pkSess_465)));
                                        {577}let m4_472: bitstring = ActivateSessionResponse in
                                        {578}out(c, m4_472)
                            )
                            else
                                {579}let skSess_473: bitstring = fail-any in
                                {580}let pkSess_474: bitstring = pub(skSess_473) in
                                {581}let K_475: bitstring = Skey(pkCli_443,pkSess_474) in
                                {582}in(c, m1_476: bitstring);
                                {583}if (m1_476 <> CreateSessionRequest) then
                                    0
                                else
                                    {584}new SSC_477: bitstring;
                                    {585}new Ns2_478: bitstring;
                                    {586}let m2_479: bitstring = (SSC_477,Ns2_478) in
                                    {587}out(c, m2_479);
                                    {588}in(c, m3_480: bitstring);
                                    {589}let (=Login(pkCli_443,pkSess_474),=Passwd(pkCli_443,pkSess_474)) = m3_480 in
                                    {590}event endSrv(Cli_340,Sess_341,(Login(pkCli_443,pkSess_474),Passwd(pkCli_443,pkSess_474)));
                                    {591}let m4_481: bitstring = ActivateSessionResponse in
                                    {592}out(c, m4_481)
                    )
                    else
                        {593}let skSess_482: bitstring = fail-any in
                        {594}let pkSess_483: bitstring = pub(skSess_482) in
                        {595}let K_484: bitstring = Skey(pkCli_443,pkSess_483) in
                        {596}in(c, m1_485: bitstring);
                        {597}if (m1_485 <> CreateSessionRequest) then
                            0
                        else
                            {598}new SSC_486: bitstring;
                            {599}new Ns2_487: bitstring;
                            {600}let m2_488: bitstring = (SSC_486,Ns2_487) in
                            {601}out(c, m2_488);
                            {602}in(c, m3_489: bitstring);
                            {603}let (=Login(pkCli_443,pkSess_483),=Passwd(pkCli_443,pkSess_483)) = m3_489 in
                            {604}event endSrv(Cli_340,Sess_341,(Login(pkCli_443,pkSess_483),Passwd(pkCli_443,pkSess_483)));
                            {605}let m4_490: bitstring = ActivateSessionResponse in
                            {606}out(c, m4_490)
            )
            else
                {607}let skCli_491: bitstring = fail-any in
                {608}let pkCli_492: bitstring = pub(skCli_491) in
                {609}let v_493: bool = (Sess_341 = A) in
                (
                    {610}if v_493 then
                    (
                        {611}let skSess_494: bitstring = skA in
                        {612}let pkSess_495: bitstring = pub(skSess_494) in
                        {613}let K_496: bitstring = Skey(pkCli_492,pkSess_495) in
                        {614}in(c, m1_497: bitstring);
                        {615}if (m1_497 <> CreateSessionRequest) then
                            0
                        else
                            {616}new SSC_498: bitstring;
                            {617}new Ns2_499: bitstring;
                            {618}let m2_500: bitstring = (SSC_498,Ns2_499) in
                            {619}out(c, m2_500);
                            {620}in(c, m3_501: bitstring);
                            {621}let (=Login(pkCli_492,pkSess_495),=Passwd(pkCli_492,pkSess_495)) = m3_501 in
                            {622}event endSrv(Cli_340,Sess_341,(Login(pkCli_492,pkSess_495),Passwd(pkCli_492,pkSess_495)));
                            {623}let m4_502: bitstring = ActivateSessionResponse in
                            {624}out(c, m4_502)
                    )
                    else
                        {625}let v_503: bool = (Sess_341 = B) in
                        (
                            {626}if v_503 then
                            (
                                {627}let skSess_504: bitstring = skB in
                                {628}let pkSess_505: bitstring = pub(skSess_504) in
                                {629}let K_506: bitstring = Skey(pkCli_492,pkSess_505) in
                                {630}in(c, m1_507: bitstring);
                                {631}if (m1_507 <> CreateSessionRequest) then
                                    0
                                else
                                    {632}new SSC_508: bitstring;
                                    {633}new Ns2_509: bitstring;
                                    {634}let m2_510: bitstring = (SSC_508,Ns2_509) in
                                    {635}out(c, m2_510);
                                    {636}in(c, m3_511: bitstring);
                                    {637}let (=Login(pkCli_492,pkSess_505),=Passwd(pkCli_492,pkSess_505)) = m3_511 in
                                    {638}event endSrv(Cli_340,Sess_341,(Login(pkCli_492,pkSess_505),Passwd(pkCli_492,pkSess_505)));
                                    {639}let m4_512: bitstring = ActivateSessionResponse in
                                    {640}out(c, m4_512)
                            )
                            else
                                {641}let skSess_513: bitstring = skI in
                                {642}let pkSess_514: bitstring = pub(skSess_513) in
                                {643}let K_515: bitstring = Skey(pkCli_492,pkSess_514) in
                                {644}in(c, m1_516: bitstring);
                                {645}if (m1_516 <> CreateSessionRequest) then
                                    0
                                else
                                    {646}new SSC_517: bitstring;
                                    {647}new Ns2_518: bitstring;
                                    {648}let m2_519: bitstring = (SSC_517,Ns2_518) in
                                    {649}out(c, m2_519);
                                    {650}in(c, m3_520: bitstring);
                                    {651}let (=Login(pkCli_492,pkSess_514),=Passwd(pkCli_492,pkSess_514)) = m3_520 in
                                    {652}event endSrv(Cli_340,Sess_341,(Login(pkCli_492,pkSess_514),Passwd(pkCli_492,pkSess_514)));
                                    {653}let m4_521: bitstring = ActivateSessionResponse in
                                    {654}out(c, m4_521)
                        )
                        else
                            {655}let skSess_522: bitstring = fail-any in
                            {656}let pkSess_523: bitstring = pub(skSess_522) in
                            {657}let K_524: bitstring = Skey(pkCli_492,pkSess_523) in
                            {658}in(c, m1_525: bitstring);
                            {659}if (m1_525 <> CreateSessionRequest) then
                                0
                            else
                                {660}new SSC_526: bitstring;
                                {661}new Ns2_527: bitstring;
                                {662}let m2_528: bitstring = (SSC_526,Ns2_527) in
                                {663}out(c, m2_528);
                                {664}in(c, m3_529: bitstring);
                                {665}let (=Login(pkCli_492,pkSess_523),=Passwd(pkCli_492,pkSess_523)) = m3_529 in
                                {666}event endSrv(Cli_340,Sess_341,(Login(pkCli_492,pkSess_523),Passwd(pkCli_492,pkSess_523)));
                                {667}let m4_530: bitstring = ActivateSessionResponse in
                                {668}out(c, m4_530)
                )
                else
                    {669}let skSess_531: bitstring = fail-any in
                    {670}let pkSess_532: bitstring = pub(skSess_531) in
                    {671}let K_533: bitstring = Skey(pkCli_492,pkSess_532) in
                    {672}in(c, m1_534: bitstring);
                    {673}if (m1_534 <> CreateSessionRequest) then
                        0
                    else
                        {674}new SSC_535: bitstring;
                        {675}new Ns2_536: bitstring;
                        {676}let m2_537: bitstring = (SSC_535,Ns2_536) in
                        {677}out(c, m2_537);
                        {678}in(c, m3_538: bitstring);
                        {679}let (=Login(pkCli_492,pkSess_532),=Passwd(pkCli_492,pkSess_532)) = m3_538 in
                        {680}event endSrv(Cli_340,Sess_341,(Login(pkCli_492,pkSess_532),Passwd(pkCli_492,pkSess_532)));
                        {681}let m4_539: bitstring = ActivateSessionResponse in
                        {682}out(c, m4_539)
    )
    else
        {683}let skCli_540: bitstring = fail-any in
        {684}let pkCli_541: bitstring = pub(skCli_540) in
        {685}let v_542: bool = (Sess_341 = A) in
        (
            {686}if v_542 then
            (
                {687}let skSess_543: bitstring = skA in
                {688}let pkSess_544: bitstring = pub(skSess_543) in
                {689}let K_545: bitstring = Skey(pkCli_541,pkSess_544) in
                {690}in(c, m1_546: bitstring);
                {691}if (m1_546 <> CreateSessionRequest) then
                    0
                else
                    {692}new SSC_547: bitstring;
                    {693}new Ns2_548: bitstring;
                    {694}let m2_549: bitstring = (SSC_547,Ns2_548) in
                    {695}out(c, m2_549);
                    {696}in(c, m3_550: bitstring);
                    {697}let (=Login(pkCli_541,pkSess_544),=Passwd(pkCli_541,pkSess_544)) = m3_550 in
                    {698}event endSrv(Cli_340,Sess_341,(Login(pkCli_541,pkSess_544),Passwd(pkCli_541,pkSess_544)));
                    {699}let m4_551: bitstring = ActivateSessionResponse in
                    {700}out(c, m4_551)
            )
            else
                {701}let v_552: bool = (Sess_341 = B) in
                (
                    {702}if v_552 then
                    (
                        {703}let skSess_553: bitstring = skB in
                        {704}let pkSess_554: bitstring = pub(skSess_553) in
                        {705}let K_555: bitstring = Skey(pkCli_541,pkSess_554) in
                        {706}in(c, m1_556: bitstring);
                        {707}if (m1_556 <> CreateSessionRequest) then
                            0
                        else
                            {708}new SSC_557: bitstring;
                            {709}new Ns2_558: bitstring;
                            {710}let m2_559: bitstring = (SSC_557,Ns2_558) in
                            {711}out(c, m2_559);
                            {712}in(c, m3_560: bitstring);
                            {713}let (=Login(pkCli_541,pkSess_554),=Passwd(pkCli_541,pkSess_554)) = m3_560 in
                            {714}event endSrv(Cli_340,Sess_341,(Login(pkCli_541,pkSess_554),Passwd(pkCli_541,pkSess_554)));
                            {715}let m4_561: bitstring = ActivateSessionResponse in
                            {716}out(c, m4_561)
                    )
                    else
                        {717}let skSess_562: bitstring = skI in
                        {718}let pkSess_563: bitstring = pub(skSess_562) in
                        {719}let K_564: bitstring = Skey(pkCli_541,pkSess_563) in
                        {720}in(c, m1_565: bitstring);
                        {721}if (m1_565 <> CreateSessionRequest) then
                            0
                        else
                            {722}new SSC_566: bitstring;
                            {723}new Ns2_567: bitstring;
                            {724}let m2_568: bitstring = (SSC_566,Ns2_567) in
                            {725}out(c, m2_568);
                            {726}in(c, m3_569: bitstring);
                            {727}let (=Login(pkCli_541,pkSess_563),=Passwd(pkCli_541,pkSess_563)) = m3_569 in
                            {728}event endSrv(Cli_340,Sess_341,(Login(pkCli_541,pkSess_563),Passwd(pkCli_541,pkSess_563)));
                            {729}let m4_570: bitstring = ActivateSessionResponse in
                            {730}out(c, m4_570)
                )
                else
                    {731}let skSess_571: bitstring = fail-any in
                    {732}let pkSess_572: bitstring = pub(skSess_571) in
                    {733}let K_573: bitstring = Skey(pkCli_541,pkSess_572) in
                    {734}in(c, m1_574: bitstring);
                    {735}if (m1_574 <> CreateSessionRequest) then
                        0
                    else
                        {736}new SSC_575: bitstring;
                        {737}new Ns2_576: bitstring;
                        {738}let m2_577: bitstring = (SSC_575,Ns2_576) in
                        {739}out(c, m2_577);
                        {740}in(c, m3_578: bitstring);
                        {741}let (=Login(pkCli_541,pkSess_572),=Passwd(pkCli_541,pkSess_572)) = m3_578 in
                        {742}event endSrv(Cli_340,Sess_341,(Login(pkCli_541,pkSess_572),Passwd(pkCli_541,pkSess_572)));
                        {743}let m4_579: bitstring = ActivateSessionResponse in
                        {744}out(c, m4_579)
        )
        else
            {745}let skSess_580: bitstring = fail-any in
            {746}let pkSess_581: bitstring = pub(skSess_580) in
            {747}let K_582: bitstring = Skey(pkCli_541,pkSess_581) in
            {748}in(c, m1_583: bitstring);
            {749}if (m1_583 <> CreateSessionRequest) then
                0
            else
                {750}new SSC_584: bitstring;
                {751}new Ns2_585: bitstring;
                {752}let m2_586: bitstring = (SSC_584,Ns2_585) in
                {753}out(c, m2_586);
                {754}in(c, m3_587: bitstring);
                {755}let (=Login(pkCli_541,pkSess_581),=Passwd(pkCli_541,pkSess_581)) = m3_587 in
                {756}event endSrv(Cli_340,Sess_341,(Login(pkCli_541,pkSess_581),Passwd(pkCli_541,pkSess_581)));
                {757}let m4_588: bitstring = ActivateSessionResponse in
                {758}out(c, m4_588)
)

-- Query event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N))
Completing...
Starting query event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N))
goal reachable: Sess_4935 <> B[] && Sess_4935 <> A[] && X_4936 <> B[] && X_4936 <> A[] && begin(beginCli(A[],Sess_4935,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))))) && attacker(Sess_4935) && attacker(X_4936) -> end(endSrv(A[],X_4936,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))))
Abbreviations:
CSC_4972 = CSC_100[m2_97 = (SSC_4958,Ns2_4959),Sess = Sess_4946,Cli = A[],!1 = @sid_4960]
CSC_4973 = CSC_100[m2_97 = (SSC_4947,Ns2_4948),Sess = Sess_4946,Cli = A[],!1 = @sid_4949]

1. We assume as hypothesis that
attacker(X_4970).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know X_4970.
Using the function 2-tuple the attacker may obtain (A[],X_4970).
attacker((A[],X_4970)).

4. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

5. We assume as hypothesis that
attacker(Sess_4946).

6. By 2, the attacker may know A[].
By 5, the attacker may know Sess_4946.
Using the function 2-tuple the attacker may obtain (A[],Sess_4946).
attacker((A[],Sess_4946)).

7. The attacker has some term Ns2_4948.
attacker(Ns2_4948).

8. The attacker has some term SSC_4947.
attacker(SSC_4947).

9. By 8, the attacker may know SSC_4947.
By 7, the attacker may know Ns2_4948.
Using the function 2-tuple the attacker may obtain (SSC_4947,Ns2_4948).
attacker((SSC_4947,Ns2_4948)).

10. The message (A[],Sess_4946) that the attacker may have by 6 may be received at input {13}.
The message (SSC_4947,Ns2_4948) that the attacker may have by 9 may be received at input {53}.
The event beginCli(A[],Sess_4946,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {56}.
We have Sess_4946 <> B[] & Sess_4946 <> A[].
So the message (CSC_4973,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))) may be sent to the attacker at output {58}.
attacker((CSC_4973,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

11. By 10, the attacker may know (CSC_4973,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(pub(skA[]),pub(skI[])).
attacker(Passwd(pub(skA[]),pub(skI[]))).

12. The attacker has some term Ns2_4959.
attacker(Ns2_4959).

13. The attacker has some term SSC_4958.
attacker(SSC_4958).

14. By 13, the attacker may know SSC_4958.
By 12, the attacker may know Ns2_4959.
Using the function 2-tuple the attacker may obtain (SSC_4958,Ns2_4959).
attacker((SSC_4958,Ns2_4959)).

15. The message (A[],Sess_4946) that the attacker may have by 6 may be received at input {13}.
The message (SSC_4958,Ns2_4959) that the attacker may have by 14 may be received at input {53}.
The event beginCli(A[],Sess_4946,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {56}.
We have Sess_4946 <> B[] & Sess_4946 <> A[].
So the message (CSC_4972,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))) may be sent to the attacker at output {58}.
attacker((CSC_4972,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

16. By 15, the attacker may know (CSC_4972,Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
Using the function 2-proj-3-tuple the attacker may obtain Login(pub(skA[]),pub(skI[])).
attacker(Login(pub(skA[]),pub(skI[]))).

17. By 16, the attacker may know Login(pub(skA[]),pub(skI[])).
By 11, the attacker may know Passwd(pub(skA[]),pub(skI[])).
Using the function 2-tuple the attacker may obtain (Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))).
attacker((Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))).

18. The message (A[],X_4970) that the attacker may have by 3 may be received at input {374}.
The message CreateSessionRequest that the attacker may have by 4 may be received at input {414}.
The message (Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))) that the attacker may have by 17 may be received at input {420}.
We have X_4970 <> B[] & X_4970 <> A[].
So event endSrv(A[],X_4970,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[])))) may be executed at {422}.
end(endSrv(A[],X_4970,(Login(pub(skA[]),pub(skI[])),Passwd(pub(skA[]),pub(skI[]))))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new skI creating skI_4982 at {5}

out(c, (pub(skI_4982),skI_4982)) at {7}

out(c, Skey(pub(skI_4982),pub(skA))) at {8}

out(c, Skey(pub(skI_4982),pub(skB))) at {9}

out(c, Skey(pub(skA),pub(skI_4982))) at {10}

out(c, Skey(pub(skB),pub(skI_4982))) at {11}

in(c, (A,a_4976)) at {13} in copy a_4977

out(c, CreateSessionRequest) at {52} in copy a_4977

in(c, (a_4974,a_4975)) at {53} in copy a_4977

new CSC_100 creating CSC_4983 at {55} in copy a_4977

event(beginCli(A,a_4976,(Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982))))) at {56} in copy a_4977

out(c, (CSC_4983,Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982)))) at {58} in copy a_4977

in(c, (A,a_4976)) at {13} in copy a_4980

out(c, CreateSessionRequest) at {52} in copy a_4980

in(c, (a_4978,a_4979)) at {53} in copy a_4980

new CSC_100 creating CSC_4984 at {55} in copy a_4980

event(beginCli(A,a_4976,(Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982))))) at {56} in copy a_4980

out(c, (CSC_4984,Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982)))) at {58} in copy a_4980

in(c, (A,a)) at {374} in copy a_4981

in(c, CreateSessionRequest) at {414} in copy a_4981

new SSC_369 creating SSC_8814 at {416} in copy a_4981

new Ns2_370 creating Ns2_8815 at {417} in copy a_4981

out(c, (SSC_8814,Ns2_8815)) at {419} in copy a_4981

in(c, (Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982)))) at {420} in copy a_4981

event(endSrv(A,a,(Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982))))) at {422} in copy a_4981

The event endSrv(A,a,(Login(pub(skA),pub(skI_4982)),Passwd(pub(skA),pub(skI_4982)))) is executed.
A trace has been found.
RESULT event(endSrv(A[],X,N)) ==> event(beginCli(A[],X,N)) is false.
-- Query not attacker(Skey(pub(skB[]),pub(skA[])))
Completing...
Starting query not attacker(Skey(pub(skB[]),pub(skA[])))
RESULT not attacker(Skey(pub(skB[]),pub(skA[]))) is true.
-- Query not attacker(Skey(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Skey(pub(skA[]),pub(skB[])))
RESULT not attacker(Skey(pub(skA[]),pub(skB[]))) is true.
-- Query not attacker(Passwd(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Passwd(pub(skA[]),pub(skB[])))
goal reachable: attacker(Passwd(pub(skA[]),pub(skB[])))
Abbreviations:
CSC_19684 = CSC_90[m2_87 = (SSC_19678,Ns2_19679),Sess = B[],Cli = A[],!1 = @sid_19680]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Ns2_19679.
attacker(Ns2_19679).

5. The attacker has some term SSC_19678.
attacker(SSC_19678).

6. By 5, the attacker may know SSC_19678.
By 4, the attacker may know Ns2_19679.
Using the function 2-tuple the attacker may obtain (SSC_19678,Ns2_19679).
attacker((SSC_19678,Ns2_19679)).

7. The message (A[],B[]) that the attacker may have by 3 may be received at input {13}.
The message (SSC_19678,Ns2_19679) that the attacker may have by 6 may be received at input {40}.
So the message (CSC_19684,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))) may be sent to the attacker at output {45}.
attacker((CSC_19684,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))).

8. By 7, the attacker may know (CSC_19684,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
Using the function 3-proj-3-tuple the attacker may obtain Passwd(pub(skA[]),pub(skB[])).
attacker(Passwd(pub(skA[]),pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new skI creating skI_20588 at {5}

out(c, (pub(skI_20588),skI_20588)) at {7}

out(c, Skey(pub(skI_20588),pub(skA))) at {8}

out(c, Skey(pub(skI_20588),pub(skB))) at {9}

out(c, Skey(pub(skA),pub(skI_20588))) at {10}

out(c, Skey(pub(skB),pub(skI_20588))) at {11}

in(c, (A,B)) at {13} in copy a_19687

out(c, CreateSessionRequest) at {39} in copy a_19687

in(c, (a_19685,a_19686)) at {40} in copy a_19687

new CSC_90 creating CSC_19688 at {42} in copy a_19687

event(beginCli(A,B,(Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))))) at {43} in copy a_19687

out(c, (CSC_19688,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB)))) at {45} in copy a_19687

The attacker has the message Passwd(pub(skA),pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(pub(skA[]),pub(skB[]))) is false.
-- Query not attacker(Login(pub(skA[]),pub(skB[])))
Completing...
Starting query not attacker(Login(pub(skA[]),pub(skB[])))
goal reachable: attacker(Login(pub(skA[]),pub(skB[])))
Abbreviations:
CSC_25553 = CSC_90[m2_87 = (SSC_25547,Ns2_25548),Sess = B[],Cli = A[],!1 = @sid_25549]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Ns2_25548.
attacker(Ns2_25548).

5. The attacker has some term SSC_25547.
attacker(SSC_25547).

6. By 5, the attacker may know SSC_25547.
By 4, the attacker may know Ns2_25548.
Using the function 2-tuple the attacker may obtain (SSC_25547,Ns2_25548).
attacker((SSC_25547,Ns2_25548)).

7. The message (A[],B[]) that the attacker may have by 3 may be received at input {13}.
The message (SSC_25547,Ns2_25548) that the attacker may have by 6 may be received at input {40}.
So the message (CSC_25553,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))) may be sent to the attacker at output {45}.
attacker((CSC_25553,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[])))).

8. By 7, the attacker may know (CSC_25553,Login(pub(skA[]),pub(skB[])),Passwd(pub(skA[]),pub(skB[]))).
Using the function 2-proj-3-tuple the attacker may obtain Login(pub(skA[]),pub(skB[])).
attacker(Login(pub(skA[]),pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new skI creating skI_26457 at {5}

out(c, (pub(skI_26457),skI_26457)) at {7}

out(c, Skey(pub(skI_26457),pub(skA))) at {8}

out(c, Skey(pub(skI_26457),pub(skB))) at {9}

out(c, Skey(pub(skA),pub(skI_26457))) at {10}

out(c, Skey(pub(skB),pub(skI_26457))) at {11}

in(c, (A,B)) at {13} in copy a_25556

out(c, CreateSessionRequest) at {39} in copy a_25556

in(c, (a_25554,a_25555)) at {40} in copy a_25556

new CSC_90 creating CSC_25557 at {42} in copy a_25556

event(beginCli(A,B,(Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB))))) at {43} in copy a_25556

out(c, (CSC_25557,Login(pub(skA),pub(skB)),Passwd(pub(skA),pub(skB)))) at {45} in copy a_25556

The attacker has the message Login(pub(skA),pub(skB)).
A trace has been found.
RESULT not attacker(Login(pub(skA[]),pub(skB[]))) is false.
