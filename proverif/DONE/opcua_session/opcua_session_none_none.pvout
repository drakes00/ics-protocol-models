Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}let tmp: bitstring = (if ((Sess <> A) && (Sess <> B)) then K else CreateSessionRequest) in
    {15}out(c, tmp);
    {16}new Nc: bitstring;
    {17}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {18}out(c, m1);
    {19}in(c, m2: bitstring);
    {20}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
    {21}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli)));
    {22}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli)) in
    {23}out(c, m3);
    {24}in(c, m4: bitstring);
    {25}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    {26}if ((Sess = A) || (Sess = B)) then
    {27}event endCli(Sess,Cli,Ns)
) | (
    {28}in(ch, (Cli_59: host,Sess_60: host,K_61: bitstring));
    {29}let skCli_62: bitstring = (if (Cli_59 = A) then skA else (if (Cli_59 = B) then skB else sk(Cli_59))) in
    {30}let pkCli_63: bitstring = pub(skCli_62) in
    {31}let skSess_64: bitstring = (if (Sess_60 = A) then skA else (if (Sess_60 = B) then skB else fail-any)) in
    {32}let pkSess_65: bitstring = pub(skSess_64) in
    {33}let tmp_66: bitstring = (if ((Cli_59 <> A) && (Cli_59 <> B)) then K_61 else CreateSessionRequest) in
    {34}out(c, tmp_66);
    {35}in(c, m1_67: bitstring);
    {36}let (=CreateSessionRequest,=pkCli_63,Nc_68: bitstring) = m1_67 in
    {37}new Ns_69: bitstring;
    {38}event beginSrv(Sess_60,Cli_59,Ns_69);
    {39}let m2_70: bitstring = (CreateSessionResponse,pkSess_65,Nc_68,Ns_69) in
    {40}out(c, m2_70);
    {41}in(c, m3_71: bitstring);
    {42}let (=ActivateSessionRequest,=pkCli_63,=Login(pkCli_63),=Passwd(skCli_62)) = m3_71 in
    {43}new Ns2_72: bitstring;
    {44}let m4_73: bitstring = (ActivateSessionResponse,Ns2_72) in
    {45}out(c, m4_73);
    {46}if ((Cli_59 = A) || (Cli_59 = B)) then
    {47}event endSrv(Cli_59,Sess_60,(Login(pkCli_63),Passwd(skCli_62)))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 81 rules. 25 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: attacker(N_5319) -> end(endCli(A[],B[],N_5319))
Abbreviations:
Nc_5346 = Nc[Sess = A[],Cli = B[],!1 = @sid_5341]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. We assume as hypothesis that
attacker(N_5345).

5. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,pub(skB[]),Nc_5346) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skB[]),Nc_5346)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_5346).
Using the function 3-proj-3-tuple the attacker may obtain Nc_5346.
attacker(Nc_5346).

7. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skA[]).
By 6, the attacker may know Nc_5346.
By 4, the attacker may know N_5345.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Nc_5346,N_5345).
attacker((CreateSessionResponse,pub(skA[]),Nc_5346,N_5345)).

10. The attacker has some term Ns2_5340.
attacker(Ns2_5340).

11. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

12. By 11, the attacker may know ActivateSessionResponse.
By 10, the attacker may know Ns2_5340.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_5340).
attacker((ActivateSessionResponse,Ns2_5340)).

13. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Nc_5346,N_5345) that the attacker may have by 9 may be received at input {19}.
The message (ActivateSessionResponse,Ns2_5340) that the attacker may have by 12 may be received at input {24}.
So event endCli(A[],B[],N_5345) may be executed at {27}.
end(endCli(A[],B[],N_5345)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_5429 at {6} in copy a_5348

in(c, (B,A)) at {7} in copy a_5348

new K creating K_5444 at {8} in copy a_5348

out(ch_5429, (B,A,K_5444)) at {9} in copy a_5348 received at {28} in copy a_5348

out(c, CreateSessionRequest) at {34} in copy a_5348

out(c, CreateSessionRequest) at {15} in copy a_5348

new Nc creating Nc_5349 at {16} in copy a_5348

out(c, (CreateSessionRequest,pub(skB),Nc_5349)) at {18} in copy a_5348

in(c, (CreateSessionResponse,pub(skA),Nc_5349,a)) at {19} in copy a_5348

event(beginCli(B,A,(Login(pub(skB)),Passwd(skB)))) at {21} in copy a_5348

out(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB))) at {23} in copy a_5348

in(c, (ActivateSessionResponse,a_5347)) at {24} in copy a_5348

event(endCli(A,B,a)) at {27} in copy a_5348

The event endCli(A,B,a) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_5628,Y_5629,N_5630)) ==> event(beginCli(X_5628,Y_5629,N_5630))
Completing...
200 rules inserted. The rule base contains 86 rules. 34 rules in the queue.
400 rules inserted. The rule base contains 122 rules. 26 rules in the queue.
Starting query event(endSrv(X_5628,Y_5629,N_5630)) ==> event(beginCli(X_5628,Y_5629,N_5630))
goal reachable: begin(beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[])))) -> end(endSrv(B[],B[],(Login(pub(skB[])),Passwd(skB[]))))
Abbreviations:
Nc_11127 = Nc[Sess = A[],Cli = B[],!1 = @sid_11102]
ch_11128 = ch[!1 = @sid_11122]
K_11129 = K[Sess = B[],Cli = B[],!1 = @sid_11122]

1. The attacker initially knows B[].
attacker(B[]).

2. By 1, the attacker may know B[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (B[],B[]).
attacker((B[],B[])).

3. The message (B[],B[]) that the attacker may have by 2 may be received at input {7}.
So the message (B[],B[],K_11129) may be sent on channel ch_11128 at output {9}.
mess(ch_11128,(B[],B[],K_11129)).

4. The attacker has some term Nc_11121.
attacker(Nc_11121).

5. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

6. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

7. By 6, the attacker may know CreateSessionRequest.
By 5, the attacker may know pub(skB[]).
By 4, the attacker may know Nc_11121.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_11121).
attacker((CreateSessionRequest,pub(skB[]),Nc_11121)).

8. The attacker initially knows A[].
attacker(A[]).

9. By 1, the attacker may know B[].
By 8, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

10. The attacker has some term Ns_11103.
attacker(Ns_11103).

11. The message (B[],A[]) that the attacker may have by 9 may be received at input {7}.
So the message (CreateSessionRequest,pub(skB[]),Nc_11127) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skB[]),Nc_11127)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_11127).
Using the function 3-proj-3-tuple the attacker may obtain Nc_11127.
attacker(Nc_11127).

13. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

14. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

15. By 14, the attacker may know CreateSessionResponse.
By 13, the attacker may know pub(skA[]).
By 12, the attacker may know Nc_11127.
By 10, the attacker may know Ns_11103.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Nc_11127,Ns_11103).
attacker((CreateSessionResponse,pub(skA[]),Nc_11127,Ns_11103)).

16. The message (B[],A[]) that the attacker may have by 9 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Nc_11127,Ns_11103) that the attacker may have by 15 may be received at input {19}.
The event beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[]))) may be executed at {21}.
So the message (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))).

17. By 16, the attacker may know (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skB[]).
attacker(Passwd(skB[])).

18. By 5, the attacker may know pub(skB[]).
Using the function Login the attacker may obtain Login(pub(skB[])).
attacker(Login(pub(skB[]))).

19. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

20. By 19, the attacker may know ActivateSessionRequest.
By 5, the attacker may know pub(skB[]).
By 18, the attacker may know Login(pub(skB[])).
By 17, the attacker may know Passwd(skB[]).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[])).
attacker((ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[]))).

21. The message (B[],B[],K_11129) that may be sent on channel ch_11128 by 3 may be received at input {28}.
The message (CreateSessionRequest,pub(skB[]),Nc_11121) that the attacker may have by 7 may be received at input {35}.
The message (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[])) that the attacker may have by 20 may be received at input {41}.
So event endSrv(B[],B[],(Login(pub(skB[])),Passwd(skB[]))) may be executed at {47}.
end(endSrv(B[],B[],(Login(pub(skB[])),Passwd(skB[])))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_11135 at {6} in copy a_11133

new ch creating ch_11243 at {6} in copy a_11130

in(c, (B,A)) at {7} in copy a_11130

new K creating K_11258 at {8} in copy a_11130

out(ch_11243, (B,A,K_11258)) at {9} in copy a_11130 received at {28} in copy a_11130

out(c, CreateSessionRequest) at {34} in copy a_11130

out(c, CreateSessionRequest) at {15} in copy a_11130

new Nc creating Nc_11134 at {16} in copy a_11130

out(c, (CreateSessionRequest,pub(skB),Nc_11134)) at {18} in copy a_11130

in(c, (CreateSessionResponse,pub(skA),Nc_11134,a_11131)) at {19} in copy a_11130

event(beginCli(B,A,(Login(pub(skB)),Passwd(skB)))) at {21} in copy a_11130

out(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB))) at {23} in copy a_11130

in(c, (B,B)) at {7} in copy a_11133

new K creating K_11136 at {8} in copy a_11133

out(ch_11135, (B,B,K_11136)) at {9} in copy a_11133 received at {28} in copy a_11133

out(c, CreateSessionRequest) at {34} in copy a_11133

out(c, CreateSessionRequest) at {15} in copy a_11133

new Nc creating Nc_11602 at {16} in copy a_11133

out(c, (CreateSessionRequest,pub(skB),Nc_11602)) at {18} in copy a_11133

in(c, (CreateSessionRequest,pub(skB),a_11132)) at {35} in copy a_11133

new Ns_69 creating Ns_11620 at {37} in copy a_11133

event(beginSrv(B,B,Ns_11620)) at {38} in copy a_11133

out(c, (CreateSessionResponse,pub(skB),a_11132,Ns_11620)) at {40} in copy a_11133

in(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB))) at {41} in copy a_11133

new Ns2_72 creating Ns2_11630 at {43} in copy a_11133

out(c, (ActivateSessionResponse,Ns2_11630)) at {45} in copy a_11133

event(endSrv(B,B,(Login(pub(skB)),Passwd(skB)))) at {47} in copy a_11133

The event endSrv(B,B,(Login(pub(skB)),Passwd(skB))) is executed.
A trace has been found.
RESULT event(endSrv(X_5628,Y_5629,N_5630)) ==> event(beginCli(X_5628,Y_5629,N_5630)) is false.
-- Query not attacker(Passwd(skA[]))
Completing...
200 rules inserted. The rule base contains 80 rules. 20 rules in the queue.
Starting query not attacker(Passwd(skA[]))
goal reachable: attacker(Passwd(skA[]))
Abbreviations:
Nc_16129 = Nc[Sess = A[],Cli = A[],!1 = @sid_16123]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The attacker has some term Ns_16124.
attacker(Ns_16124).

4. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
So the message (CreateSessionRequest,pub(skA[]),Nc_16129) may be sent to the attacker at output {18}.
attacker((CreateSessionRequest,pub(skA[]),Nc_16129)).

5. By 4, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_16129).
Using the function 3-proj-3-tuple the attacker may obtain Nc_16129.
attacker(Nc_16129).

6. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

7. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

8. By 7, the attacker may know CreateSessionResponse.
By 6, the attacker may know pub(skA[]).
By 5, the attacker may know Nc_16129.
By 3, the attacker may know Ns_16124.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Nc_16129,Ns_16124).
attacker((CreateSessionResponse,pub(skA[]),Nc_16129,Ns_16124)).

9. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Nc_16129,Ns_16124) that the attacker may have by 8 may be received at input {19}.
So the message (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[])) may be sent to the attacker at output {23}.
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[]))).

10. By 9, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[])).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[]).
attacker(Passwd(skA[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_16213 at {6} in copy a_16130

in(c, (A,A)) at {7} in copy a_16130

new K creating K_16228 at {8} in copy a_16130

out(ch_16213, (A,A,K_16228)) at {9} in copy a_16130 received at {28} in copy a_16130

out(c, CreateSessionRequest) at {34} in copy a_16130

out(c, CreateSessionRequest) at {15} in copy a_16130

new Nc creating Nc_16132 at {16} in copy a_16130

out(c, (CreateSessionRequest,pub(skA),Nc_16132)) at {18} in copy a_16130

in(c, (CreateSessionResponse,pub(skA),Nc_16132,a_16131)) at {19} in copy a_16130

event(beginCli(A,A,(Login(pub(skA)),Passwd(skA)))) at {21} in copy a_16130

out(c, (ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA))) at {23} in copy a_16130

The attacker has the message Passwd(skA).
A trace has been found.
RESULT not attacker(Passwd(skA[])) is false.
