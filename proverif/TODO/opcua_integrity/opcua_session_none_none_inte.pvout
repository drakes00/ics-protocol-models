Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}let pkC: bitstring = pub(skC) in
{6}out(c, pkC);
{7}let pkD: bitstring = pub(skD) in
{8}out(c, pkD);
{9}!
{10}new ch: channel;
(
    {11}in(c, (Cli: host,Sess: host));
    {12}if ((Cli = C) || ((Cli = D) || ((Sess = A) || (Sess = B)))) then
        0
    else
        {13}new K: bitstring;
        {14}out(ch, (Cli,Sess,K));
        {15}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
        {16}let pkCli: bitstring = pub(skCli) in
        {17}let skSess: bitstring = (if (Sess = C) then skC else (if (Sess = D) then skD else sk(Sess))) in
        {18}let pkSess: bitstring = pub(skSess) in
        {19}out(c, K);
        {20}new Nc: bitstring;
        {21}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
        {22}out(c, m1);
        {23}in(c, m2: bitstring);
        {24}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {25}event msg2(Cli,Sess);
        {26}event beginCliPass(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {27}event beginCliNonce(Cli,Sess,Ns);
        {28}let m3: bitstring = (ActivateSessionRequest,pkCli,Ns,Login(pkCli),Passwd(skCli,pkSess)) in
        {29}out(c, m3);
        {30}in(c, m4: bitstring);
        {31}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
        {32}event msg4(Cli,Sess)
) | (
    {33}in(ch, (Cli_103: host,Sess_104: host,K_105: bitstring));
    {34}if ((Cli_103 = C) || ((Cli_103 = D) || ((Sess_104 = A) || (Sess_104 = B)))) then
        0
    else
        {35}let skCli_106: bitstring = (if (Cli_103 = A) then skA else (if (Cli_103 = B) then skB else sk(Cli_103))) in
        {36}let pkCli_107: bitstring = pub(skCli_106) in
        {37}let skSess_108: bitstring = (if (Sess_104 = C) then skC else (if (Sess_104 = D) then skD else fail-any)) in
        {38}let pkSess_109: bitstring = pub(skSess_108) in
        {39}out(c, K_105);
        {40}in(c, m1_110: bitstring);
        {41}let (=CreateSessionRequest,=pkCli_107,Nc_111: bitstring) = m1_110 in
        {42}event msg1(Cli_103,Sess_104);
        {43}new Ns_112: bitstring;
        {44}event beginSrvNonce(Cli_103,Sess_104,Nc_111);
        {45}let m2_113: bitstring = (CreateSessionResponse,pkSess_109,Nc_111,Ns_112) in
        {46}out(c, m2_113);
        {47}in(c, m3_114: bitstring);
        {48}let (=ActivateSessionRequest,=pkCli_107,=Ns_112,login: bitstring,passwd: bitstring) = m3_114 in
        {49}if (verifyCreds(skSess_108,login,passwd) <> true) then
            0
        else
            {50}event msg3(Cli_103,Sess_104);
            {51}new Ns2_115: bitstring;
            {52}let m4_116: bitstring = (ActivateSessionResponse,Ns2_115) in
            {53}out(c, m4_116)
)

-- Query event(msg4(X,Y)) ==> (event(msg3(X,Y)) ==> (event(msg2(X,Y)) ==> event(msg1(X,Y))))
Completing...
200 rules inserted. The rule base contains 94 rules. 35 rules in the queue.
400 rules inserted. The rule base contains 156 rules. 36 rules in the queue.
600 rules inserted. The rule base contains 139 rules. 20 rules in the queue.
Starting query event(msg4(X,Y)) ==> (event(msg3(X,Y)) ==> (event(msg2(X,Y)) ==> event(msg1(X,Y))))
goal reachable: begin(msg2(B[],D[])) -> end(msg4(B[],D[]))
Abbreviations:
Nc_6965 = Nc[Sess = D[],Cli = B[],!1 = @sid_6961]

1. The attacker initially knows D[].
attacker(D[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know D[].
Using the function 2-tuple the attacker may obtain (B[],D[]).
attacker((B[],D[])).

4. The attacker has some term Ns_6962.
attacker(Ns_6962).

5. The message (B[],D[]) that the attacker may have by 3 may be received at input {11}.
So the message (CreateSessionRequest,pub(skB[]),Nc_6965) may be sent to the attacker at output {22}.
attacker((CreateSessionRequest,pub(skB[]),Nc_6965)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_6965).
Using the function 3-proj-3-tuple the attacker may obtain Nc_6965.
attacker(Nc_6965).

7. The message pub(skD[]) may be sent to the attacker at output {8}.
attacker(pub(skD[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skD[]).
By 6, the attacker may know Nc_6965.
By 4, the attacker may know Ns_6962.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skD[]),Nc_6965,Ns_6962).
attacker((CreateSessionResponse,pub(skD[]),Nc_6965,Ns_6962)).

10. The attacker has some term Ns2_6960.
attacker(Ns2_6960).

11. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

12. By 11, the attacker may know ActivateSessionResponse.
By 10, the attacker may know Ns2_6960.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_6960).
attacker((ActivateSessionResponse,Ns2_6960)).

13. The message (B[],D[]) that the attacker may have by 3 may be received at input {11}.
The message (CreateSessionResponse,pub(skD[]),Nc_6965,Ns_6962) that the attacker may have by 9 may be received at input {23}.
The event msg2(B[],D[]) may be executed at {25}.
The message (ActivateSessionResponse,Ns2_6960) that the attacker may have by 12 may be received at input {30}.
So event msg4(B[],D[]) may be executed at {32}.
end(msg4(B[],D[])).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

out(c, pub(skC)) at {6}

out(c, pub(skD)) at {8}

new ch creating ch_7105 at {10} in copy a_6966

in(c, (B,D)) at {11} in copy a_6966

new K creating K_7140 at {13} in copy a_6966

out(ch_7105, (B,D,K_7140)) at {14} in copy a_6966 received at {33} in copy a_6966

out(c, K_7140) at {39} in copy a_6966

out(c, K_7140) at {19} in copy a_6966

new Nc creating Nc_6968 at {20} in copy a_6966

out(c, (CreateSessionRequest,pub(skB),Nc_6968)) at {22} in copy a_6966

in(c, (CreateSessionResponse,pub(skD),Nc_6968,a_6967)) at {23} in copy a_6966

event(msg2(B,D)) at {25} in copy a_6966

event(beginCliPass(B,D,(Login(pub(skB)),Passwd(skB,pub(skD))))) at {26} in copy a_6966

event(beginCliNonce(B,D,a_6967)) at {27} in copy a_6966

out(c, (ActivateSessionRequest,pub(skB),a_6967,Login(pub(skB)),Passwd(skB,pub(skD)))) at {29} in copy a_6966

in(c, (ActivateSessionResponse,a)) at {30} in copy a_6966

event(msg4(B,D)) at {32} in copy a_6966

The event msg4(B,D) is executed.
A trace has been found.
RESULT event(msg4(X,Y)) ==> (event(msg3(X,Y)) ==> (event(msg2(X,Y)) ==> event(msg1(X,Y)))) is false.
