Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}let pkC: bitstring = pub(skC) in
{6}out(c, pkC);
{7}let pkD: bitstring = pub(skD) in
{8}out(c, pkD);
{9}!
{10}new ch: channel;
(
    {11}in(c, (Cli: host,Sess: host));
    {12}if ((Cli = C) || ((Cli = D) || ((Sess = A) || (Sess = B)))) then
        0
    else
        {13}new K: bitstring;
        {14}out(ch, (Cli,Sess,K));
        {15}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
        {16}let pkCli: bitstring = pub(skCli) in
        {17}let skSess: bitstring = (if (Sess = C) then skC else (if (Sess = D) then skD else sk(Sess))) in
        {18}let pkSess: bitstring = pub(skSess) in
        {19}out(c, K);
        {20}new Nc: bitstring;
        {21}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
        {22}out(c, m1);
        {23}in(c, m2: bitstring);
        {24}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
        {25}if ((Sess = C) || (Sess = C)) then
        {26}event endCli(Sess,Cli,Nc);
        {27}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
        {28}event beginCli(Cli,Sess,Ns);
        {29}let m3: bitstring = (ActivateSessionRequest,pkCli,Ns,Login(pkCli),Passwd(skCli,pkSess)) in
        {30}out(c, m3);
        {31}in(c, m4: bitstring);
        {32}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
        0
) | (
    {33}in(ch, (Cli_103: host,Sess_104: host,K_105: bitstring));
    {34}if ((Cli_103 = C) || ((Cli_103 = D) || ((Sess_104 = A) || (Sess_104 = B)))) then
        0
    else
        {35}let skCli_106: bitstring = (if (Cli_103 = A) then skA else (if (Cli_103 = B) then skB else sk(Cli_103))) in
        {36}let pkCli_107: bitstring = pub(skCli_106) in
        {37}let skSess_108: bitstring = (if (Sess_104 = C) then skC else (if (Sess_104 = D) then skD else fail-any)) in
        {38}let pkSess_109: bitstring = pub(skSess_108) in
        {39}out(c, K_105);
        {40}in(c, m1_110: bitstring);
        {41}let (=CreateSessionRequest,=pkCli_107,Nc_111: bitstring) = m1_110 in
        {42}new Ns_112: bitstring;
        {43}event beginSrv(Sess_104,Cli_103,Nc_111);
        {44}let m2_113: bitstring = (CreateSessionResponse,pkSess_109,Nc_111,Ns_112) in
        {45}out(c, m2_113);
        {46}in(c, m3_114: bitstring);
        {47}let (=ActivateSessionRequest,=pkCli_107,=Ns_112,login: bitstring,passwd: bitstring) = m3_114 in
        {48}if (verifyCreds(skSess_108,login,passwd) <> true) then
            0
        else
            {49}new Ns2_115: bitstring;
            {50}let m4_116: bitstring = (ActivateSessionResponse,Ns2_115) in
            {51}out(c, m4_116);
            {52}if ((Cli_103 = A) || (Cli_103 = B)) then
            {53}event endSrv(Cli_103,Sess_104,(login,passwd));
            {54}event endSrv(Cli_103,Sess_104,Ns_112)
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 108 rules. 12 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: end(endCli(C[],B[],Nc[Sess = C[],Cli = B[],!1 = @sid_5573]))
Abbreviations:
Nc_5595 = Nc[Sess = C[],Cli = B[],!1 = @sid_5590]

1. The attacker initially knows C[].
attacker(C[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know C[].
Using the function 2-tuple the attacker may obtain (B[],C[]).
attacker((B[],C[])).

4. The attacker has some term Ns_5591.
attacker(Ns_5591).

5. The message (B[],C[]) that the attacker may have by 3 may be received at input {11}.
So the message (CreateSessionRequest,pub(skB[]),Nc_5595) may be sent to the attacker at output {22}.
attacker((CreateSessionRequest,pub(skB[]),Nc_5595)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_5595).
Using the function 3-proj-3-tuple the attacker may obtain Nc_5595.
attacker(Nc_5595).

7. The message pub(skC[]) may be sent to the attacker at output {6}.
attacker(pub(skC[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skC[]).
By 6, the attacker may know Nc_5595.
By 4, the attacker may know Ns_5591.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skC[]),Nc_5595,Ns_5591).
attacker((CreateSessionResponse,pub(skC[]),Nc_5595,Ns_5591)).

10. The message (B[],C[]) that the attacker may have by 3 may be received at input {11}.
The message (CreateSessionResponse,pub(skC[]),Nc_5595,Ns_5591) that the attacker may have by 9 may be received at input {23}.
So event endCli(C[],B[],Nc_5595) may be executed at {26}.
end(endCli(C[],B[],Nc_5595)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

out(c, pub(skC)) at {6}

out(c, pub(skD)) at {8}

new ch creating ch_5734 at {10} in copy a

in(c, (B,C)) at {11} in copy a

new K creating K_5769 at {13} in copy a

out(ch_5734, (B,C,K_5769)) at {14} in copy a received at {33} in copy a

out(c, K_5769) at {39} in copy a

out(c, K_5769) at {19} in copy a

new Nc creating Nc_5597 at {20} in copy a

out(c, (CreateSessionRequest,pub(skB),Nc_5597)) at {22} in copy a

in(c, (CreateSessionResponse,pub(skC),Nc_5597,a_5596)) at {23} in copy a

event(endCli(C,B,Nc_5597)) at {26} in copy a

The event endCli(C,B,Nc_5597) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_5934,Y_5935,N_5936)) ==> event(beginCli(X_5934,Y_5935,N_5936))
Completing...
200 rules inserted. The rule base contains 118 rules. 16 rules in the queue.
400 rules inserted. The rule base contains 137 rules. 22 rules in the queue.
Starting query event(endSrv(X_5934,Y_5935,N_5936)) ==> event(beginCli(X_5934,Y_5935,N_5936))
goal reachable: attacker(y_11564) -> end(endSrv(B[],D[],(Login(pub(y_11564)),Passwd(y_11564,pub(skD[])))))
Abbreviations:
K_11626 = K[Sess = D[],Cli = B[],!1 = @sid_11621]
Ns_11627 = Ns_112[m1_110 = (CreateSessionRequest,pub(skB[]),Nc_11619),K_105 = K_11626,Sess_104 = D[],Cli_103 = B[],!1 = @sid_11621]
ch_11628 = ch[!1 = @sid_11621]

1. The attacker initially knows D[].
attacker(D[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know D[].
Using the function 2-tuple the attacker may obtain (B[],D[]).
attacker((B[],D[])).

4. The message (B[],D[]) that the attacker may have by 3 may be received at input {11}.
We have D[] <> B[] & D[] <> A[] & B[] <> D[] & B[] <> C[].
So the message (B[],D[],K_11626) may be sent on channel ch_11628 at output {14}.
mess(ch_11628,(B[],D[],K_11626)).

5. The attacker has some term Nc_11619.
attacker(Nc_11619).

6. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

7. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

8. By 7, the attacker may know CreateSessionRequest.
By 6, the attacker may know pub(skB[]).
By 5, the attacker may know Nc_11619.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skB[]),Nc_11619).
attacker((CreateSessionRequest,pub(skB[]),Nc_11619)).

9. The message pub(skD[]) may be sent to the attacker at output {8}.
attacker(pub(skD[])).

10. We assume as hypothesis that
attacker(y_11622).

11. By 10, the attacker may know y_11622.
By 9, the attacker may know pub(skD[]).
Using the function Passwd the attacker may obtain Passwd(y_11622,pub(skD[])).
attacker(Passwd(y_11622,pub(skD[]))).

12. By 10, the attacker may know y_11622.
Using the function pub the attacker may obtain pub(y_11622).
attacker(pub(y_11622)).

13. By 12, the attacker may know pub(y_11622).
Using the function Login the attacker may obtain Login(pub(y_11622)).
attacker(Login(pub(y_11622))).

14. The message (B[],D[],K_11626) that may be sent on channel ch_11628 by 4 may be received at input {33}.
The message (CreateSessionRequest,pub(skB[]),Nc_11619) that the attacker may have by 8 may be received at input {40}.
So the message (CreateSessionResponse,pub(skD[]),Nc_11619,Ns_11627) may be sent to the attacker at output {45}.
attacker((CreateSessionResponse,pub(skD[]),Nc_11619,Ns_11627)).

15. By 14, the attacker may know (CreateSessionResponse,pub(skD[]),Nc_11619,Ns_11627).
Using the function 4-proj-4-tuple the attacker may obtain Ns_11627.
attacker(Ns_11627).

16. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

17. By 16, the attacker may know ActivateSessionRequest.
By 6, the attacker may know pub(skB[]).
By 15, the attacker may know Ns_11627.
By 13, the attacker may know Login(pub(y_11622)).
By 11, the attacker may know Passwd(y_11622,pub(skD[])).
Using the function 5-tuple the attacker may obtain (ActivateSessionRequest,pub(skB[]),Ns_11627,Login(pub(y_11622)),Passwd(y_11622,pub(skD[]))).
attacker((ActivateSessionRequest,pub(skB[]),Ns_11627,Login(pub(y_11622)),Passwd(y_11622,pub(skD[])))).

18. The message (B[],D[],K_11626) that may be sent on channel ch_11628 by 4 may be received at input {33}.
The message (CreateSessionRequest,pub(skB[]),Nc_11619) that the attacker may have by 8 may be received at input {40}.
The message (ActivateSessionRequest,pub(skB[]),Ns_11627,Login(pub(y_11622)),Passwd(y_11622,pub(skD[]))) that the attacker may have by 17 may be received at input {46}.
So event endSrv(B[],D[],(Login(pub(y_11622)),Passwd(y_11622,pub(skD[])))) may be executed at {53}.
end(endSrv(B[],D[],(Login(pub(y_11622)),Passwd(y_11622,pub(skD[]))))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

out(c, pub(skC)) at {6}

out(c, pub(skD)) at {8}

new ch creating ch_11634 at {10} in copy a_11631

in(c, (B,D)) at {11} in copy a_11631

new K creating K_11632 at {13} in copy a_11631

out(ch_11634, (B,D,K_11632)) at {14} in copy a_11631 received at {33} in copy a_11631

out(c, K_11632) at {39} in copy a_11631

out(c, K_11632) at {19} in copy a_11631

new Nc creating Nc_11950 at {20} in copy a_11631

out(c, (CreateSessionRequest,pub(skB),Nc_11950)) at {22} in copy a_11631

in(c, (CreateSessionRequest,pub(skB),a_11630)) at {40} in copy a_11631

new Ns_112 creating Ns_11633 at {42} in copy a_11631

event(beginSrv(D,B,a_11630)) at {43} in copy a_11631

out(c, (CreateSessionResponse,pub(skD),a_11630,Ns_11633)) at {45} in copy a_11631

in(c, (ActivateSessionRequest,pub(skB),Ns_11633,Login(pub(a_11629)),Passwd(a_11629,pub(skD)))) at {46} in copy a_11631

new Ns2_115 creating Ns2_11989 at {49} in copy a_11631

out(c, (ActivateSessionResponse,Ns2_11989)) at {51} in copy a_11631

event(endSrv(B,D,(Login(pub(a_11629)),Passwd(a_11629,pub(skD))))) at {53} in copy a_11631

The event endSrv(B,D,(Login(pub(a_11629)),Passwd(a_11629,pub(skD)))) is executed.
A trace has been found.
RESULT event(endSrv(X_5934,Y_5935,N_5936)) ==> event(beginCli(X_5934,Y_5935,N_5936)) is false.
-- Query not attacker(Passwd(skA[],pub(skC[])))
Completing...
200 rules inserted. The rule base contains 116 rules. 12 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skC[])))
goal reachable: attacker(Passwd(skA[],pub(skC[])))
Abbreviations:
Nc_16554 = Nc[Sess = C[],Cli = A[],!1 = @sid_16547]

1. The attacker initially knows C[].
attacker(C[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know C[].
Using the function 2-tuple the attacker may obtain (A[],C[]).
attacker((A[],C[])).

4. The attacker has some term Ns_16548.
attacker(Ns_16548).

5. The message (A[],C[]) that the attacker may have by 3 may be received at input {11}.
So the message (CreateSessionRequest,pub(skA[]),Nc_16554) may be sent to the attacker at output {22}.
attacker((CreateSessionRequest,pub(skA[]),Nc_16554)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_16554).
Using the function 3-proj-3-tuple the attacker may obtain Nc_16554.
attacker(Nc_16554).

7. The message pub(skC[]) may be sent to the attacker at output {6}.
attacker(pub(skC[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skC[]).
By 6, the attacker may know Nc_16554.
By 4, the attacker may know Ns_16548.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skC[]),Nc_16554,Ns_16548).
attacker((CreateSessionResponse,pub(skC[]),Nc_16554,Ns_16548)).

10. The message (A[],C[]) that the attacker may have by 3 may be received at input {11}.
The message (CreateSessionResponse,pub(skC[]),Nc_16554,Ns_16548) that the attacker may have by 9 may be received at input {23}.
So the message (ActivateSessionRequest,pub(skA[]),Ns_16548,Login(pub(skA[])),Passwd(skA[],pub(skC[]))) may be sent to the attacker at output {30}.
attacker((ActivateSessionRequest,pub(skA[]),Ns_16548,Login(pub(skA[])),Passwd(skA[],pub(skC[])))).

11. By 10, the attacker may know (ActivateSessionRequest,pub(skA[]),Ns_16548,Login(pub(skA[])),Passwd(skA[],pub(skC[]))).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[],pub(skC[])).
attacker(Passwd(skA[],pub(skC[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

out(c, pub(skC)) at {6}

out(c, pub(skD)) at {8}

new ch creating ch_16695 at {10} in copy a_16556

in(c, (A,C)) at {11} in copy a_16556

new K creating K_16730 at {13} in copy a_16556

out(ch_16695, (A,C,K_16730)) at {14} in copy a_16556 received at {33} in copy a_16556

out(c, K_16730) at {39} in copy a_16556

out(c, K_16730) at {19} in copy a_16556

new Nc creating Nc_16557 at {20} in copy a_16556

out(c, (CreateSessionRequest,pub(skA),Nc_16557)) at {22} in copy a_16556

in(c, (CreateSessionResponse,pub(skC),Nc_16557,a_16555)) at {23} in copy a_16556

event(endCli(C,A,Nc_16557)) at {26} in copy a_16556

event(beginCli(A,C,(Login(pub(skA)),Passwd(skA,pub(skC))))) at {27} in copy a_16556

event(beginCli(A,C,a_16555)) at {28} in copy a_16556

out(c, (ActivateSessionRequest,pub(skA),a_16555,Login(pub(skA)),Passwd(skA,pub(skC)))) at {30} in copy a_16556

The attacker has the message Passwd(skA,pub(skC)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skC[]))) is false.
