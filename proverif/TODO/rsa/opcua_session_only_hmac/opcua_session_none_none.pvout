Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}!
{6}new ch: channel;
(
    {7}in(c, (Cli: host,Sess: host));
    {8}new K: bitstring;
    {9}out(ch, (Cli,Sess,K));
    {10}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
    {11}let pkCli: bitstring = pub(skCli) in
    {12}let skSess: bitstring = (if (Sess = A) then skA else (if (Sess = B) then skB else sk(Sess))) in
    {13}let pkSess: bitstring = pub(skSess) in
    {14}out(c, K);
    {15}new Nc: bitstring;
    {16}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
    {17}out(c, m1);
    {18}in(c, m2: bitstring);
    {19}let (=CreateSessionResponse,=pkSess,=Nc,Ns: bitstring) = m2 in
    {20}event beginCli(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
    {21}let m3: bitstring = (ActivateSessionRequest,pkCli,Login(pkCli),Passwd(skCli,pkSess)) in
    {22}out(c, m3);
    {23}in(c, m4: bitstring);
    {24}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
    {25}if ((Sess = A) || (Sess = B)) then
    {26}event endCli(Sess,Cli,Nc)
) | (
    {27}in(ch, (Cli_80: host,Sess_81: host,K_82: bitstring));
    {28}let skCli_83: bitstring = (if (Cli_80 = A) then skA else (if (Cli_80 = B) then skB else sk(Cli_80))) in
    {29}let pkCli_84: bitstring = pub(skCli_83) in
    {30}let skSess_85: bitstring = (if (Sess_81 = A) then skA else (if (Sess_81 = B) then skB else fail-any)) in
    {31}let pkSess_86: bitstring = pub(skSess_85) in
    {32}out(c, K_82);
    {33}in(c, m1_87: bitstring);
    {34}let (=CreateSessionRequest,=pkCli_84,Nc_88: bitstring) = m1_87 in
    {35}new Ns_89: bitstring;
    {36}event beginSrv(Sess_81,Cli_80,Nc_88);
    {37}let m2_90: bitstring = (CreateSessionResponse,pkSess_86,Nc_88,Ns_89) in
    {38}out(c, m2_90);
    {39}in(c, m3_91: bitstring);
    {40}let (=ActivateSessionRequest,=pkCli_84,login: bitstring,passwd: bitstring) = m3_91 in
    {41}if (verifyCreds(skSess_85,login,passwd) <> true) then
        0
    else
        {42}new Ns2_92: bitstring;
        {43}let m4_93: bitstring = (ActivateSessionResponse,Ns2_92) in
        {44}out(c, m4_93);
        {45}if ((Cli_80 = A) || (Cli_80 = B)) then
        {46}event endSrv(Cli_80,Sess_81,(login,passwd))
)

-- Query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
Completing...
200 rules inserted. The rule base contains 96 rules. 32 rules in the queue.
400 rules inserted. The rule base contains 126 rules. 24 rules in the queue.
Starting query event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N))
goal reachable: end(endCli(A[],B[],Nc[Sess = A[],Cli = B[],!1 = @sid_6496]))
Abbreviations:
Nc_6523 = Nc[Sess = A[],Cli = B[],!1 = @sid_6518]

1. The attacker initially knows A[].
attacker(A[]).

2. The attacker initially knows B[].
attacker(B[]).

3. By 2, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

4. The attacker has some term Ns_6519.
attacker(Ns_6519).

5. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,pub(skB[]),Nc_6523) may be sent to the attacker at output {17}.
attacker((CreateSessionRequest,pub(skB[]),Nc_6523)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_6523).
Using the function 3-proj-3-tuple the attacker may obtain Nc_6523.
attacker(Nc_6523).

7. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skA[]).
By 6, the attacker may know Nc_6523.
By 4, the attacker may know Ns_6519.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Nc_6523,Ns_6519).
attacker((CreateSessionResponse,pub(skA[]),Nc_6523,Ns_6519)).

10. The attacker has some term Ns2_6517.
attacker(Ns2_6517).

11. Using the function ActivateSessionResponse the attacker may obtain ActivateSessionResponse.
attacker(ActivateSessionResponse).

12. By 11, the attacker may know ActivateSessionResponse.
By 10, the attacker may know Ns2_6517.
Using the function 2-tuple the attacker may obtain (ActivateSessionResponse,Ns2_6517).
attacker((ActivateSessionResponse,Ns2_6517)).

13. The message (B[],A[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Nc_6523,Ns_6519) that the attacker may have by 9 may be received at input {18}.
The message (ActivateSessionResponse,Ns2_6517) that the attacker may have by 12 may be received at input {23}.
So event endCli(A[],B[],Nc_6523) may be executed at {26}.
end(endCli(A[],B[],Nc_6523)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_6606 at {6} in copy a

in(c, (B,A)) at {7} in copy a

new K creating K_6620 at {8} in copy a

out(ch_6606, (B,A,K_6620)) at {9} in copy a received at {27} in copy a

out(c, K_6620) at {32} in copy a

out(c, K_6620) at {14} in copy a

new Nc creating Nc_6526 at {15} in copy a

out(c, (CreateSessionRequest,pub(skB),Nc_6526)) at {17} in copy a

in(c, (CreateSessionResponse,pub(skA),Nc_6526,a_6525)) at {18} in copy a

event(beginCli(B,A,(Login(pub(skB)),Passwd(skB,pub(skA))))) at {20} in copy a

out(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB,pub(skA)))) at {22} in copy a

in(c, (ActivateSessionResponse,a_6524)) at {23} in copy a

event(endCli(A,B,Nc_6526)) at {26} in copy a

The event endCli(A,B,Nc_6526) is executed.
A trace has been found.
RESULT event(endCli(X,Y,N)) ==> event(beginSrv(X,Y,N)) is false.
-- Query event(endSrv(X_6772,Y_6773,N_6774)) ==> event(beginCli(X_6772,Y_6773,N_6774))
Completing...
200 rules inserted. The rule base contains 110 rules. 34 rules in the queue.
400 rules inserted. The rule base contains 124 rules. 39 rules in the queue.
Starting query event(endSrv(X_6772,Y_6773,N_6774)) ==> event(beginCli(X_6772,Y_6773,N_6774))
goal reachable: begin(beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[]))))) -> end(endSrv(A[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[])))))
Abbreviations:
Nc_12495 = Nc[Sess = A[],Cli = B[],!1 = @sid_12470]
ch_12496 = ch[!1 = @sid_12490]
K_12497 = K[Sess = A[],Cli = A[],!1 = @sid_12490]

1. The attacker initially knows A[].
attacker(A[]).

2. By 1, the attacker may know A[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (A[],A[]).
attacker((A[],A[])).

3. The message (A[],A[]) that the attacker may have by 2 may be received at input {7}.
So the message (A[],A[],K_12497) may be sent on channel ch_12496 at output {9}.
mess(ch_12496,(A[],A[],K_12497)).

4. The attacker has some term Nc_12489.
attacker(Nc_12489).

5. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

6. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

7. By 6, the attacker may know CreateSessionRequest.
By 5, the attacker may know pub(skA[]).
By 4, the attacker may know Nc_12489.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_12489).
attacker((CreateSessionRequest,pub(skA[]),Nc_12489)).

8. The attacker initially knows B[].
attacker(B[]).

9. By 8, the attacker may know B[].
By 1, the attacker may know A[].
Using the function 2-tuple the attacker may obtain (B[],A[]).
attacker((B[],A[])).

10. The attacker has some term Ns_12471.
attacker(Ns_12471).

11. The message (B[],A[]) that the attacker may have by 9 may be received at input {7}.
So the message (CreateSessionRequest,pub(skB[]),Nc_12495) may be sent to the attacker at output {17}.
attacker((CreateSessionRequest,pub(skB[]),Nc_12495)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skB[]),Nc_12495).
Using the function 3-proj-3-tuple the attacker may obtain Nc_12495.
attacker(Nc_12495).

13. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

14. By 13, the attacker may know CreateSessionResponse.
By 5, the attacker may know pub(skA[]).
By 12, the attacker may know Nc_12495.
By 10, the attacker may know Ns_12471.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skA[]),Nc_12495,Ns_12471).
attacker((CreateSessionResponse,pub(skA[]),Nc_12495,Ns_12471)).

15. The message (B[],A[]) that the attacker may have by 9 may be received at input {7}.
The message (CreateSessionResponse,pub(skA[]),Nc_12495,Ns_12471) that the attacker may have by 14 may be received at input {18}.
The event beginCli(B[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[])))) may be executed at {20}.
So the message (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[],pub(skA[]))) may be sent to the attacker at output {22}.
attacker((ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[],pub(skA[])))).

16. By 15, the attacker may know (ActivateSessionRequest,pub(skB[]),Login(pub(skB[])),Passwd(skB[],pub(skA[]))).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skB[],pub(skA[])).
attacker(Passwd(skB[],pub(skA[]))).

17. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

18. By 17, the attacker may know pub(skB[]).
Using the function Login the attacker may obtain Login(pub(skB[])).
attacker(Login(pub(skB[]))).

19. Using the function ActivateSessionRequest the attacker may obtain ActivateSessionRequest.
attacker(ActivateSessionRequest).

20. By 19, the attacker may know ActivateSessionRequest.
By 5, the attacker may know pub(skA[]).
By 18, the attacker may know Login(pub(skB[])).
By 16, the attacker may know Passwd(skB[],pub(skA[])).
Using the function 4-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),Login(pub(skB[])),Passwd(skB[],pub(skA[]))).
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skB[])),Passwd(skB[],pub(skA[])))).

21. The message (A[],A[],K_12497) that may be sent on channel ch_12496 by 3 may be received at input {27}.
The message (CreateSessionRequest,pub(skA[]),Nc_12489) that the attacker may have by 7 may be received at input {33}.
The message (ActivateSessionRequest,pub(skA[]),Login(pub(skB[])),Passwd(skB[],pub(skA[]))) that the attacker may have by 20 may be received at input {39}.
So event endSrv(A[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[])))) may be executed at {46}.
end(endSrv(A[],A[],(Login(pub(skB[])),Passwd(skB[],pub(skA[]))))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_12503 at {6} in copy a_12501

new ch creating ch_12611 at {6} in copy a_12498

in(c, (B,A)) at {7} in copy a_12498

new K creating K_12625 at {8} in copy a_12498

out(ch_12611, (B,A,K_12625)) at {9} in copy a_12498 received at {27} in copy a_12498

out(c, K_12625) at {32} in copy a_12498

out(c, K_12625) at {14} in copy a_12498

new Nc creating Nc_12502 at {15} in copy a_12498

out(c, (CreateSessionRequest,pub(skB),Nc_12502)) at {17} in copy a_12498

in(c, (CreateSessionResponse,pub(skA),Nc_12502,a_12499)) at {18} in copy a_12498

event(beginCli(B,A,(Login(pub(skB)),Passwd(skB,pub(skA))))) at {20} in copy a_12498

out(c, (ActivateSessionRequest,pub(skB),Login(pub(skB)),Passwd(skB,pub(skA)))) at {22} in copy a_12498

in(c, (A,A)) at {7} in copy a_12501

new K creating K_12504 at {8} in copy a_12501

out(ch_12503, (A,A,K_12504)) at {9} in copy a_12501 received at {27} in copy a_12501

out(c, K_12504) at {32} in copy a_12501

out(c, K_12504) at {14} in copy a_12501

new Nc creating Nc_12906 at {15} in copy a_12501

out(c, (CreateSessionRequest,pub(skA),Nc_12906)) at {17} in copy a_12501

in(c, (CreateSessionRequest,pub(skA),a_12500)) at {33} in copy a_12501

new Ns_89 creating Ns_12928 at {35} in copy a_12501

event(beginSrv(A,A,a_12500)) at {36} in copy a_12501

out(c, (CreateSessionResponse,pub(skA),a_12500,Ns_12928)) at {38} in copy a_12501

in(c, (ActivateSessionRequest,pub(skA),Login(pub(skB)),Passwd(skB,pub(skA)))) at {39} in copy a_12501

new Ns2_92 creating Ns2_12945 at {42} in copy a_12501

out(c, (ActivateSessionResponse,Ns2_12945)) at {44} in copy a_12501

event(endSrv(A,A,(Login(pub(skB)),Passwd(skB,pub(skA))))) at {46} in copy a_12501

The event endSrv(A,A,(Login(pub(skB)),Passwd(skB,pub(skA)))) is executed.
A trace has been found.
RESULT event(endSrv(X_6772,Y_6773,N_6774)) ==> event(beginCli(X_6772,Y_6773,N_6774)) is false.
-- Query not attacker(Passwd(skA[],pub(skB[])))
Completing...
200 rules inserted. The rule base contains 97 rules. 27 rules in the queue.
400 rules inserted. The rule base contains 131 rules. 18 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skB[])))
goal reachable: attacker(Passwd(skA[],pub(skB[])))
Abbreviations:
Nc_17855 = Nc[Sess = B[],Cli = A[],!1 = @sid_17849]

1. The attacker initially knows B[].
attacker(B[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know B[].
Using the function 2-tuple the attacker may obtain (A[],B[]).
attacker((A[],B[])).

4. The attacker has some term Ns_17850.
attacker(Ns_17850).

5. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
So the message (CreateSessionRequest,pub(skA[]),Nc_17855) may be sent to the attacker at output {17}.
attacker((CreateSessionRequest,pub(skA[]),Nc_17855)).

6. By 5, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_17855).
Using the function 3-proj-3-tuple the attacker may obtain Nc_17855.
attacker(Nc_17855).

7. The message pub(skB[]) may be sent to the attacker at output {4}.
attacker(pub(skB[])).

8. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

9. By 8, the attacker may know CreateSessionResponse.
By 7, the attacker may know pub(skB[]).
By 6, the attacker may know Nc_17855.
By 4, the attacker may know Ns_17850.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skB[]),Nc_17855,Ns_17850).
attacker((CreateSessionResponse,pub(skB[]),Nc_17855,Ns_17850)).

10. The message (A[],B[]) that the attacker may have by 3 may be received at input {7}.
The message (CreateSessionResponse,pub(skB[]),Nc_17855,Ns_17850) that the attacker may have by 9 may be received at input {18}.
So the message (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))) may be sent to the attacker at output {22}.
attacker((ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[])))).

11. By 10, the attacker may know (ActivateSessionRequest,pub(skA[]),Login(pub(skA[])),Passwd(skA[],pub(skB[]))).
Using the function 4-proj-4-tuple the attacker may obtain Passwd(skA[],pub(skB[])).
attacker(Passwd(skA[],pub(skB[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

new ch creating ch_17939 at {6} in copy a_17856

in(c, (A,B)) at {7} in copy a_17856

new K creating K_17953 at {8} in copy a_17856

out(ch_17939, (A,B,K_17953)) at {9} in copy a_17856 received at {27} in copy a_17856

out(c, K_17953) at {32} in copy a_17856

out(c, K_17953) at {14} in copy a_17856

new Nc creating Nc_17858 at {15} in copy a_17856

out(c, (CreateSessionRequest,pub(skA),Nc_17858)) at {17} in copy a_17856

in(c, (CreateSessionResponse,pub(skB),Nc_17858,a_17857)) at {18} in copy a_17856

event(beginCli(A,B,(Login(pub(skA)),Passwd(skA,pub(skB))))) at {20} in copy a_17856

out(c, (ActivateSessionRequest,pub(skA),Login(pub(skA)),Passwd(skA,pub(skB)))) at {22} in copy a_17856

The attacker has the message Passwd(skA,pub(skB)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skB[]))) is false.
