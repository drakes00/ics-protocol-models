Process:
{1}let pkA: bitstring = pub(skA) in
{2}out(c, pkA);
{3}let pkB: bitstring = pub(skB) in
{4}out(c, pkB);
{5}let pkC: bitstring = pub(skC) in
{6}out(c, pkC);
{7}let pkD: bitstring = pub(skD) in
{8}out(c, pkD);
{9}!
{10}new ch: channel;
(
    {11}in(c, (Cli: host,Sess: host));
    {12}if ((Cli = C) || ((Cli = D) || ((Sess = A) || (Sess = B)))) then
        0
    else
        {13}new K: bitstring;
        {14}out(ch, (Cli,Sess,K));
        {15}let skCli: bitstring = (if (Cli = A) then skA else (if (Cli = B) then skB else fail-any)) in
        {16}let pkCli: bitstring = pub(skCli) in
        {17}let skSess: bitstring = (if (Sess = C) then skC else (if (Sess = D) then skD else sk(Sess))) in
        {18}let pkSess: bitstring = pub(skSess) in
        {19}let tmp: bitstring = (if ((Sess <> C) && (Sess <> D)) then K else CreateSessionRequest) in
        {20}out(c, tmp);
        {21}new Nc: bitstring;
        {22}let m1: bitstring = (CreateSessionRequest,pkCli,Nc) in
        {23}out(c, (m1,hmac(m1,K)));
        {24}in(c, (m2: bitstring,sigM2: bitstring));
        {25}if (verifyHmac(m2,sigM2,K) <> true) then
            0
        else
            {26}let (=CreateSessionResponse,=pkSess,sigNc: bitstring,Ns: bitstring) = m2 in
            {27}if (verifySign(h((pkCli,Nc)),sigNc,pkSess) <> true) then
                0
            else
                {28}event beginCliPass(Cli,Sess,(Login(pkCli),Passwd(skCli,pkSess)));
                {29}let sigNs: bitstring = sign(h((pkSess,Ns)),skCli) in
                {30}event beginCliNonce(Cli,Sess,sigNs);
                {31}let m3: bitstring = (ActivateSessionRequest,pkCli,sigNs,Login(pkCli),Passwd(skCli,pkSess)) in
                {32}out(c, (m3,hmac(m3,K)));
                {33}in(c, (m4: bitstring,sigM4: bitstring));
                {34}if (verifyHmac(m4,sigM4,K) <> true) then
                    0
                else
                    {35}let (=ActivateSessionResponse,Ns2: bitstring) = m4 in
                    {36}if ((Sess = C) || (Sess = D)) then
                    {37}event endCliNonce(Sess,Cli,sigNc)
) | (
    {38}in(ch, (Cli_103: host,Sess_104: host,K_105: bitstring));
    {39}if ((Cli_103 = C) || ((Cli_103 = D) || ((Sess_104 = A) || (Sess_104 = B)))) then
        0
    else
        {40}let skCli_106: bitstring = (if (Cli_103 = A) then skA else (if (Cli_103 = B) then skB else sk(Cli_103))) in
        {41}let pkCli_107: bitstring = pub(skCli_106) in
        {42}let skSess_108: bitstring = (if (Sess_104 = C) then skC else (if (Sess_104 = D) then skD else fail-any)) in
        {43}let pkSess_109: bitstring = pub(skSess_108) in
        {44}let tmp_110: bitstring = (if ((Cli_103 <> A) && (Cli_103 <> B)) then K_105 else CreateSessionRequest) in
        {45}out(c, tmp_110);
        {46}in(c, (m1_111: bitstring,sigM1: bitstring));
        {47}if (verifyHmac(m1_111,sigM1,K_105) <> true) then
            0
        else
            {48}let (=CreateSessionRequest,=pkCli_107,Nc_112: bitstring) = m1_111 in
            {49}new Ns_113: bitstring;
            {50}let sigNc_114: bitstring = sign(h((pkCli_107,Nc_112)),skSess_108) in
            {51}event beginSrvNonce(Sess_104,Cli_103,sigNc_114);
            {52}let m2_115: bitstring = (CreateSessionResponse,pkSess_109,sigNc_114,Ns_113) in
            {53}out(c, (m2_115,hmac(m2_115,K_105)));
            {54}in(c, (m3_116: bitstring,sigM3: bitstring));
            {55}if (verifyHmac(m3_116,sigM3,K_105) <> true) then
                0
            else
                {56}let (=ActivateSessionRequest,=pkCli_107,sigNs_117: bitstring,login: bitstring,passwd: bitstring) = m3_116 in
                {57}if (verifySign(h((pkSess_109,Ns_113)),sigNs_117,pkCli_107) <> true) then
                    0
                else
                    {58}if (verifyCreds(skSess_108,login,passwd) <> true) then
                        0
                    else
                        {59}new Ns2_118: bitstring;
                        {60}let m4_119: bitstring = (ActivateSessionResponse,Ns2_118) in
                        {61}out(c, (m4_119,hmac(m4_119,K_105)));
                        {62}if ((Cli_103 = A) || (Cli_103 = B)) then
                        {63}event endSrvPass(Cli_103,Sess_104,(login,passwd));
                        {64}event endSrvNonce(Cli_103,Sess_104,sigNs_117)
)

-- Query event(endCliNonce(X,Y,N)) ==> event(beginSrvNonce(X,Y,N))
Completing...
200 rules inserted. The rule base contains 176 rules. 102 rules in the queue.
400 rules inserted. The rule base contains 304 rules. 47 rules in the queue.
600 rules inserted. The rule base contains 334 rules. 39 rules in the queue.
800 rules inserted. The rule base contains 382 rules. 44 rules in the queue.
1000 rules inserted. The rule base contains 403 rules. 16 rules in the queue.
Starting query event(endCliNonce(X,Y,N)) ==> event(beginSrvNonce(X,Y,N))
goal reachable: begin(beginSrvNonce(D[],B[],sign(h((pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_13756])),skD[]))) -> end(endCliNonce(D[],B[],sign(h((pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_13756])),skD[])))
goal reachable: begin(beginSrvNonce(C[],B[],sign(h((pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_13757])),skC[]))) -> end(endCliNonce(C[],B[],sign(h((pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_13757])),skC[])))
goal reachable: begin(beginSrvNonce(D[],A[],sign(h((pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_13758])),skD[]))) -> end(endCliNonce(D[],A[],sign(h((pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_13758])),skD[])))
goal reachable: begin(beginSrvNonce(C[],A[],sign(h((pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_13759])),skC[]))) -> end(endCliNonce(C[],A[],sign(h((pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_13759])),skC[])))
RESULT event(endCliNonce(X,Y,N)) ==> event(beginSrvNonce(X,Y,N)) is true.
-- Query event(endSrvNonce(X_13763,Y_13764,N_13765)) ==> event(beginCliNonce(X_13763,Y_13764,N_13765))
Completing...
200 rules inserted. The rule base contains 176 rules. 102 rules in the queue.
400 rules inserted. The rule base contains 309 rules. 42 rules in the queue.
600 rules inserted. The rule base contains 296 rules. 32 rules in the queue.
800 rules inserted. The rule base contains 360 rules. 60 rules in the queue.
1000 rules inserted. The rule base contains 440 rules. 22 rules in the queue.
Starting query event(endSrvNonce(X_13763,Y_13764,N_13765)) ==> event(beginCliNonce(X_13763,Y_13764,N_13765))
goal reachable: begin(beginCliNonce(B[],D[],sign(h((pub(skD[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_26697]),K[Sess = D[],Cli = B[],!1 = @sid_26697]),m1_111 = (CreateSessionRequest,pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_26697]),K_105 = K[Sess = D[],Cli = B[],!1 = @sid_26697],Sess_104 = D[],Cli_103 = B[],!1 = @sid_26697])),skB[]))) -> end(endSrvNonce(B[],D[],sign(h((pub(skD[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_26697]),K[Sess = D[],Cli = B[],!1 = @sid_26697]),m1_111 = (CreateSessionRequest,pub(skB[]),Nc[Sess = D[],Cli = B[],!1 = @sid_26697]),K_105 = K[Sess = D[],Cli = B[],!1 = @sid_26697],Sess_104 = D[],Cli_103 = B[],!1 = @sid_26697])),skB[])))
goal reachable: begin(beginCliNonce(B[],C[],sign(h((pub(skC[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_26698]),K[Sess = C[],Cli = B[],!1 = @sid_26698]),m1_111 = (CreateSessionRequest,pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_26698]),K_105 = K[Sess = C[],Cli = B[],!1 = @sid_26698],Sess_104 = C[],Cli_103 = B[],!1 = @sid_26698])),skB[]))) -> end(endSrvNonce(B[],C[],sign(h((pub(skC[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_26698]),K[Sess = C[],Cli = B[],!1 = @sid_26698]),m1_111 = (CreateSessionRequest,pub(skB[]),Nc[Sess = C[],Cli = B[],!1 = @sid_26698]),K_105 = K[Sess = C[],Cli = B[],!1 = @sid_26698],Sess_104 = C[],Cli_103 = B[],!1 = @sid_26698])),skB[])))
goal reachable: begin(beginCliNonce(A[],D[],sign(h((pub(skD[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_26699]),K[Sess = D[],Cli = A[],!1 = @sid_26699]),m1_111 = (CreateSessionRequest,pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_26699]),K_105 = K[Sess = D[],Cli = A[],!1 = @sid_26699],Sess_104 = D[],Cli_103 = A[],!1 = @sid_26699])),skA[]))) -> end(endSrvNonce(A[],D[],sign(h((pub(skD[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_26699]),K[Sess = D[],Cli = A[],!1 = @sid_26699]),m1_111 = (CreateSessionRequest,pub(skA[]),Nc[Sess = D[],Cli = A[],!1 = @sid_26699]),K_105 = K[Sess = D[],Cli = A[],!1 = @sid_26699],Sess_104 = D[],Cli_103 = A[],!1 = @sid_26699])),skA[])))
goal reachable: begin(beginCliNonce(A[],C[],sign(h((pub(skC[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_26700]),K[Sess = C[],Cli = A[],!1 = @sid_26700]),m1_111 = (CreateSessionRequest,pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_26700]),K_105 = K[Sess = C[],Cli = A[],!1 = @sid_26700],Sess_104 = C[],Cli_103 = A[],!1 = @sid_26700])),skA[]))) -> end(endSrvNonce(A[],C[],sign(h((pub(skC[]),Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_26700]),K[Sess = C[],Cli = A[],!1 = @sid_26700]),m1_111 = (CreateSessionRequest,pub(skA[]),Nc[Sess = C[],Cli = A[],!1 = @sid_26700]),K_105 = K[Sess = C[],Cli = A[],!1 = @sid_26700],Sess_104 = C[],Cli_103 = A[],!1 = @sid_26700])),skA[])))
RESULT event(endSrvNonce(X_13763,Y_13764,N_13765)) ==> event(beginCliNonce(X_13763,Y_13764,N_13765)) is true.
-- Query event(endSrvPass(X_26704,Y_26705,N_26706)) ==> event(beginCliPass(X_26704,Y_26705,N_26706))
Completing...
200 rules inserted. The rule base contains 176 rules. 102 rules in the queue.
400 rules inserted. The rule base contains 309 rules. 42 rules in the queue.
600 rules inserted. The rule base contains 288 rules. 32 rules in the queue.
800 rules inserted. The rule base contains 344 rules. 60 rules in the queue.
1000 rules inserted. The rule base contains 426 rules. 27 rules in the queue.
Starting query event(endSrvPass(X_26704,Y_26705,N_26706)) ==> event(beginCliPass(X_26704,Y_26705,N_26706))
goal reachable: begin(beginCliPass(B[],D[],(Login(pub(skB[])),Passwd(skB[],pub(skD[]))))) -> end(endSrvPass(B[],D[],(Login(pub(skB[])),Passwd(skB[],pub(skD[])))))
goal reachable: begin(beginCliPass(B[],C[],(Login(pub(skB[])),Passwd(skB[],pub(skC[]))))) -> end(endSrvPass(B[],C[],(Login(pub(skB[])),Passwd(skB[],pub(skC[])))))
goal reachable: begin(beginCliPass(A[],D[],(Login(pub(skA[])),Passwd(skA[],pub(skD[]))))) -> end(endSrvPass(A[],D[],(Login(pub(skA[])),Passwd(skA[],pub(skD[])))))
goal reachable: begin(beginCliPass(A[],C[],(Login(pub(skA[])),Passwd(skA[],pub(skC[]))))) -> end(endSrvPass(A[],C[],(Login(pub(skA[])),Passwd(skA[],pub(skC[])))))
RESULT event(endSrvPass(X_26704,Y_26705,N_26706)) ==> event(beginCliPass(X_26704,Y_26705,N_26706)) is true.
-- Query not attacker(Passwd(skA[],pub(skC[])))
Completing...
200 rules inserted. The rule base contains 176 rules. 100 rules in the queue.
400 rules inserted. The rule base contains 306 rules. 29 rules in the queue.
600 rules inserted. The rule base contains 274 rules. 28 rules in the queue.
800 rules inserted. The rule base contains 318 rules. 29 rules in the queue.
1000 rules inserted. The rule base contains 322 rules. 8 rules in the queue.
Starting query not attacker(Passwd(skA[],pub(skC[])))
goal reachable: attacker(Passwd(skA[],pub(skC[])))
Abbreviations:
Nc_49562 = Nc[Sess = C[],Cli = A[],!1 = @sid_49553]
K_49563 = K[Sess = C[],Cli = A[],!1 = @sid_49553]
Ns_49564 = Ns_113[sigM1 = hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563),m1_111 = (CreateSessionRequest,pub(skA[]),Nc_49562),K_105 = K_49563,Sess_104 = C[],Cli_103 = A[],!1 = @sid_49553]
ch_49565 = ch[!1 = @sid_49553]

1. The attacker initially knows C[].
attacker(C[]).

2. The attacker initially knows A[].
attacker(A[]).

3. By 2, the attacker may know A[].
By 1, the attacker may know C[].
Using the function 2-tuple the attacker may obtain (A[],C[]).
attacker((A[],C[])).

4. The message (A[],C[]) that the attacker may have by 3 may be received at input {11}.
We have C[] <> B[] & C[] <> A[] & A[] <> D[] & A[] <> C[].
So the message (A[],C[],K_49563) may be sent on channel ch_49565 at output {14}.
mess(ch_49565,(A[],C[],K_49563)).

5. The message (A[],C[]) that the attacker may have by 3 may be received at input {11}.
So the message ((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)) may be sent to the attacker at output {23}.
attacker(((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563))).

6. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)).
Using the function 2-proj-2-tuple the attacker may obtain hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563).
attacker(hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)).

7. By 5, the attacker may know ((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_49562).
attacker((CreateSessionRequest,pub(skA[]),Nc_49562)).

8. By 7, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_49562).
Using the function 3-proj-3-tuple the attacker may obtain Nc_49562.
attacker(Nc_49562).

9. The message pub(skA[]) may be sent to the attacker at output {2}.
attacker(pub(skA[])).

10. Using the function CreateSessionRequest the attacker may obtain CreateSessionRequest.
attacker(CreateSessionRequest).

11. By 10, the attacker may know CreateSessionRequest.
By 9, the attacker may know pub(skA[]).
By 8, the attacker may know Nc_49562.
Using the function 3-tuple the attacker may obtain (CreateSessionRequest,pub(skA[]),Nc_49562).
attacker((CreateSessionRequest,pub(skA[]),Nc_49562)).

12. By 11, the attacker may know (CreateSessionRequest,pub(skA[]),Nc_49562).
By 6, the attacker may know hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563).
Using the function 2-tuple the attacker may obtain ((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)).
attacker(((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563))).

13. The message (A[],C[],K_49563) that may be sent on channel ch_49565 by 4 may be received at input {38}.
The message ((CreateSessionRequest,pub(skA[]),Nc_49562),hmac((CreateSessionRequest,pub(skA[]),Nc_49562),K_49563)) that the attacker may have by 12 may be received at input {46}.
So the message ((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)) may be sent to the attacker at output {53}.
attacker(((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563))).

14. By 13, the attacker may know ((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)).
Using the function 2-proj-2-tuple the attacker may obtain hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563).
attacker(hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)).

15. By 13, the attacker may know ((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)).
Using the function 1-proj-2-tuple the attacker may obtain (CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564).
attacker((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564)).

16. By 15, the attacker may know (CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564).
Using the function 4-proj-4-tuple the attacker may obtain Ns_49564.
attacker(Ns_49564).

17. By 15, the attacker may know (CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564).
Using the function 3-proj-4-tuple the attacker may obtain sign(h((pub(skA[]),Nc_49562)),skC[]).
attacker(sign(h((pub(skA[]),Nc_49562)),skC[])).

18. The message pub(skC[]) may be sent to the attacker at output {6}.
attacker(pub(skC[])).

19. Using the function CreateSessionResponse the attacker may obtain CreateSessionResponse.
attacker(CreateSessionResponse).

20. By 19, the attacker may know CreateSessionResponse.
By 18, the attacker may know pub(skC[]).
By 17, the attacker may know sign(h((pub(skA[]),Nc_49562)),skC[]).
By 16, the attacker may know Ns_49564.
Using the function 4-tuple the attacker may obtain (CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564).
attacker((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564)).

21. By 20, the attacker may know (CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564).
By 14, the attacker may know hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563).
Using the function 2-tuple the attacker may obtain ((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)).
attacker(((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563))).

22. The message (A[],C[]) that the attacker may have by 3 may be received at input {11}.
The message ((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),hmac((CreateSessionResponse,pub(skC[]),sign(h((pub(skA[]),Nc_49562)),skC[]),Ns_49564),K_49563)) that the attacker may have by 21 may be received at input {24}.
So the message ((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),hmac((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),K_49563)) may be sent to the attacker at output {32}.
attacker(((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),hmac((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),K_49563))).

23. By 22, the attacker may know ((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),hmac((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))),K_49563)).
Using the function 1-proj-2-tuple the attacker may obtain (ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))).
attacker((ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[])))).

24. By 23, the attacker may know (ActivateSessionRequest,pub(skA[]),sign(h((pub(skC[]),Ns_49564)),skA[]),Login(pub(skA[])),Passwd(skA[],pub(skC[]))).
Using the function 5-proj-5-tuple the attacker may obtain Passwd(skA[],pub(skC[])).
attacker(Passwd(skA[],pub(skC[]))).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(c, pub(skA)) at {2}

out(c, pub(skB)) at {4}

out(c, pub(skC)) at {6}

out(c, pub(skD)) at {8}

new ch creating ch_49569 at {10} in copy a

in(c, (A,C)) at {11} in copy a

new K creating K_49567 at {13} in copy a

out(ch_49569, (A,C,K_49567)) at {14} in copy a received at {38} in copy a

out(c, CreateSessionRequest) at {45} in copy a

out(c, CreateSessionRequest) at {20} in copy a

new Nc creating Nc_49566 at {21} in copy a

out(c, ((CreateSessionRequest,pub(skA),Nc_49566),hmac((CreateSessionRequest,pub(skA),Nc_49566),K_49567))) at {23} in copy a

in(c, ((CreateSessionRequest,pub(skA),Nc_49566),hmac((CreateSessionRequest,pub(skA),Nc_49566),K_49567))) at {46} in copy a

new Ns_113 creating Ns_49568 at {49} in copy a

event(beginSrvNonce(C,A,sign(h((pub(skA),Nc_49566)),skC))) at {51} in copy a

out(c, ((CreateSessionResponse,pub(skC),sign(h((pub(skA),Nc_49566)),skC),Ns_49568),hmac((CreateSessionResponse,pub(skC),sign(h((pub(skA),Nc_49566)),skC),Ns_49568),K_49567))) at {53} in copy a

in(c, ((CreateSessionResponse,pub(skC),sign(h((pub(skA),Nc_49566)),skC),Ns_49568),hmac((CreateSessionResponse,pub(skC),sign(h((pub(skA),Nc_49566)),skC),Ns_49568),K_49567))) at {24} in copy a

event(beginCliPass(A,C,(Login(pub(skA)),Passwd(skA,pub(skC))))) at {28} in copy a

event(beginCliNonce(A,C,sign(h((pub(skC),Ns_49568)),skA))) at {30} in copy a

out(c, ((ActivateSessionRequest,pub(skA),sign(h((pub(skC),Ns_49568)),skA),Login(pub(skA)),Passwd(skA,pub(skC))),hmac((ActivateSessionRequest,pub(skA),sign(h((pub(skC),Ns_49568)),skA),Login(pub(skA)),Passwd(skA,pub(skC))),K_49567))) at {32} in copy a

The attacker has the message Passwd(skA,pub(skC)).
A trace has been found.
RESULT not attacker(Passwd(skA[],pub(skC[]))) is false.
